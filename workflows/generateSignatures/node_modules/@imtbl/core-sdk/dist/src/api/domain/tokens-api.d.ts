/**
 * Immutable X API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1
 * Contact: support@immutable.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
import { Configuration } from '../configuration';
import { RequestArgs, BaseAPI } from '../base';
import { ListTokensResponse } from '../models';
import { TokenDetails } from '../models';
/**
 * TokensApi - axios parameter creator
 * @export
 */
export declare const TokensApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Get details of a token
     * @summary Get details of a token
     * @param {string} address Token Contract Address
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getToken: (address: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get a list of tokens
     * @summary Get a list of tokens
     * @param {string} [address] Contract address of the token
     * @param {string} [symbols] Token symbols for the token, e.g. ?symbols&#x3D;IMX,ETH
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listTokens: (address?: string, symbols?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * TokensApi - functional programming interface
 * @export
 */
export declare const TokensApiFp: (configuration?: Configuration) => {
    /**
     * Get details of a token
     * @summary Get details of a token
     * @param {string} address Token Contract Address
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getToken(address: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<TokenDetails>>;
    /**
     * Get a list of tokens
     * @summary Get a list of tokens
     * @param {string} [address] Contract address of the token
     * @param {string} [symbols] Token symbols for the token, e.g. ?symbols&#x3D;IMX,ETH
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listTokens(address?: string, symbols?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ListTokensResponse>>;
};
/**
 * TokensApi - factory interface
 * @export
 */
export declare const TokensApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Get details of a token
     * @summary Get details of a token
     * @param {string} address Token Contract Address
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getToken(address: string, options?: any): AxiosPromise<TokenDetails>;
    /**
     * Get a list of tokens
     * @summary Get a list of tokens
     * @param {string} [address] Contract address of the token
     * @param {string} [symbols] Token symbols for the token, e.g. ?symbols&#x3D;IMX,ETH
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listTokens(address?: string, symbols?: string, options?: any): AxiosPromise<ListTokensResponse>;
};
/**
 * Request parameters for getToken operation in TokensApi.
 * @export
 * @interface TokensApiGetTokenRequest
 */
export interface TokensApiGetTokenRequest {
    /**
     * Token Contract Address
     * @type {string}
     * @memberof TokensApiGetToken
     */
    readonly address: string;
}
/**
 * Request parameters for listTokens operation in TokensApi.
 * @export
 * @interface TokensApiListTokensRequest
 */
export interface TokensApiListTokensRequest {
    /**
     * Contract address of the token
     * @type {string}
     * @memberof TokensApiListTokens
     */
    readonly address?: string;
    /**
     * Token symbols for the token, e.g. ?symbols&#x3D;IMX,ETH
     * @type {string}
     * @memberof TokensApiListTokens
     */
    readonly symbols?: string;
}
/**
 * TokensApi - object-oriented interface
 * @export
 * @class TokensApi
 * @extends {BaseAPI}
 */
export declare class TokensApi extends BaseAPI {
    /**
     * Get details of a token
     * @summary Get details of a token
     * @param {TokensApiGetTokenRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TokensApi
     */
    getToken(requestParameters: TokensApiGetTokenRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<TokenDetails, any>>;
    /**
     * Get a list of tokens
     * @summary Get a list of tokens
     * @param {TokensApiListTokensRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TokensApi
     */
    listTokens(requestParameters?: TokensApiListTokensRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<ListTokensResponse, any>>;
}
