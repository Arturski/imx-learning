/**
 * Immutable X API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1
 * Contact: support@immutable.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
import { Configuration } from '../configuration';
import { RequestArgs, BaseAPI } from '../base';
import { Balance } from '../models';
import { ListBalancesResponse } from '../models';
/**
 * BalancesApi - axios parameter creator
 * @export
 */
export declare const BalancesApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Fetches the token balances of the user
     * @summary Fetches the token balances of the user
     * @param {string} owner Address of the owner/user
     * @param {string} address Token address
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getBalance: (owner: string, address: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get a list of balances for given user
     * @summary Get a list of balances for given user
     * @param {string} owner Ethereum wallet address for user
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listBalances: (owner: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * BalancesApi - functional programming interface
 * @export
 */
export declare const BalancesApiFp: (configuration?: Configuration) => {
    /**
     * Fetches the token balances of the user
     * @summary Fetches the token balances of the user
     * @param {string} owner Address of the owner/user
     * @param {string} address Token address
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getBalance(owner: string, address: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Balance>>;
    /**
     * Get a list of balances for given user
     * @summary Get a list of balances for given user
     * @param {string} owner Ethereum wallet address for user
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listBalances(owner: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ListBalancesResponse>>;
};
/**
 * BalancesApi - factory interface
 * @export
 */
export declare const BalancesApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Fetches the token balances of the user
     * @summary Fetches the token balances of the user
     * @param {string} owner Address of the owner/user
     * @param {string} address Token address
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getBalance(owner: string, address: string, options?: any): AxiosPromise<Balance>;
    /**
     * Get a list of balances for given user
     * @summary Get a list of balances for given user
     * @param {string} owner Ethereum wallet address for user
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listBalances(owner: string, options?: any): AxiosPromise<ListBalancesResponse>;
};
/**
 * Request parameters for getBalance operation in BalancesApi.
 * @export
 * @interface BalancesApiGetBalanceRequest
 */
export interface BalancesApiGetBalanceRequest {
    /**
     * Address of the owner/user
     * @type {string}
     * @memberof BalancesApiGetBalance
     */
    readonly owner: string;
    /**
     * Token address
     * @type {string}
     * @memberof BalancesApiGetBalance
     */
    readonly address: string;
}
/**
 * Request parameters for listBalances operation in BalancesApi.
 * @export
 * @interface BalancesApiListBalancesRequest
 */
export interface BalancesApiListBalancesRequest {
    /**
     * Ethereum wallet address for user
     * @type {string}
     * @memberof BalancesApiListBalances
     */
    readonly owner: string;
}
/**
 * BalancesApi - object-oriented interface
 * @export
 * @class BalancesApi
 * @extends {BaseAPI}
 */
export declare class BalancesApi extends BaseAPI {
    /**
     * Fetches the token balances of the user
     * @summary Fetches the token balances of the user
     * @param {BalancesApiGetBalanceRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BalancesApi
     */
    getBalance(requestParameters: BalancesApiGetBalanceRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<Balance, any>>;
    /**
     * Get a list of balances for given user
     * @summary Get a list of balances for given user
     * @param {BalancesApiListBalancesRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BalancesApi
     */
    listBalances(requestParameters: BalancesApiListBalancesRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<ListBalancesResponse, any>>;
}
