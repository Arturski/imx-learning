/**
 * Immutable X API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1
 * Contact: support@immutable.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
import { Configuration } from '../configuration';
import { RequestArgs, BaseAPI } from '../base';
import { Deposit } from '../models';
import { GetSignableDepositRequest } from '../models';
import { GetSignableDepositResponse } from '../models';
import { ListDepositsResponse } from '../models';
/**
 * DepositsApi - axios parameter creator
 * @export
 */
export declare const DepositsApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Get details of a deposit with the given ID
     * @summary Get details of a deposit with the given ID
     * @param {string} id Deposit ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getDeposit: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Gets details of a signable deposit
     * @summary Gets details of a signable deposit
     * @param {GetSignableDepositRequest} getSignableDepositRequest Get details of signable deposit
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSignableDeposit: (getSignableDepositRequest: GetSignableDepositRequest, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get a list of deposits
     * @summary Get a list of deposits
     * @param {number} [pageSize] Page size of the result
     * @param {string} [cursor] Cursor
     * @param {string} [orderBy] Property to sort by
     * @param {string} [direction] Direction to sort (asc/desc)
     * @param {string} [user] Ethereum address of the user who submitted this deposit
     * @param {string} [status] Status of this deposit
     * @param {string} [updatedMinTimestamp] Minimum timestamp for this deposit, in ISO 8601 UTC format. Example: \&#39;2022-05-27T00:10:22Z\&#39;
     * @param {string} [updatedMaxTimestamp] Maximum timestamp for this deposit, in ISO 8601 UTC format. Example: \&#39;2022-05-27T00:10:22Z\&#39;
     * @param {string} [tokenType] Token type of the deposited asset
     * @param {string} [tokenId] ERC721 Token ID of the minted asset
     * @param {string} [assetId] Internal IMX ID of the minted asset
     * @param {string} [tokenAddress] Token address of the deposited asset
     * @param {string} [tokenName] Token name of the deposited asset
     * @param {string} [minQuantity] Min quantity for the deposited asset
     * @param {string} [maxQuantity] Max quantity for the deposited asset
     * @param {string} [metadata] JSON-encoded metadata filters for the deposited asset
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listDeposits: (pageSize?: number, cursor?: string, orderBy?: string, direction?: string, user?: string, status?: string, updatedMinTimestamp?: string, updatedMaxTimestamp?: string, tokenType?: string, tokenId?: string, assetId?: string, tokenAddress?: string, tokenName?: string, minQuantity?: string, maxQuantity?: string, metadata?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * DepositsApi - functional programming interface
 * @export
 */
export declare const DepositsApiFp: (configuration?: Configuration) => {
    /**
     * Get details of a deposit with the given ID
     * @summary Get details of a deposit with the given ID
     * @param {string} id Deposit ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getDeposit(id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Deposit>>;
    /**
     * Gets details of a signable deposit
     * @summary Gets details of a signable deposit
     * @param {GetSignableDepositRequest} getSignableDepositRequest Get details of signable deposit
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSignableDeposit(getSignableDepositRequest: GetSignableDepositRequest, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetSignableDepositResponse>>;
    /**
     * Get a list of deposits
     * @summary Get a list of deposits
     * @param {number} [pageSize] Page size of the result
     * @param {string} [cursor] Cursor
     * @param {string} [orderBy] Property to sort by
     * @param {string} [direction] Direction to sort (asc/desc)
     * @param {string} [user] Ethereum address of the user who submitted this deposit
     * @param {string} [status] Status of this deposit
     * @param {string} [updatedMinTimestamp] Minimum timestamp for this deposit, in ISO 8601 UTC format. Example: \&#39;2022-05-27T00:10:22Z\&#39;
     * @param {string} [updatedMaxTimestamp] Maximum timestamp for this deposit, in ISO 8601 UTC format. Example: \&#39;2022-05-27T00:10:22Z\&#39;
     * @param {string} [tokenType] Token type of the deposited asset
     * @param {string} [tokenId] ERC721 Token ID of the minted asset
     * @param {string} [assetId] Internal IMX ID of the minted asset
     * @param {string} [tokenAddress] Token address of the deposited asset
     * @param {string} [tokenName] Token name of the deposited asset
     * @param {string} [minQuantity] Min quantity for the deposited asset
     * @param {string} [maxQuantity] Max quantity for the deposited asset
     * @param {string} [metadata] JSON-encoded metadata filters for the deposited asset
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listDeposits(pageSize?: number, cursor?: string, orderBy?: string, direction?: string, user?: string, status?: string, updatedMinTimestamp?: string, updatedMaxTimestamp?: string, tokenType?: string, tokenId?: string, assetId?: string, tokenAddress?: string, tokenName?: string, minQuantity?: string, maxQuantity?: string, metadata?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ListDepositsResponse>>;
};
/**
 * DepositsApi - factory interface
 * @export
 */
export declare const DepositsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Get details of a deposit with the given ID
     * @summary Get details of a deposit with the given ID
     * @param {string} id Deposit ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getDeposit(id: string, options?: any): AxiosPromise<Deposit>;
    /**
     * Gets details of a signable deposit
     * @summary Gets details of a signable deposit
     * @param {GetSignableDepositRequest} getSignableDepositRequest Get details of signable deposit
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSignableDeposit(getSignableDepositRequest: GetSignableDepositRequest, options?: any): AxiosPromise<GetSignableDepositResponse>;
    /**
     * Get a list of deposits
     * @summary Get a list of deposits
     * @param {number} [pageSize] Page size of the result
     * @param {string} [cursor] Cursor
     * @param {string} [orderBy] Property to sort by
     * @param {string} [direction] Direction to sort (asc/desc)
     * @param {string} [user] Ethereum address of the user who submitted this deposit
     * @param {string} [status] Status of this deposit
     * @param {string} [updatedMinTimestamp] Minimum timestamp for this deposit, in ISO 8601 UTC format. Example: \&#39;2022-05-27T00:10:22Z\&#39;
     * @param {string} [updatedMaxTimestamp] Maximum timestamp for this deposit, in ISO 8601 UTC format. Example: \&#39;2022-05-27T00:10:22Z\&#39;
     * @param {string} [tokenType] Token type of the deposited asset
     * @param {string} [tokenId] ERC721 Token ID of the minted asset
     * @param {string} [assetId] Internal IMX ID of the minted asset
     * @param {string} [tokenAddress] Token address of the deposited asset
     * @param {string} [tokenName] Token name of the deposited asset
     * @param {string} [minQuantity] Min quantity for the deposited asset
     * @param {string} [maxQuantity] Max quantity for the deposited asset
     * @param {string} [metadata] JSON-encoded metadata filters for the deposited asset
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listDeposits(pageSize?: number, cursor?: string, orderBy?: string, direction?: string, user?: string, status?: string, updatedMinTimestamp?: string, updatedMaxTimestamp?: string, tokenType?: string, tokenId?: string, assetId?: string, tokenAddress?: string, tokenName?: string, minQuantity?: string, maxQuantity?: string, metadata?: string, options?: any): AxiosPromise<ListDepositsResponse>;
};
/**
 * Request parameters for getDeposit operation in DepositsApi.
 * @export
 * @interface DepositsApiGetDepositRequest
 */
export interface DepositsApiGetDepositRequest {
    /**
     * Deposit ID
     * @type {string}
     * @memberof DepositsApiGetDeposit
     */
    readonly id: string;
}
/**
 * Request parameters for getSignableDeposit operation in DepositsApi.
 * @export
 * @interface DepositsApiGetSignableDepositRequest
 */
export interface DepositsApiGetSignableDepositRequest {
    /**
     * Get details of signable deposit
     * @type {GetSignableDepositRequest}
     * @memberof DepositsApiGetSignableDeposit
     */
    readonly getSignableDepositRequest: GetSignableDepositRequest;
}
/**
 * Request parameters for listDeposits operation in DepositsApi.
 * @export
 * @interface DepositsApiListDepositsRequest
 */
export interface DepositsApiListDepositsRequest {
    /**
     * Page size of the result
     * @type {number}
     * @memberof DepositsApiListDeposits
     */
    readonly pageSize?: number;
    /**
     * Cursor
     * @type {string}
     * @memberof DepositsApiListDeposits
     */
    readonly cursor?: string;
    /**
     * Property to sort by
     * @type {string}
     * @memberof DepositsApiListDeposits
     */
    readonly orderBy?: string;
    /**
     * Direction to sort (asc/desc)
     * @type {string}
     * @memberof DepositsApiListDeposits
     */
    readonly direction?: string;
    /**
     * Ethereum address of the user who submitted this deposit
     * @type {string}
     * @memberof DepositsApiListDeposits
     */
    readonly user?: string;
    /**
     * Status of this deposit
     * @type {string}
     * @memberof DepositsApiListDeposits
     */
    readonly status?: string;
    /**
     * Minimum timestamp for this deposit, in ISO 8601 UTC format. Example: \&#39;2022-05-27T00:10:22Z\&#39;
     * @type {string}
     * @memberof DepositsApiListDeposits
     */
    readonly updatedMinTimestamp?: string;
    /**
     * Maximum timestamp for this deposit, in ISO 8601 UTC format. Example: \&#39;2022-05-27T00:10:22Z\&#39;
     * @type {string}
     * @memberof DepositsApiListDeposits
     */
    readonly updatedMaxTimestamp?: string;
    /**
     * Token type of the deposited asset
     * @type {string}
     * @memberof DepositsApiListDeposits
     */
    readonly tokenType?: string;
    /**
     * ERC721 Token ID of the minted asset
     * @type {string}
     * @memberof DepositsApiListDeposits
     */
    readonly tokenId?: string;
    /**
     * Internal IMX ID of the minted asset
     * @type {string}
     * @memberof DepositsApiListDeposits
     */
    readonly assetId?: string;
    /**
     * Token address of the deposited asset
     * @type {string}
     * @memberof DepositsApiListDeposits
     */
    readonly tokenAddress?: string;
    /**
     * Token name of the deposited asset
     * @type {string}
     * @memberof DepositsApiListDeposits
     */
    readonly tokenName?: string;
    /**
     * Min quantity for the deposited asset
     * @type {string}
     * @memberof DepositsApiListDeposits
     */
    readonly minQuantity?: string;
    /**
     * Max quantity for the deposited asset
     * @type {string}
     * @memberof DepositsApiListDeposits
     */
    readonly maxQuantity?: string;
    /**
     * JSON-encoded metadata filters for the deposited asset
     * @type {string}
     * @memberof DepositsApiListDeposits
     */
    readonly metadata?: string;
}
/**
 * DepositsApi - object-oriented interface
 * @export
 * @class DepositsApi
 * @extends {BaseAPI}
 */
export declare class DepositsApi extends BaseAPI {
    /**
     * Get details of a deposit with the given ID
     * @summary Get details of a deposit with the given ID
     * @param {DepositsApiGetDepositRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DepositsApi
     */
    getDeposit(requestParameters: DepositsApiGetDepositRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<Deposit, any>>;
    /**
     * Gets details of a signable deposit
     * @summary Gets details of a signable deposit
     * @param {DepositsApiGetSignableDepositRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DepositsApi
     */
    getSignableDeposit(requestParameters: DepositsApiGetSignableDepositRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetSignableDepositResponse, any>>;
    /**
     * Get a list of deposits
     * @summary Get a list of deposits
     * @param {DepositsApiListDepositsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DepositsApi
     */
    listDeposits(requestParameters?: DepositsApiListDepositsRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<ListDepositsResponse, any>>;
}
