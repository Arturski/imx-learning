{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar ripemd160_1 = require(\"../ripemd160\");\nvar sha256_1 = require(\"../sha256\");\nexports.createHmac = require(\"create-hmac\");\nexports.randomBytes = require(\"randombytes\");\nvar Hash = /** @class */function () {\n  function Hash(hashFunction) {\n    this.hashFunction = hashFunction;\n    this.buffers = [];\n  }\n  Hash.prototype.update = function (buffer) {\n    if (!Buffer.isBuffer(buffer)) {\n      throw new Error(\"hdkey-crypto shim is outdated\");\n    }\n    this.buffers.push(buffer);\n    return this;\n  };\n  Hash.prototype.digest = function (param) {\n    if (param) {\n      throw new Error(\"hdkey-crypto shim is outdated\");\n    }\n    return this.hashFunction(Buffer.concat(this.buffers));\n  };\n  return Hash;\n}();\n// We don't use create-hash here, as it doesn't work well with Rollup\nexports.createHash = function (name) {\n  if (name === \"ripemd160\") {\n    return new Hash(ripemd160_1.ripemd160);\n  }\n  if (name === \"sha256\") {\n    return new Hash(sha256_1.sha256);\n  }\n  throw new Error(\"hdkey-crypto shim is outdated\");\n};","map":{"version":3,"sources":["../../src/pure/shims/hdkey-crypto.ts"],"names":[],"mappings":";;;;;AAAA,IAAA,WAAA,GAAA,OAAA,CAAA,cAAA,CAAA;AACA,IAAA,QAAA,GAAA,OAAA,CAAA,WAAA,CAAA;AAEa,OAAA,CAAA,UAAU,GAAG,OAAO,CAAC,aAAa,CAAC;AACnC,OAAA,CAAA,WAAW,GAAG,OAAO,CAAC,aAAa,CAAC;AAEjD,IAAA,IAAA,GAAA,aAAA,YAAA;EAGE,SAAA,IAAA,CAA6B,YAAqC,EAAA;IAArC,IAAA,CAAA,YAAY,GAAZ,YAAY;IAFjC,IAAA,CAAA,OAAO,GAAa,EAAE;EAEuC;EAE9D,IAAA,CAAA,SAAA,CAAA,MAAM,GAAb,UAAc,MAAc,EAAA;IAC1B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;MAC5B,MAAM,IAAI,KAAK,CAAC,+BAA+B,CAAC;IACjD;IAED,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC;IAEzB,OAAO,IAAI;EACb,CAAC;EAEM,IAAA,CAAA,SAAA,CAAA,MAAM,GAAb,UAAc,KAAU,EAAA;IACtB,IAAI,KAAK,EAAE;MACT,MAAM,IAAI,KAAK,CAAC,+BAA+B,CAAC;IACjD;IAED,OAAO,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;EACvD,CAAC;EACH,OAAA,IAAC;AAAD,CAAC,EAAA;AAED;AACa,OAAA,CAAA,UAAU,GAAG,UAAC,IAAY,EAAA;EACrC,IAAI,IAAI,KAAK,WAAW,EAAE;IACxB,OAAO,IAAI,IAAI,CAAC,WAAA,CAAA,SAAS,CAAC;EAC3B;EAED,IAAI,IAAI,KAAK,QAAQ,EAAE;IACrB,OAAO,IAAI,IAAI,CAAC,QAAA,CAAA,MAAM,CAAC;EACxB;EAED,MAAM,IAAI,KAAK,CAAC,+BAA+B,CAAC;AAClD,CAAC","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ripemd160_1 = require(\"../ripemd160\");\nvar sha256_1 = require(\"../sha256\");\nexports.createHmac = require(\"create-hmac\");\nexports.randomBytes = require(\"randombytes\");\nvar Hash = /** @class */ (function () {\n    function Hash(hashFunction) {\n        this.hashFunction = hashFunction;\n        this.buffers = [];\n    }\n    Hash.prototype.update = function (buffer) {\n        if (!Buffer.isBuffer(buffer)) {\n            throw new Error(\"hdkey-crypto shim is outdated\");\n        }\n        this.buffers.push(buffer);\n        return this;\n    };\n    Hash.prototype.digest = function (param) {\n        if (param) {\n            throw new Error(\"hdkey-crypto shim is outdated\");\n        }\n        return this.hashFunction(Buffer.concat(this.buffers));\n    };\n    return Hash;\n}());\n// We don't use create-hash here, as it doesn't work well with Rollup\nexports.createHash = function (name) {\n    if (name === \"ripemd160\") {\n        return new Hash(ripemd160_1.ripemd160);\n    }\n    if (name === \"sha256\") {\n        return new Hash(sha256_1.sha256);\n    }\n    throw new Error(\"hdkey-crypto shim is outdated\");\n};\n//# sourceMappingURL=hdkey-crypto.js.map"]},"metadata":{},"sourceType":"script"}