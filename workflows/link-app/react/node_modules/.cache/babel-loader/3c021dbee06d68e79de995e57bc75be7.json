{"ast":null,"code":"/**\n * Circular Shift Right\n *\n * @example\n * circularShiftRight([1,0,1,1,0,1]) => [1,1,0,1,1,0]\n *\n * @see {@link https://en.wikipedia.org/wiki/Circular_shift}\n *\n * @param {Array} bits input data\n * @param {number} amount how far should it be shifted\n * @return {Array} [ROR bits]\n */\nexport default (function (bits, amount) {\n  var result = [];\n  if (amount > bits.length) throw new Error('shift amount can’t be larger than bits array length');\n  for (var i = 0; i < bits.length; i++) result[(i + amount) % bits.length] = bits[i];\n  return result;\n});","map":{"version":3,"names":["bits","amount","result","length","Error","i"],"sources":["/Users/arthurfrancis/Documents/repo/imx-learning/workflows/link-app/react/node_modules/bitwise/esm/bits/circular-shift-right.js"],"sourcesContent":["/**\n * Circular Shift Right\n *\n * @example\n * circularShiftRight([1,0,1,1,0,1]) => [1,1,0,1,1,0]\n *\n * @see {@link https://en.wikipedia.org/wiki/Circular_shift}\n *\n * @param {Array} bits input data\n * @param {number} amount how far should it be shifted\n * @return {Array} [ROR bits]\n */\nexport default (function (bits, amount) {\n    var result = [];\n    if (amount > bits.length)\n        throw new Error('shift amount can’t be larger than bits array length');\n    for (var i = 0; i < bits.length; i++)\n        result[(i + amount) % bits.length] = bits[i];\n    return result;\n});\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,UAAUA,IAAI,EAAEC,MAAM,EAAE;EACpC,IAAIC,MAAM,GAAG,EAAE;EACf,IAAID,MAAM,GAAGD,IAAI,CAACG,MAAM,EACpB,MAAM,IAAIC,KAAK,CAAC,qDAAqD,CAAC;EAC1E,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,IAAI,CAACG,MAAM,EAAEE,CAAC,EAAE,EAChCH,MAAM,CAAC,CAACG,CAAC,GAAGJ,MAAM,IAAID,IAAI,CAACG,MAAM,CAAC,GAAGH,IAAI,CAACK,CAAC,CAAC;EAChD,OAAOH,MAAM;AACjB,CAAC"},"metadata":{},"sourceType":"module"}