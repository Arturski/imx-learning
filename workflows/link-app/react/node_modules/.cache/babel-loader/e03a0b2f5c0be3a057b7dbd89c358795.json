{"ast":null,"code":"import { identity, pipe, bind_, bindTo_, flow } from './function';\nimport * as O from './Option';\nimport { fromCompare, getMonoid as getOrdMonoid, ordNumber } from './Ord';\n// -------------------------------------------------------------------------------------\n// model\n// -------------------------------------------------------------------------------------\n/**\n * @category constructors\n * @since 2.5.0\n */\n// tslint:disable-next-line: readonly-array\nexport function fromArray(as) {\n  var l = as.length;\n  if (l === 0) {\n    return empty;\n  }\n  var ras = Array(l);\n  for (var i = 0; i < l; i++) {\n    ras[i] = as[i];\n  }\n  return ras;\n}\n/**\n * @category destructors\n * @since 2.5.0\n */\n// tslint:disable-next-line: readonly-array\nexport function toArray(ras) {\n  var l = ras.length;\n  var as = Array(l);\n  for (var i = 0; i < l; i++) {\n    as[i] = ras[i];\n  }\n  return as;\n}\n/**\n * @category instances\n * @since 2.5.0\n */\nexport function getShow(S) {\n  return {\n    show: function (as) {\n      return \"[\" + as.map(S.show).join(', ') + \"]\";\n    }\n  };\n}\nvar concat = function (x, y) {\n  var lenx = x.length;\n  if (lenx === 0) {\n    return y;\n  }\n  var leny = y.length;\n  if (leny === 0) {\n    return x;\n  }\n  var r = Array(lenx + leny);\n  for (var i = 0; i < lenx; i++) {\n    r[i] = x[i];\n  }\n  for (var i = 0; i < leny; i++) {\n    r[i + lenx] = y[i];\n  }\n  return r;\n};\n/**\n * Returns a `Monoid` for `ReadonlyArray<A>`\n *\n * @example\n * import { getMonoid } from 'fp-ts/ReadonlyArray'\n *\n * const M = getMonoid<number>()\n * assert.deepStrictEqual(M.concat([1, 2], [3, 4]), [1, 2, 3, 4])\n *\n * @category instances\n * @since 2.5.0\n */\nexport function getMonoid() {\n  return {\n    concat: concat,\n    empty: empty\n  };\n}\n/**\n * Derives an `Eq` over the `ReadonlyArray` of a given element type from the `Eq` of that type. The derived `Eq` defines two\n * arrays as equal if all elements of both arrays are compared equal pairwise with the given `E`. In case of arrays of\n * different lengths, the result is non equality.\n *\n * @example\n * import { eqString } from 'fp-ts/Eq'\n * import { getEq } from 'fp-ts/ReadonlyArray'\n *\n * const E = getEq(eqString)\n * assert.strictEqual(E.equals(['a', 'b'], ['a', 'b']), true)\n * assert.strictEqual(E.equals(['a'], []), false)\n *\n * @category instances\n * @since 2.5.0\n */\nexport function getEq(E) {\n  return {\n    equals: function (xs, ys) {\n      return xs === ys || xs.length === ys.length && xs.every(function (x, i) {\n        return E.equals(x, ys[i]);\n      });\n    }\n  };\n}\n/**\n * Derives an `Ord` over the `ReadonlyArray` of a given element type from the `Ord` of that type. The ordering between two such\n * arrays is equal to: the first non equal comparison of each arrays elements taken pairwise in increasing order, in\n * case of equality over all the pairwise elements; the longest array is considered the greatest, if both arrays have\n * the same length, the result is equality.\n *\n * @example\n * import { getOrd } from 'fp-ts/ReadonlyArray'\n * import { ordString } from 'fp-ts/Ord'\n *\n * const O = getOrd(ordString)\n * assert.strictEqual(O.compare(['b'], ['a']), 1)\n * assert.strictEqual(O.compare(['a'], ['a']), 0)\n * assert.strictEqual(O.compare(['a'], ['b']), -1)\n *\n *\n * @category instances\n * @since 2.5.0\n */\nexport function getOrd(O) {\n  return fromCompare(function (a, b) {\n    var aLen = a.length;\n    var bLen = b.length;\n    var len = Math.min(aLen, bLen);\n    for (var i = 0; i < len; i++) {\n      var ordering = O.compare(a[i], b[i]);\n      if (ordering !== 0) {\n        return ordering;\n      }\n    }\n    return ordNumber.compare(aLen, bLen);\n  });\n}\n/**\n * Return a list of length `n` with element `i` initialized with `f(i)`\n *\n * @example\n * import { makeBy } from 'fp-ts/ReadonlyArray'\n *\n * const double = (n: number): number => n * 2\n * assert.deepStrictEqual(makeBy(5, double), [0, 2, 4, 6, 8])\n *\n * @category constructors\n * @since 2.5.0\n */\nexport function makeBy(n, f) {\n  // tslint:disable-next-line: readonly-array\n  var r = [];\n  for (var i = 0; i < n; i++) {\n    r.push(f(i));\n  }\n  return r;\n}\n/**\n * Create an array containing a range of integers, including both endpoints\n *\n * @example\n * import { range } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(range(1, 5), [1, 2, 3, 4, 5])\n *\n * @category constructors\n * @since 2.5.0\n */\nexport function range(start, end) {\n  return makeBy(end - start + 1, function (i) {\n    return start + i;\n  });\n}\n/**\n * Create an array containing a value repeated the specified number of times\n *\n * @example\n * import { replicate } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(replicate(3, 'a'), ['a', 'a', 'a'])\n *\n * @category constructors\n * @since 2.5.0\n */\nexport function replicate(n, a) {\n  return makeBy(n, function () {\n    return a;\n  });\n}\n/**\n * Removes one level of nesting\n *\n * Derivable from `Monad`.\n *\n * @example\n * import { flatten } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(flatten([[1], [2], [3]]), [1, 2, 3])\n *\n * @category combinators\n * @since 2.5.0\n */\nexport function flatten(mma) {\n  var rLen = 0;\n  var len = mma.length;\n  for (var i = 0; i < len; i++) {\n    rLen += mma[i].length;\n  }\n  var r = Array(rLen);\n  var start = 0;\n  for (var i = 0; i < len; i++) {\n    var arr = mma[i];\n    var l = arr.length;\n    for (var j = 0; j < l; j++) {\n      r[j + start] = arr[j];\n    }\n    start += l;\n  }\n  return r;\n}\n/**\n * Break an array into its first element and remaining elements\n *\n * @example\n * import { foldLeft } from 'fp-ts/ReadonlyArray'\n *\n * const len: <A>(as: ReadonlyArray<A>) => number = foldLeft(() => 0, (_, tail) => 1 + len(tail))\n * assert.strictEqual(len([1, 2, 3]), 3)\n *\n * @category destructors\n * @since 2.5.0\n */\nexport function foldLeft(onEmpty, onCons) {\n  return function (as) {\n    return isEmpty(as) ? onEmpty() : onCons(as[0], as.slice(1));\n  };\n}\n/**\n * Break an array into its initial elements and the last element\n *\n * @category destructors\n * @since 2.5.0\n */\nexport function foldRight(onEmpty, onCons) {\n  return function (as) {\n    return isEmpty(as) ? onEmpty() : onCons(as.slice(0, as.length - 1), as[as.length - 1]);\n  };\n}\n/**\n * Same as `reduce` but it carries over the intermediate steps\n *\n * @example\n * import { scanLeft } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(scanLeft(10, (b, a: number) => b - a)([1, 2, 3]), [10, 9, 7, 4])\n *\n * @category combinators\n * @since 2.5.0\n */\nexport function scanLeft(b, f) {\n  return function (as) {\n    var l = as.length;\n    // tslint:disable-next-line: readonly-array\n    var r = new Array(l + 1);\n    r[0] = b;\n    for (var i = 0; i < l; i++) {\n      r[i + 1] = f(r[i], as[i]);\n    }\n    return r;\n  };\n}\n/**\n * Fold an array from the right, keeping all intermediate results instead of only the final result\n *\n * @example\n * import { scanRight } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(scanRight(10, (a: number, b) => b - a)([1, 2, 3]), [4, 5, 7, 10])\n *\n * @category combinators\n * @since 2.5.0\n */\nexport function scanRight(b, f) {\n  return function (as) {\n    var l = as.length;\n    // tslint:disable-next-line: readonly-array\n    var r = new Array(l + 1);\n    r[l] = b;\n    for (var i = l - 1; i >= 0; i--) {\n      r[i] = f(as[i], r[i + 1]);\n    }\n    return r;\n  };\n}\n/**\n * Test whether an array is empty\n *\n * @example\n * import { isEmpty } from 'fp-ts/ReadonlyArray'\n *\n * assert.strictEqual(isEmpty([]), true)\n *\n * @since 2.5.0\n */\nexport function isEmpty(as) {\n  return as.length === 0;\n}\n/**\n * Test whether an array is non empty narrowing down the type to `NonEmptyReadonlyArray<A>`\n *\n * @category guards\n * @since 2.5.0\n */\nexport function isNonEmpty(as) {\n  return as.length > 0;\n}\n/**\n * Test whether an array contains a particular index\n *\n * @since 2.5.0\n */\nexport function isOutOfBound(i, as) {\n  return i < 0 || i >= as.length;\n}\nexport function lookup(i, as) {\n  return as === undefined ? function (as) {\n    return lookup(i, as);\n  } : isOutOfBound(i, as) ? O.none : O.some(as[i]);\n}\nexport function cons(head, tail) {\n  if (tail === undefined) {\n    return function (tail) {\n      return cons(head, tail);\n    };\n  }\n  var len = tail.length;\n  var r = Array(len + 1);\n  for (var i = 0; i < len; i++) {\n    r[i + 1] = tail[i];\n  }\n  r[0] = head;\n  return r;\n}\n// TODO: curry and make data-last in v3\n/**\n * Append an element to the end of an array, creating a new non empty array\n *\n * @example\n * import { snoc } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(snoc([1, 2, 3], 4), [1, 2, 3, 4])\n *\n * @category constructors\n * @since 2.5.0\n */\nexport function snoc(init, end) {\n  var len = init.length;\n  var r = Array(len + 1);\n  for (var i = 0; i < len; i++) {\n    r[i] = init[i];\n  }\n  r[len] = end;\n  return r;\n}\n/**\n * Get the first element in an array, or `None` if the array is empty\n *\n * @example\n * import { head } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(head([1, 2, 3]), some(1))\n * assert.deepStrictEqual(head([]), none)\n *\n * @since 2.5.0\n */\nexport function head(as) {\n  return isEmpty(as) ? O.none : O.some(as[0]);\n}\n/**\n * Get the last element in an array, or `None` if the array is empty\n *\n * @example\n * import { last } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(last([1, 2, 3]), some(3))\n * assert.deepStrictEqual(last([]), none)\n *\n * @since 2.5.0\n */\nexport function last(as) {\n  return lookup(as.length - 1, as);\n}\n/**\n * Get all but the first element of an array, creating a new array, or `None` if the array is empty\n *\n * @example\n * import { tail } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(tail([1, 2, 3]), some([2, 3]))\n * assert.deepStrictEqual(tail([]), none)\n *\n * @since 2.5.0\n */\nexport function tail(as) {\n  return isEmpty(as) ? O.none : O.some(as.slice(1));\n}\n/**\n * Get all but the last element of an array, creating a new array, or `None` if the array is empty\n *\n * @example\n * import { init } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(init([1, 2, 3]), some([1, 2]))\n * assert.deepStrictEqual(init([]), none)\n *\n * @since 2.5.0\n */\nexport function init(as) {\n  var len = as.length;\n  return len === 0 ? O.none : O.some(as.slice(0, len - 1));\n}\n/**\n * Keep only a number of elements from the start of an array, creating a new array.\n * `n` must be a natural number\n *\n * @example\n * import { takeLeft } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(takeLeft(2)([1, 2, 3]), [1, 2])\n *\n * @category combinators\n * @since 2.5.0\n */\nexport function takeLeft(n) {\n  return function (as) {\n    return as.slice(0, n);\n  };\n}\n/**\n * Keep only a number of elements from the end of an array, creating a new array.\n * `n` must be a natural number\n *\n * @example\n * import { takeRight } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(takeRight(2)([1, 2, 3, 4, 5]), [4, 5])\n *\n * @since 2.5.0\n */\nexport function takeRight(n) {\n  return function (as) {\n    return n === 0 ? empty : as.slice(-n);\n  };\n}\nexport function takeLeftWhile(predicate) {\n  return function (as) {\n    var i = spanIndexUncurry(as, predicate);\n    var init = Array(i);\n    for (var j = 0; j < i; j++) {\n      init[j] = as[j];\n    }\n    return init;\n  };\n}\nvar spanIndexUncurry = function (as, predicate) {\n  var l = as.length;\n  var i = 0;\n  for (; i < l; i++) {\n    if (!predicate(as[i])) {\n      break;\n    }\n  }\n  return i;\n};\nexport function spanLeft(predicate) {\n  return function (as) {\n    var i = spanIndexUncurry(as, predicate);\n    var init = Array(i);\n    for (var j = 0; j < i; j++) {\n      init[j] = as[j];\n    }\n    var l = as.length;\n    var rest = Array(l - i);\n    for (var j = i; j < l; j++) {\n      rest[j - i] = as[j];\n    }\n    return {\n      init: init,\n      rest: rest\n    };\n  };\n}\n/**\n * Drop a number of elements from the start of an array, creating a new array\n *\n * @example\n * import { dropLeft } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(dropLeft(2)([1, 2, 3]), [3])\n *\n * @category combinators\n * @since 2.5.0\n */\nexport function dropLeft(n) {\n  return function (as) {\n    return as.slice(n, as.length);\n  };\n}\n/**\n * Drop a number of elements from the end of an array, creating a new array\n *\n * @example\n * import { dropRight } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(dropRight(2)([1, 2, 3, 4, 5]), [1, 2, 3])\n *\n * @category combinators\n * @since 2.5.0\n */\nexport function dropRight(n) {\n  return function (as) {\n    return as.slice(0, as.length - n);\n  };\n}\n/**\n * Remove the longest initial subarray for which all element satisfy the specified predicate, creating a new array\n *\n * @example\n * import { dropLeftWhile } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(dropLeftWhile((n: number) => n % 2 === 1)([1, 3, 2, 4, 5]), [2, 4, 5])\n *\n * @category combinators\n * @since 2.5.0\n */\nexport function dropLeftWhile(predicate) {\n  return function (as) {\n    var i = spanIndexUncurry(as, predicate);\n    var l = as.length;\n    var rest = Array(l - i);\n    for (var j = i; j < l; j++) {\n      rest[j - i] = as[j];\n    }\n    return rest;\n  };\n}\n/**\n * Find the first index for which a predicate holds\n *\n * @example\n * import { findIndex } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(findIndex((n: number) => n === 2)([1, 2, 3]), some(1))\n * assert.deepStrictEqual(findIndex((n: number) => n === 2)([]), none)\n *\n * @since 2.5.0\n */\nexport function findIndex(predicate) {\n  return function (as) {\n    var len = as.length;\n    for (var i = 0; i < len; i++) {\n      if (predicate(as[i])) {\n        return O.some(i);\n      }\n    }\n    return O.none;\n  };\n}\nexport function findFirst(predicate) {\n  return function (as) {\n    var len = as.length;\n    for (var i = 0; i < len; i++) {\n      if (predicate(as[i])) {\n        return O.some(as[i]);\n      }\n    }\n    return O.none;\n  };\n}\n/**\n * Find the first element returned by an option based selector function\n *\n * @example\n * import { findFirstMap } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface Person {\n *   name: string\n *   age?: number\n * }\n *\n * const persons: ReadonlyArray<Person> = [{ name: 'John' }, { name: 'Mary', age: 45 }, { name: 'Joey', age: 28 }]\n *\n * // returns the name of the first person that has an age\n * assert.deepStrictEqual(findFirstMap((p: Person) => (p.age === undefined ? none : some(p.name)))(persons), some('Mary'))\n *\n * @since 2.5.0\n */\nexport function findFirstMap(f) {\n  return function (as) {\n    var len = as.length;\n    for (var i = 0; i < len; i++) {\n      var v = f(as[i]);\n      if (O.isSome(v)) {\n        return v;\n      }\n    }\n    return O.none;\n  };\n}\nexport function findLast(predicate) {\n  return function (as) {\n    var len = as.length;\n    for (var i = len - 1; i >= 0; i--) {\n      if (predicate(as[i])) {\n        return O.some(as[i]);\n      }\n    }\n    return O.none;\n  };\n}\n/**\n * Find the last element returned by an option based selector function\n *\n * @example\n * import { findLastMap } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface Person {\n *   name: string\n *   age?: number\n * }\n *\n * const persons: ReadonlyArray<Person> = [{ name: 'John' }, { name: 'Mary', age: 45 }, { name: 'Joey', age: 28 }]\n *\n * // returns the name of the last person that has an age\n * assert.deepStrictEqual(findLastMap((p: Person) => (p.age === undefined ? none : some(p.name)))(persons), some('Joey'))\n *\n * @since 2.5.0\n */\nexport function findLastMap(f) {\n  return function (as) {\n    var len = as.length;\n    for (var i = len - 1; i >= 0; i--) {\n      var v = f(as[i]);\n      if (O.isSome(v)) {\n        return v;\n      }\n    }\n    return O.none;\n  };\n}\n/**\n * Returns the index of the last element of the list which matches the predicate\n *\n * @example\n * import { findLastIndex } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface X {\n *   a: number\n *   b: number\n * }\n * const xs: ReadonlyArray<X> = [{ a: 1, b: 0 }, { a: 1, b: 1 }]\n * assert.deepStrictEqual(findLastIndex((x: { a: number }) => x.a === 1)(xs), some(1))\n * assert.deepStrictEqual(findLastIndex((x: { a: number }) => x.a === 4)(xs), none)\n *\n *\n * @since 2.5.0\n */\nexport function findLastIndex(predicate) {\n  return function (as) {\n    var len = as.length;\n    for (var i = len - 1; i >= 0; i--) {\n      if (predicate(as[i])) {\n        return O.some(i);\n      }\n    }\n    return O.none;\n  };\n}\n/**\n * Insert an element at the specified index, creating a new array, or returning `None` if the index is out of bounds\n *\n * @example\n * import { insertAt } from 'fp-ts/ReadonlyArray'\n * import { some } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(insertAt(2, 5)([1, 2, 3, 4]), some([1, 2, 5, 3, 4]))\n *\n * @since 2.5.0\n */\nexport function insertAt(i, a) {\n  return function (as) {\n    return i < 0 || i > as.length ? O.none : O.some(unsafeInsertAt(i, a, as));\n  };\n}\n/**\n * Change the element at the specified index, creating a new array, or returning `None` if the index is out of bounds\n *\n * @example\n * import { updateAt } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(updateAt(1, 1)([1, 2, 3]), some([1, 1, 3]))\n * assert.deepStrictEqual(updateAt(1, 1)([]), none)\n *\n * @since 2.5.0\n */\nexport function updateAt(i, a) {\n  return function (as) {\n    return isOutOfBound(i, as) ? O.none : O.some(unsafeUpdateAt(i, a, as));\n  };\n}\n/**\n * Delete the element at the specified index, creating a new array, or returning `None` if the index is out of bounds\n *\n * @example\n * import { deleteAt } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(deleteAt(0)([1, 2, 3]), some([2, 3]))\n * assert.deepStrictEqual(deleteAt(1)([]), none)\n *\n * @since 2.5.0\n */\nexport function deleteAt(i) {\n  return function (as) {\n    return isOutOfBound(i, as) ? O.none : O.some(unsafeDeleteAt(i, as));\n  };\n}\n/**\n * Apply a function to the element at the specified index, creating a new array, or returning `None` if the index is out\n * of bounds\n *\n * @example\n * import { modifyAt } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * const double = (x: number): number => x * 2\n * assert.deepStrictEqual(modifyAt(1, double)([1, 2, 3]), some([1, 4, 3]))\n * assert.deepStrictEqual(modifyAt(1, double)([]), none)\n *\n * @since 2.5.0\n */\nexport function modifyAt(i, f) {\n  return function (as) {\n    return isOutOfBound(i, as) ? O.none : O.some(unsafeUpdateAt(i, f(as[i]), as));\n  };\n}\n/**\n * Reverse an array, creating a new array\n *\n * @example\n * import { reverse } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(reverse([1, 2, 3]), [3, 2, 1])\n *\n * @category combinators\n * @since 2.5.0\n */\nexport function reverse(as) {\n  if (isEmpty(as)) {\n    return as;\n  }\n  return as.slice().reverse();\n}\n/**\n * Extracts from an array of `Either` all the `Right` elements. All the `Right` elements are extracted in order\n *\n * @example\n * import { rights } from 'fp-ts/ReadonlyArray'\n * import { right, left } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(rights([right(1), left('foo'), right(2)]), [1, 2])\n *\n * @category combinators\n * @since 2.5.0\n */\nexport function rights(as) {\n  // tslint:disable-next-line: readonly-array\n  var r = [];\n  var len = as.length;\n  for (var i = 0; i < len; i++) {\n    var a = as[i];\n    if (a._tag === 'Right') {\n      r.push(a.right);\n    }\n  }\n  return r;\n}\n/**\n * Extracts from an array of `Either` all the `Left` elements. All the `Left` elements are extracted in order\n *\n * @example\n * import { lefts } from 'fp-ts/ReadonlyArray'\n * import { left, right } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(lefts([right(1), left('foo'), right(2)]), ['foo'])\n *\n * @since 2.5.0\n */\nexport function lefts(as) {\n  // tslint:disable-next-line: readonly-array\n  var r = [];\n  var len = as.length;\n  for (var i = 0; i < len; i++) {\n    var a = as[i];\n    if (a._tag === 'Left') {\n      r.push(a.left);\n    }\n  }\n  return r;\n}\n/**\n * Sort the elements of an array in increasing order, creating a new array\n *\n * @example\n * import { sort } from 'fp-ts/ReadonlyArray'\n * import { ordNumber } from 'fp-ts/Ord'\n *\n * assert.deepStrictEqual(sort(ordNumber)([3, 2, 1]), [1, 2, 3])\n *\n * @category combinators\n * @since 2.5.0\n */\nexport var sort = function (O) {\n  return function (as) {\n    return as.length <= 1 ? as : as.slice().sort(O.compare);\n  };\n};\n// TODO: curry and make data-last in v3\n/**\n * Apply a function to pairs of elements at the same index in two arrays, collecting the results in a new array. If one\n * input array is short, excess elements of the longer array are discarded.\n *\n * @example\n * import { zipWith } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(zipWith([1, 2, 3], ['a', 'b', 'c', 'd'], (n, s) => s + n), ['a1', 'b2', 'c3'])\n *\n * @category combinators\n * @since 2.5.0\n */\nexport function zipWith(fa, fb, f) {\n  // tslint:disable-next-line: readonly-array\n  var fc = [];\n  var len = Math.min(fa.length, fb.length);\n  for (var i = 0; i < len; i++) {\n    fc[i] = f(fa[i], fb[i]);\n  }\n  return fc;\n}\nexport function zip(as, bs) {\n  if (bs === undefined) {\n    return function (bs) {\n      return zip(bs, as);\n    };\n  }\n  return zipWith(as, bs, function (a, b) {\n    return [a, b];\n  });\n}\n/**\n * The function is reverse of `zip`. Takes an array of pairs and return two corresponding arrays\n *\n * @example\n * import { unzip } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(unzip([[1, 'a'], [2, 'b'], [3, 'c']]), [[1, 2, 3], ['a', 'b', 'c']])\n *\n * @since 2.5.0\n */\nexport function unzip(as) {\n  // tslint:disable-next-line: readonly-array\n  var fa = [];\n  // tslint:disable-next-line: readonly-array\n  var fb = [];\n  for (var i = 0; i < as.length; i++) {\n    fa[i] = as[i][0];\n    fb[i] = as[i][1];\n  }\n  return [fa, fb];\n}\n/**\n * Prepend an element to every member of an array\n *\n * @example\n * import { prependToAll } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(prependToAll(9)([1, 2, 3, 4]), [9, 1, 9, 2, 9, 3, 9, 4])\n *\n * @category combinators\n * @since 2.9.0\n */\nexport var prependToAll = function (e) {\n  return function (xs) {\n    // tslint:disable-next-line: readonly-array\n    var ys = [];\n    for (var _i = 0, xs_1 = xs; _i < xs_1.length; _i++) {\n      var x = xs_1[_i];\n      ys.push(e, x);\n    }\n    return ys;\n  };\n};\n/**\n * Places an element in between members of an array\n *\n * @example\n * import { intersperse } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(intersperse(9)([1, 2, 3, 4]), [1, 9, 2, 9, 3, 9, 4])\n *\n * @category combinators\n * @since 2.9.0\n */\nexport function intersperse(e) {\n  return function (as) {\n    var length = as.length;\n    if (length === 0) {\n      return as;\n    }\n    return cons(as[0], prependToAll(e)(as.slice(1, as.length)));\n  };\n}\n/**\n * Rotate an array to the right by `n` steps\n *\n * @example\n * import { rotate } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(rotate(2)([1, 2, 3, 4, 5]), [4, 5, 1, 2, 3])\n *\n * @category combinators\n * @since 2.5.0\n */\nexport function rotate(n) {\n  return function (as) {\n    var len = as.length;\n    if (n === 0 || len <= 1 || len === Math.abs(n)) {\n      return as;\n    } else if (n < 0) {\n      return rotate(len + n)(as);\n    } else {\n      return as.slice(-n).concat(as.slice(0, len - n));\n    }\n  };\n}\nexport function elem(E) {\n  return function (a, as) {\n    if (as === undefined) {\n      var elemE_1 = elem(E);\n      return function (as) {\n        return elemE_1(a, as);\n      };\n    }\n    var predicate = function (element) {\n      return E.equals(element, a);\n    };\n    var i = 0;\n    var len = as.length;\n    for (; i < len; i++) {\n      if (predicate(as[i])) {\n        return true;\n      }\n    }\n    return false;\n  };\n}\n/**\n * Remove duplicates from an array, keeping the first occurrence of an element.\n *\n * @example\n * import { uniq } from 'fp-ts/ReadonlyArray'\n * import { eqNumber } from 'fp-ts/Eq'\n *\n * assert.deepStrictEqual(uniq(eqNumber)([1, 2, 1]), [1, 2])\n *\n * @category combinators\n * @since 2.5.0\n */\nexport function uniq(E) {\n  var elemS = elem(E);\n  return function (as) {\n    var len = as.length;\n    if (len <= 1) {\n      return as;\n    }\n    // tslint:disable-next-line: readonly-array\n    var r = [];\n    var i = 0;\n    for (; i < len; i++) {\n      var a = as[i];\n      if (!elemS(a, r)) {\n        r.push(a);\n      }\n    }\n    return len === r.length ? as : r;\n  };\n}\n/**\n * Sort the elements of an array in increasing order, where elements are compared using first `ords[0]`, then `ords[1]`,\n * etc...\n *\n * @example\n * import { sortBy } from 'fp-ts/ReadonlyArray'\n * import { ord, ordString, ordNumber } from 'fp-ts/Ord'\n *\n * interface Person {\n *   name: string\n *   age: number\n * }\n * const byName = ord.contramap(ordString, (p: Person) => p.name)\n * const byAge = ord.contramap(ordNumber, (p: Person) => p.age)\n *\n * const sortByNameByAge = sortBy([byName, byAge])\n *\n * const persons = [{ name: 'a', age: 1 }, { name: 'b', age: 3 }, { name: 'c', age: 2 }, { name: 'b', age: 2 }]\n * assert.deepStrictEqual(sortByNameByAge(persons), [\n *   { name: 'a', age: 1 },\n *   { name: 'b', age: 2 },\n *   { name: 'b', age: 3 },\n *   { name: 'c', age: 2 }\n * ])\n *\n * @category combinators\n * @since 2.5.0\n */\nexport function sortBy(ords) {\n  var M = getOrdMonoid();\n  return sort(ords.reduce(M.concat, M.empty));\n}\n/**\n * A useful recursion pattern for processing an array to produce a new array, often used for \"chopping\" up the input\n * array. Typically chop is called with some function that will consume an initial prefix of the array and produce a\n * value and the rest of the array.\n *\n * @example\n * import { Eq, eqNumber } from 'fp-ts/Eq'\n * import { chop, spanLeft } from 'fp-ts/ReadonlyArray'\n *\n * const group = <A>(S: Eq<A>): ((as: ReadonlyArray<A>) => ReadonlyArray<ReadonlyArray<A>>) => {\n *   return chop(as => {\n *     const { init, rest } = spanLeft((a: A) => S.equals(a, as[0]))(as)\n *     return [init, rest]\n *   })\n * }\n * assert.deepStrictEqual(group(eqNumber)([1, 1, 2, 3, 3, 4]), [[1, 1], [2], [3, 3], [4]])\n *\n * @category combinators\n * @since 2.5.0\n */\nexport var chop = function (f) {\n  return function (as) {\n    // tslint:disable-next-line: readonly-array\n    var result = [];\n    var cs = as;\n    while (isNonEmpty(cs)) {\n      var _a = f(cs),\n        b = _a[0],\n        c = _a[1];\n      result.push(b);\n      cs = c;\n    }\n    return result;\n  };\n};\n/**\n * Splits an array into two pieces, the first piece has `n` elements.\n *\n * @example\n * import { splitAt } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(splitAt(2)([1, 2, 3, 4, 5]), [[1, 2], [3, 4, 5]])\n *\n * @since 2.5.0\n */\nexport function splitAt(n) {\n  return function (as) {\n    return [as.slice(0, n), as.slice(n)];\n  };\n}\n/**\n * Splits an array into length-`n` pieces. The last piece will be shorter if `n` does not evenly divide the length of\n * the array. Note that `chunksOf(n)([])` is `[]`, not `[[]]`. This is intentional, and is consistent with a recursive\n * definition of `chunksOf`; it satisfies the property that\n *\n * ```ts\n * chunksOf(n)(xs).concat(chunksOf(n)(ys)) == chunksOf(n)(xs.concat(ys)))\n * ```\n *\n * whenever `n` evenly divides the length of `xs`.\n *\n * @example\n * import { chunksOf } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(chunksOf(2)([1, 2, 3, 4, 5]), [[1, 2], [3, 4], [5]])\n *\n *\n * @since 2.5.0\n */\nexport function chunksOf(n) {\n  var f = chop(splitAt(n));\n  return function (as) {\n    return as.length === 0 ? empty : isOutOfBound(n - 1, as) ? [as] : f(as);\n  };\n}\nexport function comprehension(input, f, g) {\n  if (g === void 0) {\n    g = function () {\n      return true;\n    };\n  }\n  var go = function (scope, input) {\n    if (input.length === 0) {\n      return g.apply(void 0, scope) ? [f.apply(void 0, scope)] : empty;\n    } else {\n      return chain_(input[0], function (x) {\n        return go(snoc(scope, x), input.slice(1));\n      });\n    }\n  };\n  return go(empty, input);\n}\nexport function union(E) {\n  var elemE = elem(E);\n  return function (xs, ys) {\n    if (ys === undefined) {\n      var unionE_1 = union(E);\n      return function (ys) {\n        return unionE_1(ys, xs);\n      };\n    }\n    return concat(xs, ys.filter(function (a) {\n      return !elemE(a, xs);\n    }));\n  };\n}\nexport function intersection(E) {\n  var elemE = elem(E);\n  return function (xs, ys) {\n    if (ys === undefined) {\n      var intersectionE_1 = intersection(E);\n      return function (ys) {\n        return intersectionE_1(ys, xs);\n      };\n    }\n    return xs.filter(function (a) {\n      return elemE(a, ys);\n    });\n  };\n}\nexport function difference(E) {\n  var elemE = elem(E);\n  return function (xs, ys) {\n    if (ys === undefined) {\n      var differenceE_1 = difference(E);\n      return function (ys) {\n        return differenceE_1(ys, xs);\n      };\n    }\n    return xs.filter(function (a) {\n      return !elemE(a, ys);\n    });\n  };\n}\n/**\n * Wrap a value into the type constructor.\n *\n * @category Applicative\n * @since 2.5.0\n */\nexport var of = function (a) {\n  return [a];\n};\n/**\n * @category Alternative\n * @since 2.7.0\n */\nexport var zero = function () {\n  return empty;\n};\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\nvar map_ = function (fa, f) {\n  return pipe(fa, map(f));\n};\nvar mapWithIndex_ = function (fa, f) {\n  return pipe(fa, mapWithIndex(f));\n};\nvar ap_ = function (fab, fa) {\n  return pipe(fab, ap(fa));\n};\nvar chain_ = function (ma, f) {\n  return pipe(ma, chain(f));\n};\nvar filter_ = function (fa, predicate) {\n  return pipe(fa, filter(predicate));\n};\nvar filterMap_ = function (fa, f) {\n  return pipe(fa, filterMap(f));\n};\nvar partitionWithIndex_ = function (fa, predicateWithIndex) {\n  return pipe(fa, partitionWithIndex(predicateWithIndex));\n};\nvar partition_ = function (fa, predicate) {\n  return pipe(fa, partition(predicate));\n};\nvar partitionMap_ = function (fa, f) {\n  return pipe(fa, partitionMap(f));\n};\nvar partitionMapWithIndex_ = function (fa, f) {\n  return pipe(fa, partitionMapWithIndex(f));\n};\nvar alt_ = function (fa, that) {\n  return pipe(fa, alt(that));\n};\nvar reduce_ = function (fa, b, f) {\n  return pipe(fa, reduce(b, f));\n};\nvar foldMap_ = function (M) {\n  var foldMapM = foldMap(M);\n  return function (fa, f) {\n    return pipe(fa, foldMapM(f));\n  };\n};\nvar reduceRight_ = function (fa, b, f) {\n  return pipe(fa, reduceRight(b, f));\n};\nvar reduceWithIndex_ = function (fa, b, f) {\n  var l = fa.length;\n  var r = b;\n  for (var i = 0; i < l; i++) {\n    r = f(i, r, fa[i]);\n  }\n  return r;\n};\nvar foldMapWithIndex_ = function (M) {\n  return function (fa, f) {\n    return fa.reduce(function (b, a, i) {\n      return M.concat(b, f(i, a));\n    }, M.empty);\n  };\n};\nvar reduceRightWithIndex_ = function (fa, b, f) {\n  return pipe(fa, reduceRightWithIndex(b, f));\n};\nvar filterMapWithIndex_ = function (fa, f) {\n  return pipe(fa, filterMapWithIndex(f));\n};\nvar filterWithIndex_ = function (fa, predicateWithIndex) {\n  return pipe(fa, filterWithIndex(predicateWithIndex));\n};\nvar extend_ = function (fa, f) {\n  return pipe(fa, extend(f));\n};\nvar traverse_ = function (F) {\n  var traverseF = traverse(F);\n  return function (ta, f) {\n    return pipe(ta, traverseF(f));\n  };\n};\n/* istanbul ignore next */\nvar traverseWithIndex_ = function (F) {\n  var traverseWithIndexF = traverseWithIndex(F);\n  return function (ta, f) {\n    return pipe(ta, traverseWithIndexF(f));\n  };\n};\n/* istanbul ignore next */\nvar wither_ = function (F) {\n  var witherF = wither(F);\n  return function (fa, f) {\n    return pipe(fa, witherF(f));\n  };\n};\n/* istanbul ignore next */\nvar wilt_ = function (F) {\n  var wiltF = wilt(F);\n  return function (fa, f) {\n    return pipe(fa, wiltF(f));\n  };\n};\n// -------------------------------------------------------------------------------------\n// pipeables\n// -------------------------------------------------------------------------------------\n/**\n * Less strict version of [`alt`](#alt).\n *\n * @category Alt\n * @since 2.9.0\n */\nexport var altW = function (that) {\n  return function (fa) {\n    return concat(fa, that());\n  };\n};\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * @category Alt\n * @since 2.5.0\n */\nexport var alt = altW;\n/**\n * Apply a function to an argument under a type constructor.\n *\n * @category Apply\n * @since 2.5.0\n */\nexport var ap = function (fa) {\n  return chain(function (f) {\n    return pipe(fa, map(f));\n  });\n};\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexport var apFirst = function (fb) {\n  return flow(map(function (a) {\n    return function () {\n      return a;\n    };\n  }), ap(fb));\n};\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexport var apSecond = function (fb) {\n  return flow(map(function () {\n    return function (b) {\n      return b;\n    };\n  }), ap(fb));\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @category Monad\n * @since 2.5.0\n */\nexport var chain = function (f) {\n  return function (ma) {\n    return pipe(ma, chainWithIndex(function (_, a) {\n      return f(a);\n    }));\n  };\n};\n/**\n * @since 2.7.0\n */\nexport var chainWithIndex = function (f) {\n  return function (ma) {\n    var outLen = 0;\n    var l = ma.length;\n    var temp = new Array(l);\n    for (var i = 0; i < l; i++) {\n      var e = ma[i];\n      var arr = f(i, e);\n      outLen += arr.length;\n      temp[i] = arr;\n    }\n    var out = Array(outLen);\n    var start = 0;\n    for (var i = 0; i < l; i++) {\n      var arr = temp[i];\n      var l_1 = arr.length;\n      for (var j = 0; j < l_1; j++) {\n        out[j + start] = arr[j];\n      }\n      start += l_1;\n    }\n    return out;\n  };\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * Derivable from `Monad`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexport var chainFirst = function (f) {\n  return chain(function (a) {\n    return pipe(f(a), map(function () {\n      return a;\n    }));\n  });\n};\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category Functor\n * @since 2.5.0\n */\nexport var map = function (f) {\n  return function (fa) {\n    return fa.map(function (a) {\n      return f(a);\n    });\n  };\n};\n/**\n * @category FunctorWithIndex\n * @since 2.5.0\n */\nexport var mapWithIndex = function (f) {\n  return function (fa) {\n    return fa.map(function (a, i) {\n      return f(i, a);\n    });\n  };\n};\n/**\n * @category Compactable\n * @since 2.5.0\n */\nexport var separate = function (fa) {\n  // tslint:disable-next-line: readonly-array\n  var left = [];\n  // tslint:disable-next-line: readonly-array\n  var right = [];\n  for (var _i = 0, fa_1 = fa; _i < fa_1.length; _i++) {\n    var e = fa_1[_i];\n    if (e._tag === 'Left') {\n      left.push(e.left);\n    } else {\n      right.push(e.right);\n    }\n  }\n  return {\n    left: left,\n    right: right\n  };\n};\n/**\n * @category Filterable\n * @since 2.5.0\n */\nexport var filter = function (predicate) {\n  return function (fa) {\n    return fa.filter(predicate);\n  };\n};\n/**\n * @category FilterableWithIndex\n * @since 2.5.0\n */\nexport var filterMapWithIndex = function (f) {\n  return function (fa) {\n    // tslint:disable-next-line: readonly-array\n    var result = [];\n    for (var i = 0; i < fa.length; i++) {\n      var optionB = f(i, fa[i]);\n      if (O.isSome(optionB)) {\n        result.push(optionB.value);\n      }\n    }\n    return result;\n  };\n};\n/**\n * @category Filterable\n * @since 2.5.0\n */\nexport var filterMap = function (f) {\n  return filterMapWithIndex(function (_, a) {\n    return f(a);\n  });\n};\n/**\n * @category Compactable\n * @since 2.5.0\n */\nexport var compact = /*#__PURE__*/\nfilterMap(identity);\n/**\n * @category Filterable\n * @since 2.5.0\n */\nexport var partition = function (predicate) {\n  return partitionWithIndex(function (_, a) {\n    return predicate(a);\n  });\n};\n/**\n * @category FilterableWithIndex\n * @since 2.5.0\n */\nexport var partitionWithIndex = function (predicateWithIndex) {\n  return function (fa) {\n    // tslint:disable-next-line: readonly-array\n    var left = [];\n    // tslint:disable-next-line: readonly-array\n    var right = [];\n    for (var i = 0; i < fa.length; i++) {\n      var a = fa[i];\n      if (predicateWithIndex(i, a)) {\n        right.push(a);\n      } else {\n        left.push(a);\n      }\n    }\n    return {\n      left: left,\n      right: right\n    };\n  };\n};\n/**\n * @category Filterable\n * @since 2.5.0\n */\nexport var partitionMap = function (f) {\n  return partitionMapWithIndex(function (_, a) {\n    return f(a);\n  });\n};\n/**\n * @category FilterableWithIndex\n * @since 2.5.0\n */\nexport var partitionMapWithIndex = function (f) {\n  return function (fa) {\n    // tslint:disable-next-line: readonly-array\n    var left = [];\n    // tslint:disable-next-line: readonly-array\n    var right = [];\n    for (var i = 0; i < fa.length; i++) {\n      var e = f(i, fa[i]);\n      if (e._tag === 'Left') {\n        left.push(e.left);\n      } else {\n        right.push(e.right);\n      }\n    }\n    return {\n      left: left,\n      right: right\n    };\n  };\n};\n/**\n * @category FilterableWithIndex\n * @since 2.5.0\n */\nexport var filterWithIndex = function (predicateWithIndex) {\n  return function (fa) {\n    return fa.filter(function (a, i) {\n      return predicateWithIndex(i, a);\n    });\n  };\n};\n/**\n * @category Extend\n * @since 2.5.0\n */\nexport var extend = function (f) {\n  return function (wa) {\n    return wa.map(function (_, i, as) {\n      return f(as.slice(i));\n    });\n  };\n};\n/**\n * Derivable from `Extend`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexport var duplicate = /*#__PURE__*/\nextend(identity);\n/**\n * @category FoldableWithIndex\n * @since 2.5.0\n */\nexport var foldMapWithIndex = function (M) {\n  var foldMapWithIndexM = foldMapWithIndex_(M);\n  return function (f) {\n    return function (fa) {\n      return foldMapWithIndexM(fa, f);\n    };\n  };\n};\n/**\n * @category Foldable\n * @since 2.5.0\n */\nexport var reduce = function (b, f) {\n  return reduceWithIndex(b, function (_, b, a) {\n    return f(b, a);\n  });\n};\n/**\n * @category Foldable\n * @since 2.5.0\n */\nexport var foldMap = function (M) {\n  var foldMapWithIndexM = foldMapWithIndex(M);\n  return function (f) {\n    return foldMapWithIndexM(function (_, a) {\n      return f(a);\n    });\n  };\n};\n/**\n * @category FoldableWithIndex\n * @since 2.5.0\n */\nexport var reduceWithIndex = function (b, f) {\n  return function (fa) {\n    return reduceWithIndex_(fa, b, f);\n  };\n};\n/**\n * @category Foldable\n * @since 2.5.0\n */\nexport var reduceRight = function (b, f) {\n  return reduceRightWithIndex(b, function (_, a, b) {\n    return f(a, b);\n  });\n};\n/**\n * @category FoldableWithIndex\n * @since 2.5.0\n */\nexport var reduceRightWithIndex = function (b, f) {\n  return function (fa) {\n    return fa.reduceRight(function (b, a, i) {\n      return f(i, a, b);\n    }, b);\n  };\n};\n/**\n * **for optimized and stack safe version check the data types `traverseArray` function**\n * @category Traversable\n * @since 2.6.3\n */\nexport var traverse = function (F) {\n  var traverseWithIndexF = traverseWithIndex(F);\n  return function (f) {\n    return traverseWithIndexF(function (_, a) {\n      return f(a);\n    });\n  };\n};\n/**\n * **for optimized and stack safe version check the data types `sequenceArray` function**\n * @category Traversable\n * @since 2.6.3\n */\nexport var sequence = function (F) {\n  return function (ta) {\n    return reduce_(ta, F.of(zero()), function (fas, fa) {\n      return F.ap(F.map(fas, function (as) {\n        return function (a) {\n          return snoc(as, a);\n        };\n      }), fa);\n    });\n  };\n};\n/**\n * **for optimized and stack safe version check the data types `traverseArrayWithIndex` function**\n * @category TraversableWithIndex\n * @since 2.6.3\n */\nexport var traverseWithIndex = function (F) {\n  return function (f) {\n    return reduceWithIndex(F.of(zero()), function (i, fbs, a) {\n      return F.ap(F.map(fbs, function (bs) {\n        return function (b) {\n          return snoc(bs, b);\n        };\n      }), f(i, a));\n    });\n  };\n};\n/**\n * @category Witherable\n * @since 2.6.5\n */\nexport var wither = function (F) {\n  var traverseF = traverse(F);\n  return function (f) {\n    return function (fa) {\n      return F.map(pipe(fa, traverseF(f)), compact);\n    };\n  };\n};\n/**\n * @category Witherable\n * @since 2.6.5\n */\nexport var wilt = function (F) {\n  var traverseF = traverse(F);\n  return function (f) {\n    return function (fa) {\n      return F.map(pipe(fa, traverseF(f)), separate);\n    };\n  };\n};\n/**\n * @category Unfoldable\n * @since 2.6.6\n */\nexport var unfold = function (b, f) {\n  // tslint:disable-next-line: readonly-array\n  var ret = [];\n  var bb = b;\n  while (true) {\n    var mt = f(bb);\n    if (O.isSome(mt)) {\n      var _a = mt.value,\n        a = _a[0],\n        b_1 = _a[1];\n      ret.push(a);\n      bb = b_1;\n    } else {\n      break;\n    }\n  }\n  return ret;\n};\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.5.0\n */\nexport var URI = 'ReadonlyArray';\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Functor = {\n  URI: URI,\n  map: map_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var FunctorWithIndex = {\n  URI: URI,\n  map: map_,\n  mapWithIndex: mapWithIndex_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Applicative = {\n  URI: URI,\n  map: map_,\n  ap: ap_,\n  of: of\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Monad = {\n  URI: URI,\n  map: map_,\n  ap: ap_,\n  of: of,\n  chain: chain_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Unfoldable = {\n  URI: URI,\n  unfold: unfold\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Alt = {\n  URI: URI,\n  map: map_,\n  alt: alt_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Alternative = {\n  URI: URI,\n  map: map_,\n  ap: ap_,\n  of: of,\n  alt: alt_,\n  zero: zero\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Extend = {\n  URI: URI,\n  map: map_,\n  extend: extend_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Compactable = {\n  URI: URI,\n  compact: compact,\n  separate: separate\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Filterable = {\n  URI: URI,\n  map: map_,\n  compact: compact,\n  separate: separate,\n  filter: filter_,\n  filterMap: filterMap_,\n  partition: partition_,\n  partitionMap: partitionMap_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var FilterableWithIndex = {\n  URI: URI,\n  map: map_,\n  mapWithIndex: mapWithIndex_,\n  compact: compact,\n  separate: separate,\n  filter: filter_,\n  filterMap: filterMap_,\n  partition: partition_,\n  partitionMap: partitionMap_,\n  partitionMapWithIndex: partitionMapWithIndex_,\n  partitionWithIndex: partitionWithIndex_,\n  filterMapWithIndex: filterMapWithIndex_,\n  filterWithIndex: filterWithIndex_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Foldable = {\n  URI: URI,\n  reduce: reduce_,\n  foldMap: foldMap_,\n  reduceRight: reduceRight_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var FoldableWithIndex = {\n  URI: URI,\n  reduce: reduce_,\n  foldMap: foldMap_,\n  reduceRight: reduceRight_,\n  reduceWithIndex: reduceWithIndex_,\n  foldMapWithIndex: foldMapWithIndex_,\n  reduceRightWithIndex: reduceRightWithIndex_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Traversable = {\n  URI: URI,\n  map: map_,\n  reduce: reduce_,\n  foldMap: foldMap_,\n  reduceRight: reduceRight_,\n  traverse: traverse_,\n  sequence: sequence\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var TraversableWithIndex = {\n  URI: URI,\n  map: map_,\n  mapWithIndex: mapWithIndex_,\n  reduce: reduce_,\n  foldMap: foldMap_,\n  reduceRight: reduceRight_,\n  reduceWithIndex: reduceWithIndex_,\n  foldMapWithIndex: foldMapWithIndex_,\n  reduceRightWithIndex: reduceRightWithIndex_,\n  traverse: traverse_,\n  sequence: sequence,\n  traverseWithIndex: traverseWithIndex_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Witherable = {\n  URI: URI,\n  map: map_,\n  compact: compact,\n  separate: separate,\n  filter: filter_,\n  filterMap: filterMap_,\n  partition: partition_,\n  partitionMap: partitionMap_,\n  reduce: reduce_,\n  foldMap: foldMap_,\n  reduceRight: reduceRight_,\n  traverse: traverse_,\n  sequence: sequence,\n  wither: wither_,\n  wilt: wilt_\n};\n// TODO: remove in v3\n/**\n * @category instances\n * @since 2.5.0\n */\nexport var readonlyArray = {\n  URI: URI,\n  compact: compact,\n  separate: separate,\n  map: map_,\n  ap: ap_,\n  of: of,\n  chain: chain_,\n  filter: filter_,\n  filterMap: filterMap_,\n  partition: partition_,\n  partitionMap: partitionMap_,\n  mapWithIndex: mapWithIndex_,\n  partitionMapWithIndex: partitionMapWithIndex_,\n  partitionWithIndex: partitionWithIndex_,\n  filterMapWithIndex: filterMapWithIndex_,\n  filterWithIndex: filterWithIndex_,\n  alt: alt_,\n  zero: zero,\n  unfold: unfold,\n  reduce: reduce_,\n  foldMap: foldMap_,\n  reduceRight: reduceRight_,\n  traverse: traverse_,\n  sequence: sequence,\n  reduceWithIndex: reduceWithIndex_,\n  foldMapWithIndex: foldMapWithIndex_,\n  reduceRightWithIndex: reduceRightWithIndex_,\n  traverseWithIndex: traverseWithIndex_,\n  extend: extend_,\n  wither: wither_,\n  wilt: wilt_\n};\n// -------------------------------------------------------------------------------------\n// unsafe\n// -------------------------------------------------------------------------------------\n/**\n * @category unsafe\n * @since 2.5.0\n */\nexport function unsafeInsertAt(i, a, as) {\n  var xs = as.slice();\n  xs.splice(i, 0, a);\n  return xs;\n}\n/**\n * @category unsafe\n * @since 2.5.0\n */\nexport function unsafeUpdateAt(i, a, as) {\n  if (as[i] === a) {\n    return as;\n  } else {\n    var xs = as.slice();\n    xs[i] = a;\n    return xs;\n  }\n}\n/**\n * @category unsafe\n * @since 2.5.0\n */\nexport function unsafeDeleteAt(i, as) {\n  var xs = as.slice();\n  xs.splice(i, 1);\n  return xs;\n}\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * An empty array\n *\n * @since 2.5.0\n */\nexport var empty = [];\n/**\n * Check if a predicate holds true for every array member.\n *\n * @example\n * import { every } from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const isPositive = (n: number): boolean => n > 0\n *\n * assert.deepStrictEqual(pipe([1, 2, 3], every(isPositive)), true)\n * assert.deepStrictEqual(pipe([1, 2, -3], every(isPositive)), false)\n *\n * @since 2.9.0\n */\nexport var every = function (predicate) {\n  return function (as) {\n    return as.every(predicate);\n  };\n};\n/**\n * Check if a predicate holds true for any array member.\n *\n * @example\n * import { some } from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const isPositive = (n: number): boolean => n > 0\n *\n * assert.deepStrictEqual(pipe([-1, -2, 3], some(isPositive)), true)\n * assert.deepStrictEqual(pipe([-1, -2, -3], some(isPositive)), false)\n *\n * @since 2.9.0\n */\nexport var some = function (predicate) {\n  return function (as) {\n    return as.some(predicate);\n  };\n};\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.9.0\n */\nexport var Do = /*#__PURE__*/\nof({});\n/**\n * @since 2.8.0\n */\nexport var bindTo = function (name) {\n  return map(bindTo_(name));\n};\n/**\n * @since 2.8.0\n */\nexport var bind = function (name, f) {\n  return chain(function (a) {\n    return pipe(f(a), map(function (b) {\n      return bind_(a, name, b);\n    }));\n  });\n};\n// -------------------------------------------------------------------------------------\n// pipeable sequence S\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.8.0\n */\nexport var apS = function (name, fb) {\n  return flow(map(function (a) {\n    return function (b) {\n      return bind_(a, name, b);\n    };\n  }), ap(fb));\n};","map":{"version":3,"names":["identity","pipe","bind_","bindTo_","flow","O","fromCompare","getMonoid","getOrdMonoid","ordNumber","fromArray","as","l","length","empty","ras","Array","i","toArray","getShow","S","show","map","join","concat","x","y","lenx","leny","r","getEq","E","equals","xs","ys","every","getOrd","a","b","aLen","bLen","len","Math","min","ordering","compare","makeBy","n","f","push","range","start","end","replicate","flatten","mma","rLen","arr","j","foldLeft","onEmpty","onCons","isEmpty","slice","foldRight","scanLeft","scanRight","isNonEmpty","isOutOfBound","lookup","undefined","none","some","cons","head","tail","snoc","init","last","takeLeft","takeRight","takeLeftWhile","predicate","spanIndexUncurry","spanLeft","rest","dropLeft","dropRight","dropLeftWhile","findIndex","findFirst","findFirstMap","v","isSome","findLast","findLastMap","findLastIndex","insertAt","unsafeInsertAt","updateAt","unsafeUpdateAt","deleteAt","unsafeDeleteAt","modifyAt","reverse","rights","_tag","right","lefts","left","sort","zipWith","fa","fb","fc","zip","bs","unzip","prependToAll","e","_i","xs_1","intersperse","rotate","abs","elem","elemE_1","element","uniq","elemS","sortBy","ords","M","reduce","chop","result","cs","_a","c","splitAt","chunksOf","comprehension","input","g","go","scope","apply","chain_","union","elemE","unionE_1","filter","intersection","intersectionE_1","difference","differenceE_1","of","zero","map_","mapWithIndex_","mapWithIndex","ap_","fab","ap","ma","chain","filter_","filterMap_","filterMap","partitionWithIndex_","predicateWithIndex","partitionWithIndex","partition_","partition","partitionMap_","partitionMap","partitionMapWithIndex_","partitionMapWithIndex","alt_","that","alt","reduce_","foldMap_","foldMapM","foldMap","reduceRight_","reduceRight","reduceWithIndex_","foldMapWithIndex_","reduceRightWithIndex_","reduceRightWithIndex","filterMapWithIndex_","filterMapWithIndex","filterWithIndex_","filterWithIndex","extend_","extend","traverse_","F","traverseF","traverse","ta","traverseWithIndex_","traverseWithIndexF","traverseWithIndex","wither_","witherF","wither","wilt_","wiltF","wilt","altW","apFirst","apSecond","chainWithIndex","_","outLen","temp","out","l_1","chainFirst","separate","fa_1","optionB","value","compact","wa","duplicate","foldMapWithIndex","foldMapWithIndexM","reduceWithIndex","sequence","fas","fbs","unfold","ret","bb","mt","b_1","URI","Functor","FunctorWithIndex","Applicative","Monad","Unfoldable","Alt","Alternative","Extend","Compactable","Filterable","FilterableWithIndex","Foldable","FoldableWithIndex","Traversable","TraversableWithIndex","Witherable","readonlyArray","splice","Do","bindTo","name","bind","apS"],"sources":["/Users/arthurfrancis/Documents/repo/imx-reactjs-integration-example/node_modules/fp-ts/es6/ReadonlyArray.js"],"sourcesContent":["import { identity, pipe, bind_, bindTo_, flow } from './function';\nimport * as O from './Option';\nimport { fromCompare, getMonoid as getOrdMonoid, ordNumber } from './Ord';\n// -------------------------------------------------------------------------------------\n// model\n// -------------------------------------------------------------------------------------\n/**\n * @category constructors\n * @since 2.5.0\n */\n// tslint:disable-next-line: readonly-array\nexport function fromArray(as) {\n    var l = as.length;\n    if (l === 0) {\n        return empty;\n    }\n    var ras = Array(l);\n    for (var i = 0; i < l; i++) {\n        ras[i] = as[i];\n    }\n    return ras;\n}\n/**\n * @category destructors\n * @since 2.5.0\n */\n// tslint:disable-next-line: readonly-array\nexport function toArray(ras) {\n    var l = ras.length;\n    var as = Array(l);\n    for (var i = 0; i < l; i++) {\n        as[i] = ras[i];\n    }\n    return as;\n}\n/**\n * @category instances\n * @since 2.5.0\n */\nexport function getShow(S) {\n    return {\n        show: function (as) { return \"[\" + as.map(S.show).join(', ') + \"]\"; }\n    };\n}\nvar concat = function (x, y) {\n    var lenx = x.length;\n    if (lenx === 0) {\n        return y;\n    }\n    var leny = y.length;\n    if (leny === 0) {\n        return x;\n    }\n    var r = Array(lenx + leny);\n    for (var i = 0; i < lenx; i++) {\n        r[i] = x[i];\n    }\n    for (var i = 0; i < leny; i++) {\n        r[i + lenx] = y[i];\n    }\n    return r;\n};\n/**\n * Returns a `Monoid` for `ReadonlyArray<A>`\n *\n * @example\n * import { getMonoid } from 'fp-ts/ReadonlyArray'\n *\n * const M = getMonoid<number>()\n * assert.deepStrictEqual(M.concat([1, 2], [3, 4]), [1, 2, 3, 4])\n *\n * @category instances\n * @since 2.5.0\n */\nexport function getMonoid() {\n    return {\n        concat: concat,\n        empty: empty\n    };\n}\n/**\n * Derives an `Eq` over the `ReadonlyArray` of a given element type from the `Eq` of that type. The derived `Eq` defines two\n * arrays as equal if all elements of both arrays are compared equal pairwise with the given `E`. In case of arrays of\n * different lengths, the result is non equality.\n *\n * @example\n * import { eqString } from 'fp-ts/Eq'\n * import { getEq } from 'fp-ts/ReadonlyArray'\n *\n * const E = getEq(eqString)\n * assert.strictEqual(E.equals(['a', 'b'], ['a', 'b']), true)\n * assert.strictEqual(E.equals(['a'], []), false)\n *\n * @category instances\n * @since 2.5.0\n */\nexport function getEq(E) {\n    return {\n        equals: function (xs, ys) { return xs === ys || (xs.length === ys.length && xs.every(function (x, i) { return E.equals(x, ys[i]); })); }\n    };\n}\n/**\n * Derives an `Ord` over the `ReadonlyArray` of a given element type from the `Ord` of that type. The ordering between two such\n * arrays is equal to: the first non equal comparison of each arrays elements taken pairwise in increasing order, in\n * case of equality over all the pairwise elements; the longest array is considered the greatest, if both arrays have\n * the same length, the result is equality.\n *\n * @example\n * import { getOrd } from 'fp-ts/ReadonlyArray'\n * import { ordString } from 'fp-ts/Ord'\n *\n * const O = getOrd(ordString)\n * assert.strictEqual(O.compare(['b'], ['a']), 1)\n * assert.strictEqual(O.compare(['a'], ['a']), 0)\n * assert.strictEqual(O.compare(['a'], ['b']), -1)\n *\n *\n * @category instances\n * @since 2.5.0\n */\nexport function getOrd(O) {\n    return fromCompare(function (a, b) {\n        var aLen = a.length;\n        var bLen = b.length;\n        var len = Math.min(aLen, bLen);\n        for (var i = 0; i < len; i++) {\n            var ordering = O.compare(a[i], b[i]);\n            if (ordering !== 0) {\n                return ordering;\n            }\n        }\n        return ordNumber.compare(aLen, bLen);\n    });\n}\n/**\n * Return a list of length `n` with element `i` initialized with `f(i)`\n *\n * @example\n * import { makeBy } from 'fp-ts/ReadonlyArray'\n *\n * const double = (n: number): number => n * 2\n * assert.deepStrictEqual(makeBy(5, double), [0, 2, 4, 6, 8])\n *\n * @category constructors\n * @since 2.5.0\n */\nexport function makeBy(n, f) {\n    // tslint:disable-next-line: readonly-array\n    var r = [];\n    for (var i = 0; i < n; i++) {\n        r.push(f(i));\n    }\n    return r;\n}\n/**\n * Create an array containing a range of integers, including both endpoints\n *\n * @example\n * import { range } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(range(1, 5), [1, 2, 3, 4, 5])\n *\n * @category constructors\n * @since 2.5.0\n */\nexport function range(start, end) {\n    return makeBy(end - start + 1, function (i) { return start + i; });\n}\n/**\n * Create an array containing a value repeated the specified number of times\n *\n * @example\n * import { replicate } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(replicate(3, 'a'), ['a', 'a', 'a'])\n *\n * @category constructors\n * @since 2.5.0\n */\nexport function replicate(n, a) {\n    return makeBy(n, function () { return a; });\n}\n/**\n * Removes one level of nesting\n *\n * Derivable from `Monad`.\n *\n * @example\n * import { flatten } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(flatten([[1], [2], [3]]), [1, 2, 3])\n *\n * @category combinators\n * @since 2.5.0\n */\nexport function flatten(mma) {\n    var rLen = 0;\n    var len = mma.length;\n    for (var i = 0; i < len; i++) {\n        rLen += mma[i].length;\n    }\n    var r = Array(rLen);\n    var start = 0;\n    for (var i = 0; i < len; i++) {\n        var arr = mma[i];\n        var l = arr.length;\n        for (var j = 0; j < l; j++) {\n            r[j + start] = arr[j];\n        }\n        start += l;\n    }\n    return r;\n}\n/**\n * Break an array into its first element and remaining elements\n *\n * @example\n * import { foldLeft } from 'fp-ts/ReadonlyArray'\n *\n * const len: <A>(as: ReadonlyArray<A>) => number = foldLeft(() => 0, (_, tail) => 1 + len(tail))\n * assert.strictEqual(len([1, 2, 3]), 3)\n *\n * @category destructors\n * @since 2.5.0\n */\nexport function foldLeft(onEmpty, onCons) {\n    return function (as) { return (isEmpty(as) ? onEmpty() : onCons(as[0], as.slice(1))); };\n}\n/**\n * Break an array into its initial elements and the last element\n *\n * @category destructors\n * @since 2.5.0\n */\nexport function foldRight(onEmpty, onCons) {\n    return function (as) { return (isEmpty(as) ? onEmpty() : onCons(as.slice(0, as.length - 1), as[as.length - 1])); };\n}\n/**\n * Same as `reduce` but it carries over the intermediate steps\n *\n * @example\n * import { scanLeft } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(scanLeft(10, (b, a: number) => b - a)([1, 2, 3]), [10, 9, 7, 4])\n *\n * @category combinators\n * @since 2.5.0\n */\nexport function scanLeft(b, f) {\n    return function (as) {\n        var l = as.length;\n        // tslint:disable-next-line: readonly-array\n        var r = new Array(l + 1);\n        r[0] = b;\n        for (var i = 0; i < l; i++) {\n            r[i + 1] = f(r[i], as[i]);\n        }\n        return r;\n    };\n}\n/**\n * Fold an array from the right, keeping all intermediate results instead of only the final result\n *\n * @example\n * import { scanRight } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(scanRight(10, (a: number, b) => b - a)([1, 2, 3]), [4, 5, 7, 10])\n *\n * @category combinators\n * @since 2.5.0\n */\nexport function scanRight(b, f) {\n    return function (as) {\n        var l = as.length;\n        // tslint:disable-next-line: readonly-array\n        var r = new Array(l + 1);\n        r[l] = b;\n        for (var i = l - 1; i >= 0; i--) {\n            r[i] = f(as[i], r[i + 1]);\n        }\n        return r;\n    };\n}\n/**\n * Test whether an array is empty\n *\n * @example\n * import { isEmpty } from 'fp-ts/ReadonlyArray'\n *\n * assert.strictEqual(isEmpty([]), true)\n *\n * @since 2.5.0\n */\nexport function isEmpty(as) {\n    return as.length === 0;\n}\n/**\n * Test whether an array is non empty narrowing down the type to `NonEmptyReadonlyArray<A>`\n *\n * @category guards\n * @since 2.5.0\n */\nexport function isNonEmpty(as) {\n    return as.length > 0;\n}\n/**\n * Test whether an array contains a particular index\n *\n * @since 2.5.0\n */\nexport function isOutOfBound(i, as) {\n    return i < 0 || i >= as.length;\n}\nexport function lookup(i, as) {\n    return as === undefined ? function (as) { return lookup(i, as); } : isOutOfBound(i, as) ? O.none : O.some(as[i]);\n}\nexport function cons(head, tail) {\n    if (tail === undefined) {\n        return function (tail) { return cons(head, tail); };\n    }\n    var len = tail.length;\n    var r = Array(len + 1);\n    for (var i = 0; i < len; i++) {\n        r[i + 1] = tail[i];\n    }\n    r[0] = head;\n    return r;\n}\n// TODO: curry and make data-last in v3\n/**\n * Append an element to the end of an array, creating a new non empty array\n *\n * @example\n * import { snoc } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(snoc([1, 2, 3], 4), [1, 2, 3, 4])\n *\n * @category constructors\n * @since 2.5.0\n */\nexport function snoc(init, end) {\n    var len = init.length;\n    var r = Array(len + 1);\n    for (var i = 0; i < len; i++) {\n        r[i] = init[i];\n    }\n    r[len] = end;\n    return r;\n}\n/**\n * Get the first element in an array, or `None` if the array is empty\n *\n * @example\n * import { head } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(head([1, 2, 3]), some(1))\n * assert.deepStrictEqual(head([]), none)\n *\n * @since 2.5.0\n */\nexport function head(as) {\n    return isEmpty(as) ? O.none : O.some(as[0]);\n}\n/**\n * Get the last element in an array, or `None` if the array is empty\n *\n * @example\n * import { last } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(last([1, 2, 3]), some(3))\n * assert.deepStrictEqual(last([]), none)\n *\n * @since 2.5.0\n */\nexport function last(as) {\n    return lookup(as.length - 1, as);\n}\n/**\n * Get all but the first element of an array, creating a new array, or `None` if the array is empty\n *\n * @example\n * import { tail } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(tail([1, 2, 3]), some([2, 3]))\n * assert.deepStrictEqual(tail([]), none)\n *\n * @since 2.5.0\n */\nexport function tail(as) {\n    return isEmpty(as) ? O.none : O.some(as.slice(1));\n}\n/**\n * Get all but the last element of an array, creating a new array, or `None` if the array is empty\n *\n * @example\n * import { init } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(init([1, 2, 3]), some([1, 2]))\n * assert.deepStrictEqual(init([]), none)\n *\n * @since 2.5.0\n */\nexport function init(as) {\n    var len = as.length;\n    return len === 0 ? O.none : O.some(as.slice(0, len - 1));\n}\n/**\n * Keep only a number of elements from the start of an array, creating a new array.\n * `n` must be a natural number\n *\n * @example\n * import { takeLeft } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(takeLeft(2)([1, 2, 3]), [1, 2])\n *\n * @category combinators\n * @since 2.5.0\n */\nexport function takeLeft(n) {\n    return function (as) { return as.slice(0, n); };\n}\n/**\n * Keep only a number of elements from the end of an array, creating a new array.\n * `n` must be a natural number\n *\n * @example\n * import { takeRight } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(takeRight(2)([1, 2, 3, 4, 5]), [4, 5])\n *\n * @since 2.5.0\n */\nexport function takeRight(n) {\n    return function (as) { return (n === 0 ? empty : as.slice(-n)); };\n}\nexport function takeLeftWhile(predicate) {\n    return function (as) {\n        var i = spanIndexUncurry(as, predicate);\n        var init = Array(i);\n        for (var j = 0; j < i; j++) {\n            init[j] = as[j];\n        }\n        return init;\n    };\n}\nvar spanIndexUncurry = function (as, predicate) {\n    var l = as.length;\n    var i = 0;\n    for (; i < l; i++) {\n        if (!predicate(as[i])) {\n            break;\n        }\n    }\n    return i;\n};\nexport function spanLeft(predicate) {\n    return function (as) {\n        var i = spanIndexUncurry(as, predicate);\n        var init = Array(i);\n        for (var j = 0; j < i; j++) {\n            init[j] = as[j];\n        }\n        var l = as.length;\n        var rest = Array(l - i);\n        for (var j = i; j < l; j++) {\n            rest[j - i] = as[j];\n        }\n        return { init: init, rest: rest };\n    };\n}\n/**\n * Drop a number of elements from the start of an array, creating a new array\n *\n * @example\n * import { dropLeft } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(dropLeft(2)([1, 2, 3]), [3])\n *\n * @category combinators\n * @since 2.5.0\n */\nexport function dropLeft(n) {\n    return function (as) { return as.slice(n, as.length); };\n}\n/**\n * Drop a number of elements from the end of an array, creating a new array\n *\n * @example\n * import { dropRight } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(dropRight(2)([1, 2, 3, 4, 5]), [1, 2, 3])\n *\n * @category combinators\n * @since 2.5.0\n */\nexport function dropRight(n) {\n    return function (as) { return as.slice(0, as.length - n); };\n}\n/**\n * Remove the longest initial subarray for which all element satisfy the specified predicate, creating a new array\n *\n * @example\n * import { dropLeftWhile } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(dropLeftWhile((n: number) => n % 2 === 1)([1, 3, 2, 4, 5]), [2, 4, 5])\n *\n * @category combinators\n * @since 2.5.0\n */\nexport function dropLeftWhile(predicate) {\n    return function (as) {\n        var i = spanIndexUncurry(as, predicate);\n        var l = as.length;\n        var rest = Array(l - i);\n        for (var j = i; j < l; j++) {\n            rest[j - i] = as[j];\n        }\n        return rest;\n    };\n}\n/**\n * Find the first index for which a predicate holds\n *\n * @example\n * import { findIndex } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(findIndex((n: number) => n === 2)([1, 2, 3]), some(1))\n * assert.deepStrictEqual(findIndex((n: number) => n === 2)([]), none)\n *\n * @since 2.5.0\n */\nexport function findIndex(predicate) {\n    return function (as) {\n        var len = as.length;\n        for (var i = 0; i < len; i++) {\n            if (predicate(as[i])) {\n                return O.some(i);\n            }\n        }\n        return O.none;\n    };\n}\nexport function findFirst(predicate) {\n    return function (as) {\n        var len = as.length;\n        for (var i = 0; i < len; i++) {\n            if (predicate(as[i])) {\n                return O.some(as[i]);\n            }\n        }\n        return O.none;\n    };\n}\n/**\n * Find the first element returned by an option based selector function\n *\n * @example\n * import { findFirstMap } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface Person {\n *   name: string\n *   age?: number\n * }\n *\n * const persons: ReadonlyArray<Person> = [{ name: 'John' }, { name: 'Mary', age: 45 }, { name: 'Joey', age: 28 }]\n *\n * // returns the name of the first person that has an age\n * assert.deepStrictEqual(findFirstMap((p: Person) => (p.age === undefined ? none : some(p.name)))(persons), some('Mary'))\n *\n * @since 2.5.0\n */\nexport function findFirstMap(f) {\n    return function (as) {\n        var len = as.length;\n        for (var i = 0; i < len; i++) {\n            var v = f(as[i]);\n            if (O.isSome(v)) {\n                return v;\n            }\n        }\n        return O.none;\n    };\n}\nexport function findLast(predicate) {\n    return function (as) {\n        var len = as.length;\n        for (var i = len - 1; i >= 0; i--) {\n            if (predicate(as[i])) {\n                return O.some(as[i]);\n            }\n        }\n        return O.none;\n    };\n}\n/**\n * Find the last element returned by an option based selector function\n *\n * @example\n * import { findLastMap } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface Person {\n *   name: string\n *   age?: number\n * }\n *\n * const persons: ReadonlyArray<Person> = [{ name: 'John' }, { name: 'Mary', age: 45 }, { name: 'Joey', age: 28 }]\n *\n * // returns the name of the last person that has an age\n * assert.deepStrictEqual(findLastMap((p: Person) => (p.age === undefined ? none : some(p.name)))(persons), some('Joey'))\n *\n * @since 2.5.0\n */\nexport function findLastMap(f) {\n    return function (as) {\n        var len = as.length;\n        for (var i = len - 1; i >= 0; i--) {\n            var v = f(as[i]);\n            if (O.isSome(v)) {\n                return v;\n            }\n        }\n        return O.none;\n    };\n}\n/**\n * Returns the index of the last element of the list which matches the predicate\n *\n * @example\n * import { findLastIndex } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface X {\n *   a: number\n *   b: number\n * }\n * const xs: ReadonlyArray<X> = [{ a: 1, b: 0 }, { a: 1, b: 1 }]\n * assert.deepStrictEqual(findLastIndex((x: { a: number }) => x.a === 1)(xs), some(1))\n * assert.deepStrictEqual(findLastIndex((x: { a: number }) => x.a === 4)(xs), none)\n *\n *\n * @since 2.5.0\n */\nexport function findLastIndex(predicate) {\n    return function (as) {\n        var len = as.length;\n        for (var i = len - 1; i >= 0; i--) {\n            if (predicate(as[i])) {\n                return O.some(i);\n            }\n        }\n        return O.none;\n    };\n}\n/**\n * Insert an element at the specified index, creating a new array, or returning `None` if the index is out of bounds\n *\n * @example\n * import { insertAt } from 'fp-ts/ReadonlyArray'\n * import { some } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(insertAt(2, 5)([1, 2, 3, 4]), some([1, 2, 5, 3, 4]))\n *\n * @since 2.5.0\n */\nexport function insertAt(i, a) {\n    return function (as) { return (i < 0 || i > as.length ? O.none : O.some(unsafeInsertAt(i, a, as))); };\n}\n/**\n * Change the element at the specified index, creating a new array, or returning `None` if the index is out of bounds\n *\n * @example\n * import { updateAt } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(updateAt(1, 1)([1, 2, 3]), some([1, 1, 3]))\n * assert.deepStrictEqual(updateAt(1, 1)([]), none)\n *\n * @since 2.5.0\n */\nexport function updateAt(i, a) {\n    return function (as) { return (isOutOfBound(i, as) ? O.none : O.some(unsafeUpdateAt(i, a, as))); };\n}\n/**\n * Delete the element at the specified index, creating a new array, or returning `None` if the index is out of bounds\n *\n * @example\n * import { deleteAt } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(deleteAt(0)([1, 2, 3]), some([2, 3]))\n * assert.deepStrictEqual(deleteAt(1)([]), none)\n *\n * @since 2.5.0\n */\nexport function deleteAt(i) {\n    return function (as) { return (isOutOfBound(i, as) ? O.none : O.some(unsafeDeleteAt(i, as))); };\n}\n/**\n * Apply a function to the element at the specified index, creating a new array, or returning `None` if the index is out\n * of bounds\n *\n * @example\n * import { modifyAt } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * const double = (x: number): number => x * 2\n * assert.deepStrictEqual(modifyAt(1, double)([1, 2, 3]), some([1, 4, 3]))\n * assert.deepStrictEqual(modifyAt(1, double)([]), none)\n *\n * @since 2.5.0\n */\nexport function modifyAt(i, f) {\n    return function (as) { return (isOutOfBound(i, as) ? O.none : O.some(unsafeUpdateAt(i, f(as[i]), as))); };\n}\n/**\n * Reverse an array, creating a new array\n *\n * @example\n * import { reverse } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(reverse([1, 2, 3]), [3, 2, 1])\n *\n * @category combinators\n * @since 2.5.0\n */\nexport function reverse(as) {\n    if (isEmpty(as)) {\n        return as;\n    }\n    return as.slice().reverse();\n}\n/**\n * Extracts from an array of `Either` all the `Right` elements. All the `Right` elements are extracted in order\n *\n * @example\n * import { rights } from 'fp-ts/ReadonlyArray'\n * import { right, left } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(rights([right(1), left('foo'), right(2)]), [1, 2])\n *\n * @category combinators\n * @since 2.5.0\n */\nexport function rights(as) {\n    // tslint:disable-next-line: readonly-array\n    var r = [];\n    var len = as.length;\n    for (var i = 0; i < len; i++) {\n        var a = as[i];\n        if (a._tag === 'Right') {\n            r.push(a.right);\n        }\n    }\n    return r;\n}\n/**\n * Extracts from an array of `Either` all the `Left` elements. All the `Left` elements are extracted in order\n *\n * @example\n * import { lefts } from 'fp-ts/ReadonlyArray'\n * import { left, right } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(lefts([right(1), left('foo'), right(2)]), ['foo'])\n *\n * @since 2.5.0\n */\nexport function lefts(as) {\n    // tslint:disable-next-line: readonly-array\n    var r = [];\n    var len = as.length;\n    for (var i = 0; i < len; i++) {\n        var a = as[i];\n        if (a._tag === 'Left') {\n            r.push(a.left);\n        }\n    }\n    return r;\n}\n/**\n * Sort the elements of an array in increasing order, creating a new array\n *\n * @example\n * import { sort } from 'fp-ts/ReadonlyArray'\n * import { ordNumber } from 'fp-ts/Ord'\n *\n * assert.deepStrictEqual(sort(ordNumber)([3, 2, 1]), [1, 2, 3])\n *\n * @category combinators\n * @since 2.5.0\n */\nexport var sort = function (O) { return function (as) {\n    return as.length <= 1 ? as : as.slice().sort(O.compare);\n}; };\n// TODO: curry and make data-last in v3\n/**\n * Apply a function to pairs of elements at the same index in two arrays, collecting the results in a new array. If one\n * input array is short, excess elements of the longer array are discarded.\n *\n * @example\n * import { zipWith } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(zipWith([1, 2, 3], ['a', 'b', 'c', 'd'], (n, s) => s + n), ['a1', 'b2', 'c3'])\n *\n * @category combinators\n * @since 2.5.0\n */\nexport function zipWith(fa, fb, f) {\n    // tslint:disable-next-line: readonly-array\n    var fc = [];\n    var len = Math.min(fa.length, fb.length);\n    for (var i = 0; i < len; i++) {\n        fc[i] = f(fa[i], fb[i]);\n    }\n    return fc;\n}\nexport function zip(as, bs) {\n    if (bs === undefined) {\n        return function (bs) { return zip(bs, as); };\n    }\n    return zipWith(as, bs, function (a, b) { return [a, b]; });\n}\n/**\n * The function is reverse of `zip`. Takes an array of pairs and return two corresponding arrays\n *\n * @example\n * import { unzip } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(unzip([[1, 'a'], [2, 'b'], [3, 'c']]), [[1, 2, 3], ['a', 'b', 'c']])\n *\n * @since 2.5.0\n */\nexport function unzip(as) {\n    // tslint:disable-next-line: readonly-array\n    var fa = [];\n    // tslint:disable-next-line: readonly-array\n    var fb = [];\n    for (var i = 0; i < as.length; i++) {\n        fa[i] = as[i][0];\n        fb[i] = as[i][1];\n    }\n    return [fa, fb];\n}\n/**\n * Prepend an element to every member of an array\n *\n * @example\n * import { prependToAll } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(prependToAll(9)([1, 2, 3, 4]), [9, 1, 9, 2, 9, 3, 9, 4])\n *\n * @category combinators\n * @since 2.9.0\n */\nexport var prependToAll = function (e) { return function (xs) {\n    // tslint:disable-next-line: readonly-array\n    var ys = [];\n    for (var _i = 0, xs_1 = xs; _i < xs_1.length; _i++) {\n        var x = xs_1[_i];\n        ys.push(e, x);\n    }\n    return ys;\n}; };\n/**\n * Places an element in between members of an array\n *\n * @example\n * import { intersperse } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(intersperse(9)([1, 2, 3, 4]), [1, 9, 2, 9, 3, 9, 4])\n *\n * @category combinators\n * @since 2.9.0\n */\nexport function intersperse(e) {\n    return function (as) {\n        var length = as.length;\n        if (length === 0) {\n            return as;\n        }\n        return cons(as[0], prependToAll(e)(as.slice(1, as.length)));\n    };\n}\n/**\n * Rotate an array to the right by `n` steps\n *\n * @example\n * import { rotate } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(rotate(2)([1, 2, 3, 4, 5]), [4, 5, 1, 2, 3])\n *\n * @category combinators\n * @since 2.5.0\n */\nexport function rotate(n) {\n    return function (as) {\n        var len = as.length;\n        if (n === 0 || len <= 1 || len === Math.abs(n)) {\n            return as;\n        }\n        else if (n < 0) {\n            return rotate(len + n)(as);\n        }\n        else {\n            return as.slice(-n).concat(as.slice(0, len - n));\n        }\n    };\n}\nexport function elem(E) {\n    return function (a, as) {\n        if (as === undefined) {\n            var elemE_1 = elem(E);\n            return function (as) { return elemE_1(a, as); };\n        }\n        var predicate = function (element) { return E.equals(element, a); };\n        var i = 0;\n        var len = as.length;\n        for (; i < len; i++) {\n            if (predicate(as[i])) {\n                return true;\n            }\n        }\n        return false;\n    };\n}\n/**\n * Remove duplicates from an array, keeping the first occurrence of an element.\n *\n * @example\n * import { uniq } from 'fp-ts/ReadonlyArray'\n * import { eqNumber } from 'fp-ts/Eq'\n *\n * assert.deepStrictEqual(uniq(eqNumber)([1, 2, 1]), [1, 2])\n *\n * @category combinators\n * @since 2.5.0\n */\nexport function uniq(E) {\n    var elemS = elem(E);\n    return function (as) {\n        var len = as.length;\n        if (len <= 1) {\n            return as;\n        }\n        // tslint:disable-next-line: readonly-array\n        var r = [];\n        var i = 0;\n        for (; i < len; i++) {\n            var a = as[i];\n            if (!elemS(a, r)) {\n                r.push(a);\n            }\n        }\n        return len === r.length ? as : r;\n    };\n}\n/**\n * Sort the elements of an array in increasing order, where elements are compared using first `ords[0]`, then `ords[1]`,\n * etc...\n *\n * @example\n * import { sortBy } from 'fp-ts/ReadonlyArray'\n * import { ord, ordString, ordNumber } from 'fp-ts/Ord'\n *\n * interface Person {\n *   name: string\n *   age: number\n * }\n * const byName = ord.contramap(ordString, (p: Person) => p.name)\n * const byAge = ord.contramap(ordNumber, (p: Person) => p.age)\n *\n * const sortByNameByAge = sortBy([byName, byAge])\n *\n * const persons = [{ name: 'a', age: 1 }, { name: 'b', age: 3 }, { name: 'c', age: 2 }, { name: 'b', age: 2 }]\n * assert.deepStrictEqual(sortByNameByAge(persons), [\n *   { name: 'a', age: 1 },\n *   { name: 'b', age: 2 },\n *   { name: 'b', age: 3 },\n *   { name: 'c', age: 2 }\n * ])\n *\n * @category combinators\n * @since 2.5.0\n */\nexport function sortBy(ords) {\n    var M = getOrdMonoid();\n    return sort(ords.reduce(M.concat, M.empty));\n}\n/**\n * A useful recursion pattern for processing an array to produce a new array, often used for \"chopping\" up the input\n * array. Typically chop is called with some function that will consume an initial prefix of the array and produce a\n * value and the rest of the array.\n *\n * @example\n * import { Eq, eqNumber } from 'fp-ts/Eq'\n * import { chop, spanLeft } from 'fp-ts/ReadonlyArray'\n *\n * const group = <A>(S: Eq<A>): ((as: ReadonlyArray<A>) => ReadonlyArray<ReadonlyArray<A>>) => {\n *   return chop(as => {\n *     const { init, rest } = spanLeft((a: A) => S.equals(a, as[0]))(as)\n *     return [init, rest]\n *   })\n * }\n * assert.deepStrictEqual(group(eqNumber)([1, 1, 2, 3, 3, 4]), [[1, 1], [2], [3, 3], [4]])\n *\n * @category combinators\n * @since 2.5.0\n */\nexport var chop = function (f) { return function (as) {\n    // tslint:disable-next-line: readonly-array\n    var result = [];\n    var cs = as;\n    while (isNonEmpty(cs)) {\n        var _a = f(cs), b = _a[0], c = _a[1];\n        result.push(b);\n        cs = c;\n    }\n    return result;\n}; };\n/**\n * Splits an array into two pieces, the first piece has `n` elements.\n *\n * @example\n * import { splitAt } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(splitAt(2)([1, 2, 3, 4, 5]), [[1, 2], [3, 4, 5]])\n *\n * @since 2.5.0\n */\nexport function splitAt(n) {\n    return function (as) { return [as.slice(0, n), as.slice(n)]; };\n}\n/**\n * Splits an array into length-`n` pieces. The last piece will be shorter if `n` does not evenly divide the length of\n * the array. Note that `chunksOf(n)([])` is `[]`, not `[[]]`. This is intentional, and is consistent with a recursive\n * definition of `chunksOf`; it satisfies the property that\n *\n * ```ts\n * chunksOf(n)(xs).concat(chunksOf(n)(ys)) == chunksOf(n)(xs.concat(ys)))\n * ```\n *\n * whenever `n` evenly divides the length of `xs`.\n *\n * @example\n * import { chunksOf } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(chunksOf(2)([1, 2, 3, 4, 5]), [[1, 2], [3, 4], [5]])\n *\n *\n * @since 2.5.0\n */\nexport function chunksOf(n) {\n    var f = chop(splitAt(n));\n    return function (as) { return (as.length === 0 ? empty : isOutOfBound(n - 1, as) ? [as] : f(as)); };\n}\nexport function comprehension(input, f, g) {\n    if (g === void 0) { g = function () { return true; }; }\n    var go = function (scope, input) {\n        if (input.length === 0) {\n            return g.apply(void 0, scope) ? [f.apply(void 0, scope)] : empty;\n        }\n        else {\n            return chain_(input[0], function (x) { return go(snoc(scope, x), input.slice(1)); });\n        }\n    };\n    return go(empty, input);\n}\nexport function union(E) {\n    var elemE = elem(E);\n    return function (xs, ys) {\n        if (ys === undefined) {\n            var unionE_1 = union(E);\n            return function (ys) { return unionE_1(ys, xs); };\n        }\n        return concat(xs, ys.filter(function (a) { return !elemE(a, xs); }));\n    };\n}\nexport function intersection(E) {\n    var elemE = elem(E);\n    return function (xs, ys) {\n        if (ys === undefined) {\n            var intersectionE_1 = intersection(E);\n            return function (ys) { return intersectionE_1(ys, xs); };\n        }\n        return xs.filter(function (a) { return elemE(a, ys); });\n    };\n}\nexport function difference(E) {\n    var elemE = elem(E);\n    return function (xs, ys) {\n        if (ys === undefined) {\n            var differenceE_1 = difference(E);\n            return function (ys) { return differenceE_1(ys, xs); };\n        }\n        return xs.filter(function (a) { return !elemE(a, ys); });\n    };\n}\n/**\n * Wrap a value into the type constructor.\n *\n * @category Applicative\n * @since 2.5.0\n */\nexport var of = function (a) { return [a]; };\n/**\n * @category Alternative\n * @since 2.7.0\n */\nexport var zero = function () { return empty; };\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\nvar map_ = function (fa, f) { return pipe(fa, map(f)); };\nvar mapWithIndex_ = function (fa, f) { return pipe(fa, mapWithIndex(f)); };\nvar ap_ = function (fab, fa) { return pipe(fab, ap(fa)); };\nvar chain_ = function (ma, f) {\n    return pipe(ma, chain(f));\n};\nvar filter_ = function (fa, predicate) { return pipe(fa, filter(predicate)); };\nvar filterMap_ = function (fa, f) { return pipe(fa, filterMap(f)); };\nvar partitionWithIndex_ = function (fa, predicateWithIndex) { return pipe(fa, partitionWithIndex(predicateWithIndex)); };\nvar partition_ = function (fa, predicate) { return pipe(fa, partition(predicate)); };\nvar partitionMap_ = function (fa, f) { return pipe(fa, partitionMap(f)); };\nvar partitionMapWithIndex_ = function (fa, f) { return pipe(fa, partitionMapWithIndex(f)); };\nvar alt_ = function (fa, that) { return pipe(fa, alt(that)); };\nvar reduce_ = function (fa, b, f) { return pipe(fa, reduce(b, f)); };\nvar foldMap_ = function (M) {\n    var foldMapM = foldMap(M);\n    return function (fa, f) { return pipe(fa, foldMapM(f)); };\n};\nvar reduceRight_ = function (fa, b, f) { return pipe(fa, reduceRight(b, f)); };\nvar reduceWithIndex_ = function (fa, b, f) {\n    var l = fa.length;\n    var r = b;\n    for (var i = 0; i < l; i++) {\n        r = f(i, r, fa[i]);\n    }\n    return r;\n};\nvar foldMapWithIndex_ = function (M) { return function (fa, f) {\n    return fa.reduce(function (b, a, i) { return M.concat(b, f(i, a)); }, M.empty);\n}; };\nvar reduceRightWithIndex_ = function (fa, b, f) {\n    return pipe(fa, reduceRightWithIndex(b, f));\n};\nvar filterMapWithIndex_ = function (fa, f) {\n    return pipe(fa, filterMapWithIndex(f));\n};\nvar filterWithIndex_ = function (fa, predicateWithIndex) { return pipe(fa, filterWithIndex(predicateWithIndex)); };\nvar extend_ = function (fa, f) { return pipe(fa, extend(f)); };\nvar traverse_ = function (F) {\n    var traverseF = traverse(F);\n    return function (ta, f) { return pipe(ta, traverseF(f)); };\n};\n/* istanbul ignore next */\nvar traverseWithIndex_ = function (F) {\n    var traverseWithIndexF = traverseWithIndex(F);\n    return function (ta, f) { return pipe(ta, traverseWithIndexF(f)); };\n};\n/* istanbul ignore next */\nvar wither_ = function (F) {\n    var witherF = wither(F);\n    return function (fa, f) { return pipe(fa, witherF(f)); };\n};\n/* istanbul ignore next */\nvar wilt_ = function (F) {\n    var wiltF = wilt(F);\n    return function (fa, f) { return pipe(fa, wiltF(f)); };\n};\n// -------------------------------------------------------------------------------------\n// pipeables\n// -------------------------------------------------------------------------------------\n/**\n * Less strict version of [`alt`](#alt).\n *\n * @category Alt\n * @since 2.9.0\n */\nexport var altW = function (that) { return function (fa) { return concat(fa, that()); }; };\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * @category Alt\n * @since 2.5.0\n */\nexport var alt = altW;\n/**\n * Apply a function to an argument under a type constructor.\n *\n * @category Apply\n * @since 2.5.0\n */\nexport var ap = function (fa) {\n    return chain(function (f) { return pipe(fa, map(f)); });\n};\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexport var apFirst = function (fb) {\n    return flow(map(function (a) { return function () { return a; }; }), ap(fb));\n};\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexport var apSecond = function (fb) {\n    return flow(map(function () { return function (b) { return b; }; }), ap(fb));\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @category Monad\n * @since 2.5.0\n */\nexport var chain = function (f) { return function (ma) {\n    return pipe(ma, chainWithIndex(function (_, a) { return f(a); }));\n}; };\n/**\n * @since 2.7.0\n */\nexport var chainWithIndex = function (f) { return function (ma) {\n    var outLen = 0;\n    var l = ma.length;\n    var temp = new Array(l);\n    for (var i = 0; i < l; i++) {\n        var e = ma[i];\n        var arr = f(i, e);\n        outLen += arr.length;\n        temp[i] = arr;\n    }\n    var out = Array(outLen);\n    var start = 0;\n    for (var i = 0; i < l; i++) {\n        var arr = temp[i];\n        var l_1 = arr.length;\n        for (var j = 0; j < l_1; j++) {\n            out[j + start] = arr[j];\n        }\n        start += l_1;\n    }\n    return out;\n}; };\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * Derivable from `Monad`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexport var chainFirst = function (f) {\n    return chain(function (a) {\n        return pipe(f(a), map(function () { return a; }));\n    });\n};\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category Functor\n * @since 2.5.0\n */\nexport var map = function (f) { return function (fa) {\n    return fa.map(function (a) { return f(a); });\n}; };\n/**\n * @category FunctorWithIndex\n * @since 2.5.0\n */\nexport var mapWithIndex = function (f) { return function (fa) { return fa.map(function (a, i) { return f(i, a); }); }; };\n/**\n * @category Compactable\n * @since 2.5.0\n */\nexport var separate = function (fa) {\n    // tslint:disable-next-line: readonly-array\n    var left = [];\n    // tslint:disable-next-line: readonly-array\n    var right = [];\n    for (var _i = 0, fa_1 = fa; _i < fa_1.length; _i++) {\n        var e = fa_1[_i];\n        if (e._tag === 'Left') {\n            left.push(e.left);\n        }\n        else {\n            right.push(e.right);\n        }\n    }\n    return {\n        left: left,\n        right: right\n    };\n};\n/**\n * @category Filterable\n * @since 2.5.0\n */\nexport var filter = function (predicate) { return function (fa) { return fa.filter(predicate); }; };\n/**\n * @category FilterableWithIndex\n * @since 2.5.0\n */\nexport var filterMapWithIndex = function (f) { return function (fa) {\n    // tslint:disable-next-line: readonly-array\n    var result = [];\n    for (var i = 0; i < fa.length; i++) {\n        var optionB = f(i, fa[i]);\n        if (O.isSome(optionB)) {\n            result.push(optionB.value);\n        }\n    }\n    return result;\n}; };\n/**\n * @category Filterable\n * @since 2.5.0\n */\nexport var filterMap = function (f) {\n    return filterMapWithIndex(function (_, a) { return f(a); });\n};\n/**\n * @category Compactable\n * @since 2.5.0\n */\nexport var compact = \n/*#__PURE__*/\nfilterMap(identity);\n/**\n * @category Filterable\n * @since 2.5.0\n */\nexport var partition = function (predicate) {\n    return partitionWithIndex(function (_, a) { return predicate(a); });\n};\n/**\n * @category FilterableWithIndex\n * @since 2.5.0\n */\nexport var partitionWithIndex = function (predicateWithIndex) { return function (fa) {\n    // tslint:disable-next-line: readonly-array\n    var left = [];\n    // tslint:disable-next-line: readonly-array\n    var right = [];\n    for (var i = 0; i < fa.length; i++) {\n        var a = fa[i];\n        if (predicateWithIndex(i, a)) {\n            right.push(a);\n        }\n        else {\n            left.push(a);\n        }\n    }\n    return {\n        left: left,\n        right: right\n    };\n}; };\n/**\n * @category Filterable\n * @since 2.5.0\n */\nexport var partitionMap = function (f) {\n    return partitionMapWithIndex(function (_, a) { return f(a); });\n};\n/**\n * @category FilterableWithIndex\n * @since 2.5.0\n */\nexport var partitionMapWithIndex = function (f) { return function (fa) {\n    // tslint:disable-next-line: readonly-array\n    var left = [];\n    // tslint:disable-next-line: readonly-array\n    var right = [];\n    for (var i = 0; i < fa.length; i++) {\n        var e = f(i, fa[i]);\n        if (e._tag === 'Left') {\n            left.push(e.left);\n        }\n        else {\n            right.push(e.right);\n        }\n    }\n    return {\n        left: left,\n        right: right\n    };\n}; };\n/**\n * @category FilterableWithIndex\n * @since 2.5.0\n */\nexport var filterWithIndex = function (predicateWithIndex) { return function (fa) {\n    return fa.filter(function (a, i) { return predicateWithIndex(i, a); });\n}; };\n/**\n * @category Extend\n * @since 2.5.0\n */\nexport var extend = function (f) { return function (wa) { return wa.map(function (_, i, as) { return f(as.slice(i)); }); }; };\n/**\n * Derivable from `Extend`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexport var duplicate = \n/*#__PURE__*/\nextend(identity);\n/**\n * @category FoldableWithIndex\n * @since 2.5.0\n */\nexport var foldMapWithIndex = function (M) {\n    var foldMapWithIndexM = foldMapWithIndex_(M);\n    return function (f) { return function (fa) { return foldMapWithIndexM(fa, f); }; };\n};\n/**\n * @category Foldable\n * @since 2.5.0\n */\nexport var reduce = function (b, f) {\n    return reduceWithIndex(b, function (_, b, a) { return f(b, a); });\n};\n/**\n * @category Foldable\n * @since 2.5.0\n */\nexport var foldMap = function (M) {\n    var foldMapWithIndexM = foldMapWithIndex(M);\n    return function (f) { return foldMapWithIndexM(function (_, a) { return f(a); }); };\n};\n/**\n * @category FoldableWithIndex\n * @since 2.5.0\n */\nexport var reduceWithIndex = function (b, f) { return function (fa) { return reduceWithIndex_(fa, b, f); }; };\n/**\n * @category Foldable\n * @since 2.5.0\n */\nexport var reduceRight = function (b, f) {\n    return reduceRightWithIndex(b, function (_, a, b) { return f(a, b); });\n};\n/**\n * @category FoldableWithIndex\n * @since 2.5.0\n */\nexport var reduceRightWithIndex = function (b, f) { return function (fa) { return fa.reduceRight(function (b, a, i) { return f(i, a, b); }, b); }; };\n/**\n * **for optimized and stack safe version check the data types `traverseArray` function**\n * @category Traversable\n * @since 2.6.3\n */\nexport var traverse = function (F) {\n    var traverseWithIndexF = traverseWithIndex(F);\n    return function (f) { return traverseWithIndexF(function (_, a) { return f(a); }); };\n};\n/**\n * **for optimized and stack safe version check the data types `sequenceArray` function**\n * @category Traversable\n * @since 2.6.3\n */\nexport var sequence = function (F) { return function (ta) {\n    return reduce_(ta, F.of(zero()), function (fas, fa) {\n        return F.ap(F.map(fas, function (as) { return function (a) { return snoc(as, a); }; }), fa);\n    });\n}; };\n/**\n * **for optimized and stack safe version check the data types `traverseArrayWithIndex` function**\n * @category TraversableWithIndex\n * @since 2.6.3\n */\nexport var traverseWithIndex = function (F) { return function (f) {\n    return reduceWithIndex(F.of(zero()), function (i, fbs, a) {\n        return F.ap(F.map(fbs, function (bs) { return function (b) { return snoc(bs, b); }; }), f(i, a));\n    });\n}; };\n/**\n * @category Witherable\n * @since 2.6.5\n */\nexport var wither = function (F) {\n    var traverseF = traverse(F);\n    return function (f) { return function (fa) { return F.map(pipe(fa, traverseF(f)), compact); }; };\n};\n/**\n * @category Witherable\n * @since 2.6.5\n */\nexport var wilt = function (F) {\n    var traverseF = traverse(F);\n    return function (f) { return function (fa) { return F.map(pipe(fa, traverseF(f)), separate); }; };\n};\n/**\n * @category Unfoldable\n * @since 2.6.6\n */\nexport var unfold = function (b, f) {\n    // tslint:disable-next-line: readonly-array\n    var ret = [];\n    var bb = b;\n    while (true) {\n        var mt = f(bb);\n        if (O.isSome(mt)) {\n            var _a = mt.value, a = _a[0], b_1 = _a[1];\n            ret.push(a);\n            bb = b_1;\n        }\n        else {\n            break;\n        }\n    }\n    return ret;\n};\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.5.0\n */\nexport var URI = 'ReadonlyArray';\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Functor = {\n    URI: URI,\n    map: map_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var FunctorWithIndex = {\n    URI: URI,\n    map: map_,\n    mapWithIndex: mapWithIndex_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Applicative = {\n    URI: URI,\n    map: map_,\n    ap: ap_,\n    of: of\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Monad = {\n    URI: URI,\n    map: map_,\n    ap: ap_,\n    of: of,\n    chain: chain_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Unfoldable = {\n    URI: URI,\n    unfold: unfold\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Alt = {\n    URI: URI,\n    map: map_,\n    alt: alt_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Alternative = {\n    URI: URI,\n    map: map_,\n    ap: ap_,\n    of: of,\n    alt: alt_,\n    zero: zero\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Extend = {\n    URI: URI,\n    map: map_,\n    extend: extend_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Compactable = {\n    URI: URI,\n    compact: compact,\n    separate: separate\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Filterable = {\n    URI: URI,\n    map: map_,\n    compact: compact,\n    separate: separate,\n    filter: filter_,\n    filterMap: filterMap_,\n    partition: partition_,\n    partitionMap: partitionMap_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var FilterableWithIndex = {\n    URI: URI,\n    map: map_,\n    mapWithIndex: mapWithIndex_,\n    compact: compact,\n    separate: separate,\n    filter: filter_,\n    filterMap: filterMap_,\n    partition: partition_,\n    partitionMap: partitionMap_,\n    partitionMapWithIndex: partitionMapWithIndex_,\n    partitionWithIndex: partitionWithIndex_,\n    filterMapWithIndex: filterMapWithIndex_,\n    filterWithIndex: filterWithIndex_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Foldable = {\n    URI: URI,\n    reduce: reduce_,\n    foldMap: foldMap_,\n    reduceRight: reduceRight_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var FoldableWithIndex = {\n    URI: URI,\n    reduce: reduce_,\n    foldMap: foldMap_,\n    reduceRight: reduceRight_,\n    reduceWithIndex: reduceWithIndex_,\n    foldMapWithIndex: foldMapWithIndex_,\n    reduceRightWithIndex: reduceRightWithIndex_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Traversable = {\n    URI: URI,\n    map: map_,\n    reduce: reduce_,\n    foldMap: foldMap_,\n    reduceRight: reduceRight_,\n    traverse: traverse_,\n    sequence: sequence\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var TraversableWithIndex = {\n    URI: URI,\n    map: map_,\n    mapWithIndex: mapWithIndex_,\n    reduce: reduce_,\n    foldMap: foldMap_,\n    reduceRight: reduceRight_,\n    reduceWithIndex: reduceWithIndex_,\n    foldMapWithIndex: foldMapWithIndex_,\n    reduceRightWithIndex: reduceRightWithIndex_,\n    traverse: traverse_,\n    sequence: sequence,\n    traverseWithIndex: traverseWithIndex_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Witherable = {\n    URI: URI,\n    map: map_,\n    compact: compact,\n    separate: separate,\n    filter: filter_,\n    filterMap: filterMap_,\n    partition: partition_,\n    partitionMap: partitionMap_,\n    reduce: reduce_,\n    foldMap: foldMap_,\n    reduceRight: reduceRight_,\n    traverse: traverse_,\n    sequence: sequence,\n    wither: wither_,\n    wilt: wilt_\n};\n// TODO: remove in v3\n/**\n * @category instances\n * @since 2.5.0\n */\nexport var readonlyArray = {\n    URI: URI,\n    compact: compact,\n    separate: separate,\n    map: map_,\n    ap: ap_,\n    of: of,\n    chain: chain_,\n    filter: filter_,\n    filterMap: filterMap_,\n    partition: partition_,\n    partitionMap: partitionMap_,\n    mapWithIndex: mapWithIndex_,\n    partitionMapWithIndex: partitionMapWithIndex_,\n    partitionWithIndex: partitionWithIndex_,\n    filterMapWithIndex: filterMapWithIndex_,\n    filterWithIndex: filterWithIndex_,\n    alt: alt_,\n    zero: zero,\n    unfold: unfold,\n    reduce: reduce_,\n    foldMap: foldMap_,\n    reduceRight: reduceRight_,\n    traverse: traverse_,\n    sequence: sequence,\n    reduceWithIndex: reduceWithIndex_,\n    foldMapWithIndex: foldMapWithIndex_,\n    reduceRightWithIndex: reduceRightWithIndex_,\n    traverseWithIndex: traverseWithIndex_,\n    extend: extend_,\n    wither: wither_,\n    wilt: wilt_\n};\n// -------------------------------------------------------------------------------------\n// unsafe\n// -------------------------------------------------------------------------------------\n/**\n * @category unsafe\n * @since 2.5.0\n */\nexport function unsafeInsertAt(i, a, as) {\n    var xs = as.slice();\n    xs.splice(i, 0, a);\n    return xs;\n}\n/**\n * @category unsafe\n * @since 2.5.0\n */\nexport function unsafeUpdateAt(i, a, as) {\n    if (as[i] === a) {\n        return as;\n    }\n    else {\n        var xs = as.slice();\n        xs[i] = a;\n        return xs;\n    }\n}\n/**\n * @category unsafe\n * @since 2.5.0\n */\nexport function unsafeDeleteAt(i, as) {\n    var xs = as.slice();\n    xs.splice(i, 1);\n    return xs;\n}\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * An empty array\n *\n * @since 2.5.0\n */\nexport var empty = [];\n/**\n * Check if a predicate holds true for every array member.\n *\n * @example\n * import { every } from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const isPositive = (n: number): boolean => n > 0\n *\n * assert.deepStrictEqual(pipe([1, 2, 3], every(isPositive)), true)\n * assert.deepStrictEqual(pipe([1, 2, -3], every(isPositive)), false)\n *\n * @since 2.9.0\n */\nexport var every = function (predicate) { return function (as) { return as.every(predicate); }; };\n/**\n * Check if a predicate holds true for any array member.\n *\n * @example\n * import { some } from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const isPositive = (n: number): boolean => n > 0\n *\n * assert.deepStrictEqual(pipe([-1, -2, 3], some(isPositive)), true)\n * assert.deepStrictEqual(pipe([-1, -2, -3], some(isPositive)), false)\n *\n * @since 2.9.0\n */\nexport var some = function (predicate) { return function (as) { return as.some(predicate); }; };\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.9.0\n */\nexport var Do = \n/*#__PURE__*/\nof({});\n/**\n * @since 2.8.0\n */\nexport var bindTo = function (name) {\n    return map(bindTo_(name));\n};\n/**\n * @since 2.8.0\n */\nexport var bind = function (name, f) {\n    return chain(function (a) {\n        return pipe(f(a), map(function (b) { return bind_(a, name, b); }));\n    });\n};\n// -------------------------------------------------------------------------------------\n// pipeable sequence S\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.8.0\n */\nexport var apS = function (name, fb) {\n    return flow(map(function (a) { return function (b) { return bind_(a, name, b); }; }), ap(fb));\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}