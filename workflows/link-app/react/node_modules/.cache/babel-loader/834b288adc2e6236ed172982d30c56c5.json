{"ast":null,"code":"import { pipe, bind_, bindTo_, flow } from './function';\nimport { none, some } from './Option';\nimport * as RA from './ReadonlyArray';\nimport { getJoinSemigroup, getMeetSemigroup } from './Semigroup';\n/**\n * Append an element to the front of an array, creating a new non empty array\n *\n * @example\n * import { cons } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(cons(1, [2, 3, 4]), [1, 2, 3, 4])\n *\n * @category constructors\n * @since 2.5.0\n */\nexport var cons = RA.cons;\n/**\n * Append an element to the end of an array, creating a new non empty array\n *\n * @example\n * import { snoc } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(snoc([1, 2, 3], 4), [1, 2, 3, 4])\n *\n * @category constructors\n * @since 2.5.0\n */\nexport var snoc = RA.snoc;\n/**\n * Builds a `ReadonlyNonEmptyArray` from an array returning `none` if `as` is an empty array\n *\n * @category constructors\n * @since 2.5.0\n */\nexport function fromReadonlyArray(as) {\n  return RA.isNonEmpty(as) ? some(as) : none;\n}\n/**\n * @category constructors\n * @since 2.5.0\n */\n// tslint:disable-next-line: readonly-array\nexport function fromArray(as) {\n  return fromReadonlyArray(RA.fromArray(as));\n}\n/**\n * Produces a couple of the first element of the array, and a new array of the remaining elements, if any\n *\n * @example\n * import { cons, uncons } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(uncons(cons(1, [2, 3, 4])), [1, [2, 3, 4]])\n *\n * @category destructors\n * @since 2.9.0\n */\nexport function uncons(nea) {\n  return [nea[0], nea.slice(1)];\n}\n/**\n * Produces a couple of a copy of the array without its last element, and that last element\n *\n * @example\n * import { snoc, unsnoc } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(unsnoc(snoc([1, 2, 3], 4)), [[1, 2, 3], 4])\n *\n * @category destructors\n * @since 2.9.0\n */\nexport function unsnoc(nea) {\n  var l = nea.length - 1;\n  return [nea.slice(0, l), nea[l]];\n}\n/**\n * @category instances\n * @since 2.5.0\n */\nexport var getShow = RA.getShow;\n/**\n * @since 2.5.0\n */\nexport function head(nea) {\n  return nea[0];\n}\n/**\n * @since 2.5.0\n */\nexport function tail(nea) {\n  return nea.slice(1);\n}\n/**\n * @category combinators\n * @since 2.5.0\n */\nexport var reverse = RA.reverse;\n/**\n * @since 2.5.0\n */\nexport function min(ord) {\n  var S = getMeetSemigroup(ord);\n  return function (nea) {\n    return nea.reduce(S.concat);\n  };\n}\n/**\n * @since 2.5.0\n */\nexport function max(ord) {\n  var S = getJoinSemigroup(ord);\n  return function (nea) {\n    return nea.reduce(S.concat);\n  };\n}\n/**\n * Builds a `Semigroup` instance for `ReadonlyNonEmptyArray`\n *\n * @category instances\n * @since 2.5.0\n */\nexport function getSemigroup() {\n  return {\n    concat: concat\n  };\n}\n/**\n * @example\n * import { getEq, cons } from 'fp-ts/ReadonlyNonEmptyArray'\n * import { eqNumber } from 'fp-ts/Eq'\n *\n * const E = getEq(eqNumber)\n * assert.strictEqual(E.equals(cons(1, [2]), [1, 2]), true)\n * assert.strictEqual(E.equals(cons(1, [2]), [1, 3]), false)\n *\n * @category instances\n * @since 2.5.0\n */\nexport var getEq = RA.getEq;\nexport function group(E) {\n  return function (as) {\n    var len = as.length;\n    if (len === 0) {\n      return RA.empty;\n    }\n    // tslint:disable-next-line: readonly-array\n    var r = [];\n    var head = as[0];\n    var nea = [head];\n    for (var i = 1; i < len; i++) {\n      var x = as[i];\n      if (E.equals(x, head)) {\n        nea.push(x);\n      } else {\n        r.push(nea);\n        head = x;\n        nea = [head];\n      }\n    }\n    r.push(nea);\n    return r;\n  };\n}\nexport function groupSort(O) {\n  var sortO = RA.sort(O);\n  var groupO = group(O);\n  return function (as) {\n    return groupO(sortO(as));\n  };\n}\n/**\n * Splits an array into sub-non-empty-arrays stored in an object, based on the result of calling a `string`-returning\n * function on each element, and grouping the results according to values returned\n *\n * @example\n * import { cons, groupBy } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(groupBy((s: string) => String(s.length))(['foo', 'bar', 'foobar']), {\n *   '3': cons('foo', ['bar']),\n *   '6': cons('foobar', [])\n * })\n *\n * @category constructors\n * @since 2.5.0\n */\nexport function groupBy(f) {\n  return function (as) {\n    var r = {};\n    for (var _i = 0, as_1 = as; _i < as_1.length; _i++) {\n      var a = as_1[_i];\n      var k = f(a);\n      if (r.hasOwnProperty(k)) {\n        r[k].push(a);\n      } else {\n        r[k] = [a];\n      }\n    }\n    return r;\n  };\n}\n/**\n * @since 2.5.0\n */\nexport function last(nea) {\n  return nea[nea.length - 1];\n}\n/**\n * Get all but the last element of a non empty array, creating a new array.\n *\n * @example\n * import { init } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(init([1, 2, 3]), [1, 2])\n * assert.deepStrictEqual(init([1]), [])\n *\n * @since 2.5.0\n */\nexport function init(nea) {\n  return nea.slice(0, -1);\n}\n/**\n * @category combinators\n * @since 2.5.0\n */\nexport function sort(O) {\n  return RA.sort(O);\n}\n/**\n * @since 2.5.0\n */\nexport function insertAt(i, a) {\n  return RA.insertAt(i, a);\n}\n/**\n * @since 2.5.0\n */\nexport function updateAt(i, a) {\n  return RA.updateAt(i, a);\n}\n/**\n * @since 2.5.0\n */\nexport function modifyAt(i, f) {\n  return RA.modifyAt(i, f);\n}\nexport function filter(predicate) {\n  return filterWithIndex(function (_, a) {\n    return predicate(a);\n  });\n}\n/**\n * @since 2.5.0\n */\nexport function filterWithIndex(predicate) {\n  return function (nea) {\n    return fromReadonlyArray(nea.filter(function (a, i) {\n      return predicate(i, a);\n    }));\n  };\n}\n/**\n * Wrap a value into the type constructor.\n *\n * @category Applicative\n * @since 2.5.0\n */\nexport var of = RA.of;\nexport function concat(fx, fy) {\n  return fx.concat(fy);\n}\n/**\n * @since 2.5.0\n */\nexport function fold(S) {\n  return function (fa) {\n    return fa.reduce(S.concat);\n  };\n}\n/**\n * @category combinators\n * @since 2.5.1\n */\nexport var zipWith = RA.zipWith;\n/**\n * @category combinators\n * @since 2.5.1\n */\nexport var zip = RA.zip;\n/**\n * @since 2.5.1\n */\nexport var unzip = RA.unzip;\n/**\n * Prepend an element to every member of an array\n *\n * @example\n * import { cons, prependToAll } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(prependToAll(9)(cons(1, [2, 3, 4])), cons(9, [1, 9, 2, 9, 3, 9, 4]))\n *\n * @category combinators\n * @since 2.9.0\n */\nexport var prependToAll = RA.prependToAll;\n/**\n * Places an element in between members of an array\n *\n * @example\n * import { cons, intersperse } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(intersperse(9)(cons(1, [2, 3, 4])), cons(1, [9, 2, 9, 3, 9, 4]))\n *\n * @category combinators\n * @since 2.9.0\n */\nexport var intersperse = RA.intersperse;\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\nvar map_ = RA.Functor.map;\nvar mapWithIndex_ = RA.FunctorWithIndex.mapWithIndex;\nvar ap_ = RA.Applicative.ap;\nvar chain_ = RA.Monad.chain;\nvar extend_ = RA.Extend.extend;\nvar reduce_ = RA.Foldable.reduce;\nvar foldMap_ = RA.Foldable.foldMap;\nvar reduceRight_ = RA.Foldable.reduceRight;\nvar traverse_ = RA.Traversable.traverse;\nvar alt_ = RA.Alt.alt;\nvar reduceWithIndex_ = RA.FoldableWithIndex.reduceWithIndex;\nvar foldMapWithIndex_ = RA.FoldableWithIndex.foldMapWithIndex;\nvar reduceRightWithIndex_ = RA.FoldableWithIndex.reduceRightWithIndex;\nvar traverseWithIndex_ = RA.TraversableWithIndex.traverseWithIndex;\n// -------------------------------------------------------------------------------------\n// pipeables\n// -------------------------------------------------------------------------------------\n/**\n * @category FoldableWithIndex\n * @since 2.5.0\n */\nexport var foldMapWithIndex = function (S) {\n  return function (f) {\n    return function (fa) {\n      return fa.slice(1).reduce(function (s, a, i) {\n        return S.concat(s, f(i + 1, a));\n      }, f(0, fa[0]));\n    };\n  };\n};\n/**\n * @category Foldable\n * @since 2.5.0\n */\nexport var foldMap = function (S) {\n  return function (f) {\n    return function (fa) {\n      return fa.slice(1).reduce(function (s, a) {\n        return S.concat(s, f(a));\n      }, f(fa[0]));\n    };\n  };\n};\n/**\n * Less strict version of [`alt`](#alt).\n *\n * @category Alt\n * @since 2.9.0\n */\nexport var altW = RA.altW;\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * @category Alt\n * @since 2.6.2\n */\nexport var alt = RA.alt;\n/**\n * @category Apply\n * @since 2.5.0\n */\nexport var ap = RA.ap;\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexport var apFirst = RA.apFirst;\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexport var apSecond = RA.apSecond;\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @category Monad\n * @since 2.5.0\n */\nexport var chain = RA.chain;\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * Derivable from `Monad`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexport var chainFirst = RA.chainFirst;\n/**\n * Derivable from `Extend`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexport var duplicate = RA.duplicate;\n/**\n * @category Extend\n * @since 2.5.0\n */\nexport var extend = RA.extend;\n/**\n * Derivable from `Monad`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexport var flatten = RA.flatten;\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category Functor\n * @since 2.5.0\n */\nexport var map = RA.map;\n/**\n * @category FunctorWithIndex\n * @since 2.5.0\n */\nexport var mapWithIndex = RA.mapWithIndex;\n/**\n * @category Foldable\n * @since 2.5.0\n */\nexport var reduce = RA.reduce;\n/**\n * @category FoldableWithIndex\n * @since 2.5.0\n */\nexport var reduceWithIndex = RA.reduceWithIndex;\n/**\n * @category Foldable\n * @since 2.5.0\n */\nexport var reduceRight = RA.reduceRight;\n/**\n * @category FoldableWithIndex\n * @since 2.5.0\n */\nexport var reduceRightWithIndex = RA.reduceRightWithIndex;\n/**\n * @since 2.6.3\n */\nexport var traverse = RA.traverse;\n/**\n * @since 2.6.3\n */\nexport var sequence = RA.sequence;\n/**\n * @since 2.6.3\n */\nexport var traverseWithIndex = RA.traverseWithIndex;\n/**\n * @since 2.6.3\n */\nexport var extract = head;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.5.0\n */\nexport var URI = 'ReadonlyNonEmptyArray';\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Functor = {\n  URI: URI,\n  map: map_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var FunctorWithIndex = {\n  URI: URI,\n  map: map_,\n  mapWithIndex: mapWithIndex_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Applicative = {\n  URI: URI,\n  map: map_,\n  ap: ap_,\n  of: of\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Monad = {\n  URI: URI,\n  map: map_,\n  ap: ap_,\n  of: of,\n  chain: chain_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Foldable = {\n  URI: URI,\n  reduce: reduce_,\n  foldMap: foldMap_,\n  reduceRight: reduceRight_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var FoldableWithIndex = {\n  URI: URI,\n  reduce: reduce_,\n  foldMap: foldMap_,\n  reduceRight: reduceRight_,\n  reduceWithIndex: reduceWithIndex_,\n  foldMapWithIndex: foldMapWithIndex_,\n  reduceRightWithIndex: reduceRightWithIndex_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Traversable = {\n  URI: URI,\n  map: map_,\n  reduce: reduce_,\n  foldMap: foldMap_,\n  reduceRight: reduceRight_,\n  traverse: traverse_,\n  sequence: sequence\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var TraversableWithIndex = {\n  URI: URI,\n  map: map_,\n  mapWithIndex: mapWithIndex_,\n  reduce: reduce_,\n  foldMap: foldMap_,\n  reduceRight: reduceRight_,\n  traverse: traverse_,\n  sequence: sequence,\n  reduceWithIndex: reduceWithIndex_,\n  foldMapWithIndex: foldMapWithIndex_,\n  reduceRightWithIndex: reduceRightWithIndex_,\n  traverseWithIndex: traverseWithIndex_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Alt = {\n  URI: URI,\n  map: map_,\n  alt: alt_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Comonad = {\n  URI: URI,\n  map: map_,\n  extend: extend_,\n  extract: extract\n};\n// TODO: remove in v3\n/**\n * @category instances\n * @since 2.5.0\n */\nexport var readonlyNonEmptyArray = {\n  URI: URI,\n  of: of,\n  map: map_,\n  mapWithIndex: mapWithIndex_,\n  ap: ap_,\n  chain: chain_,\n  extend: extend_,\n  extract: extract,\n  reduce: reduce_,\n  foldMap: foldMap_,\n  reduceRight: reduceRight_,\n  traverse: traverse_,\n  sequence: sequence,\n  reduceWithIndex: reduceWithIndex_,\n  foldMapWithIndex: foldMapWithIndex_,\n  reduceRightWithIndex: reduceRightWithIndex_,\n  traverseWithIndex: traverseWithIndex_,\n  alt: alt_\n};\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.9.0\n */\nexport var Do = /*#__PURE__*/\nof({});\n/**\n * @since 2.8.0\n */\nexport var bindTo = function (name) {\n  return map(bindTo_(name));\n};\n/**\n * @since 2.8.0\n */\nexport var bind = function (name, f) {\n  return chain(function (a) {\n    return pipe(f(a), map(function (b) {\n      return bind_(a, name, b);\n    }));\n  });\n};\n// -------------------------------------------------------------------------------------\n// pipeable sequence S\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.8.0\n */\nexport var apS = function (name, fb) {\n  return flow(map(function (a) {\n    return function (b) {\n      return bind_(a, name, b);\n    };\n  }), ap(fb));\n};","map":{"version":3,"names":["pipe","bind_","bindTo_","flow","none","some","RA","getJoinSemigroup","getMeetSemigroup","cons","snoc","fromReadonlyArray","as","isNonEmpty","fromArray","uncons","nea","slice","unsnoc","l","length","getShow","head","tail","reverse","min","ord","S","reduce","concat","max","getSemigroup","getEq","group","E","len","empty","r","i","x","equals","push","groupSort","O","sortO","sort","groupO","groupBy","f","_i","as_1","a","k","hasOwnProperty","last","init","insertAt","updateAt","modifyAt","filter","predicate","filterWithIndex","_","of","fx","fy","fold","fa","zipWith","zip","unzip","prependToAll","intersperse","map_","Functor","map","mapWithIndex_","FunctorWithIndex","mapWithIndex","ap_","Applicative","ap","chain_","Monad","chain","extend_","Extend","extend","reduce_","Foldable","foldMap_","foldMap","reduceRight_","reduceRight","traverse_","Traversable","traverse","alt_","Alt","alt","reduceWithIndex_","FoldableWithIndex","reduceWithIndex","foldMapWithIndex_","foldMapWithIndex","reduceRightWithIndex_","reduceRightWithIndex","traverseWithIndex_","TraversableWithIndex","traverseWithIndex","s","altW","apFirst","apSecond","chainFirst","duplicate","flatten","sequence","extract","URI","Comonad","readonlyNonEmptyArray","Do","bindTo","name","bind","b","apS","fb"],"sources":["/Users/arthurfrancis/Documents/repo/imx-learning/workflows/link-app/react/node_modules/fp-ts/es6/ReadonlyNonEmptyArray.js"],"sourcesContent":["import { pipe, bind_, bindTo_, flow } from './function';\nimport { none, some } from './Option';\nimport * as RA from './ReadonlyArray';\nimport { getJoinSemigroup, getMeetSemigroup } from './Semigroup';\n/**\n * Append an element to the front of an array, creating a new non empty array\n *\n * @example\n * import { cons } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(cons(1, [2, 3, 4]), [1, 2, 3, 4])\n *\n * @category constructors\n * @since 2.5.0\n */\nexport var cons = RA.cons;\n/**\n * Append an element to the end of an array, creating a new non empty array\n *\n * @example\n * import { snoc } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(snoc([1, 2, 3], 4), [1, 2, 3, 4])\n *\n * @category constructors\n * @since 2.5.0\n */\nexport var snoc = RA.snoc;\n/**\n * Builds a `ReadonlyNonEmptyArray` from an array returning `none` if `as` is an empty array\n *\n * @category constructors\n * @since 2.5.0\n */\nexport function fromReadonlyArray(as) {\n    return RA.isNonEmpty(as) ? some(as) : none;\n}\n/**\n * @category constructors\n * @since 2.5.0\n */\n// tslint:disable-next-line: readonly-array\nexport function fromArray(as) {\n    return fromReadonlyArray(RA.fromArray(as));\n}\n/**\n * Produces a couple of the first element of the array, and a new array of the remaining elements, if any\n *\n * @example\n * import { cons, uncons } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(uncons(cons(1, [2, 3, 4])), [1, [2, 3, 4]])\n *\n * @category destructors\n * @since 2.9.0\n */\nexport function uncons(nea) {\n    return [nea[0], nea.slice(1)];\n}\n/**\n * Produces a couple of a copy of the array without its last element, and that last element\n *\n * @example\n * import { snoc, unsnoc } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(unsnoc(snoc([1, 2, 3], 4)), [[1, 2, 3], 4])\n *\n * @category destructors\n * @since 2.9.0\n */\nexport function unsnoc(nea) {\n    var l = nea.length - 1;\n    return [nea.slice(0, l), nea[l]];\n}\n/**\n * @category instances\n * @since 2.5.0\n */\nexport var getShow = RA.getShow;\n/**\n * @since 2.5.0\n */\nexport function head(nea) {\n    return nea[0];\n}\n/**\n * @since 2.5.0\n */\nexport function tail(nea) {\n    return nea.slice(1);\n}\n/**\n * @category combinators\n * @since 2.5.0\n */\nexport var reverse = RA.reverse;\n/**\n * @since 2.5.0\n */\nexport function min(ord) {\n    var S = getMeetSemigroup(ord);\n    return function (nea) { return nea.reduce(S.concat); };\n}\n/**\n * @since 2.5.0\n */\nexport function max(ord) {\n    var S = getJoinSemigroup(ord);\n    return function (nea) { return nea.reduce(S.concat); };\n}\n/**\n * Builds a `Semigroup` instance for `ReadonlyNonEmptyArray`\n *\n * @category instances\n * @since 2.5.0\n */\nexport function getSemigroup() {\n    return {\n        concat: concat\n    };\n}\n/**\n * @example\n * import { getEq, cons } from 'fp-ts/ReadonlyNonEmptyArray'\n * import { eqNumber } from 'fp-ts/Eq'\n *\n * const E = getEq(eqNumber)\n * assert.strictEqual(E.equals(cons(1, [2]), [1, 2]), true)\n * assert.strictEqual(E.equals(cons(1, [2]), [1, 3]), false)\n *\n * @category instances\n * @since 2.5.0\n */\nexport var getEq = RA.getEq;\nexport function group(E) {\n    return function (as) {\n        var len = as.length;\n        if (len === 0) {\n            return RA.empty;\n        }\n        // tslint:disable-next-line: readonly-array\n        var r = [];\n        var head = as[0];\n        var nea = [head];\n        for (var i = 1; i < len; i++) {\n            var x = as[i];\n            if (E.equals(x, head)) {\n                nea.push(x);\n            }\n            else {\n                r.push(nea);\n                head = x;\n                nea = [head];\n            }\n        }\n        r.push(nea);\n        return r;\n    };\n}\nexport function groupSort(O) {\n    var sortO = RA.sort(O);\n    var groupO = group(O);\n    return function (as) { return groupO(sortO(as)); };\n}\n/**\n * Splits an array into sub-non-empty-arrays stored in an object, based on the result of calling a `string`-returning\n * function on each element, and grouping the results according to values returned\n *\n * @example\n * import { cons, groupBy } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(groupBy((s: string) => String(s.length))(['foo', 'bar', 'foobar']), {\n *   '3': cons('foo', ['bar']),\n *   '6': cons('foobar', [])\n * })\n *\n * @category constructors\n * @since 2.5.0\n */\nexport function groupBy(f) {\n    return function (as) {\n        var r = {};\n        for (var _i = 0, as_1 = as; _i < as_1.length; _i++) {\n            var a = as_1[_i];\n            var k = f(a);\n            if (r.hasOwnProperty(k)) {\n                r[k].push(a);\n            }\n            else {\n                r[k] = [a];\n            }\n        }\n        return r;\n    };\n}\n/**\n * @since 2.5.0\n */\nexport function last(nea) {\n    return nea[nea.length - 1];\n}\n/**\n * Get all but the last element of a non empty array, creating a new array.\n *\n * @example\n * import { init } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(init([1, 2, 3]), [1, 2])\n * assert.deepStrictEqual(init([1]), [])\n *\n * @since 2.5.0\n */\nexport function init(nea) {\n    return nea.slice(0, -1);\n}\n/**\n * @category combinators\n * @since 2.5.0\n */\nexport function sort(O) {\n    return RA.sort(O);\n}\n/**\n * @since 2.5.0\n */\nexport function insertAt(i, a) {\n    return RA.insertAt(i, a);\n}\n/**\n * @since 2.5.0\n */\nexport function updateAt(i, a) {\n    return RA.updateAt(i, a);\n}\n/**\n * @since 2.5.0\n */\nexport function modifyAt(i, f) {\n    return RA.modifyAt(i, f);\n}\nexport function filter(predicate) {\n    return filterWithIndex(function (_, a) { return predicate(a); });\n}\n/**\n * @since 2.5.0\n */\nexport function filterWithIndex(predicate) {\n    return function (nea) { return fromReadonlyArray(nea.filter(function (a, i) { return predicate(i, a); })); };\n}\n/**\n * Wrap a value into the type constructor.\n *\n * @category Applicative\n * @since 2.5.0\n */\nexport var of = RA.of;\nexport function concat(fx, fy) {\n    return fx.concat(fy);\n}\n/**\n * @since 2.5.0\n */\nexport function fold(S) {\n    return function (fa) { return fa.reduce(S.concat); };\n}\n/**\n * @category combinators\n * @since 2.5.1\n */\nexport var zipWith = RA.zipWith;\n/**\n * @category combinators\n * @since 2.5.1\n */\nexport var zip = RA.zip;\n/**\n * @since 2.5.1\n */\nexport var unzip = RA.unzip;\n/**\n * Prepend an element to every member of an array\n *\n * @example\n * import { cons, prependToAll } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(prependToAll(9)(cons(1, [2, 3, 4])), cons(9, [1, 9, 2, 9, 3, 9, 4]))\n *\n * @category combinators\n * @since 2.9.0\n */\nexport var prependToAll = RA.prependToAll;\n/**\n * Places an element in between members of an array\n *\n * @example\n * import { cons, intersperse } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(intersperse(9)(cons(1, [2, 3, 4])), cons(1, [9, 2, 9, 3, 9, 4]))\n *\n * @category combinators\n * @since 2.9.0\n */\nexport var intersperse = RA.intersperse;\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\nvar map_ = RA.Functor.map;\nvar mapWithIndex_ = RA.FunctorWithIndex.mapWithIndex;\nvar ap_ = RA.Applicative.ap;\nvar chain_ = RA.Monad.chain;\nvar extend_ = RA.Extend.extend;\nvar reduce_ = RA.Foldable.reduce;\nvar foldMap_ = RA.Foldable.foldMap;\nvar reduceRight_ = RA.Foldable.reduceRight;\nvar traverse_ = RA.Traversable.traverse;\nvar alt_ = RA.Alt.alt;\nvar reduceWithIndex_ = RA.FoldableWithIndex.reduceWithIndex;\nvar foldMapWithIndex_ = RA.FoldableWithIndex\n    .foldMapWithIndex;\nvar reduceRightWithIndex_ = RA.FoldableWithIndex\n    .reduceRightWithIndex;\nvar traverseWithIndex_ = RA.TraversableWithIndex\n    .traverseWithIndex;\n// -------------------------------------------------------------------------------------\n// pipeables\n// -------------------------------------------------------------------------------------\n/**\n * @category FoldableWithIndex\n * @since 2.5.0\n */\nexport var foldMapWithIndex = function (S) { return function (f) { return function (fa) { return fa.slice(1).reduce(function (s, a, i) { return S.concat(s, f(i + 1, a)); }, f(0, fa[0])); }; }; };\n/**\n * @category Foldable\n * @since 2.5.0\n */\nexport var foldMap = function (S) { return function (f) { return function (fa) {\n    return fa.slice(1).reduce(function (s, a) { return S.concat(s, f(a)); }, f(fa[0]));\n}; }; };\n/**\n * Less strict version of [`alt`](#alt).\n *\n * @category Alt\n * @since 2.9.0\n */\nexport var altW = RA.altW;\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * @category Alt\n * @since 2.6.2\n */\nexport var alt = RA.alt;\n/**\n * @category Apply\n * @since 2.5.0\n */\nexport var ap = RA.ap;\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexport var apFirst = RA.apFirst;\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexport var apSecond = RA.apSecond;\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @category Monad\n * @since 2.5.0\n */\nexport var chain = RA.chain;\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * Derivable from `Monad`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexport var chainFirst = RA.chainFirst;\n/**\n * Derivable from `Extend`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexport var duplicate = RA.duplicate;\n/**\n * @category Extend\n * @since 2.5.0\n */\nexport var extend = RA.extend;\n/**\n * Derivable from `Monad`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexport var flatten = RA.flatten;\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category Functor\n * @since 2.5.0\n */\nexport var map = RA.map;\n/**\n * @category FunctorWithIndex\n * @since 2.5.0\n */\nexport var mapWithIndex = RA.mapWithIndex;\n/**\n * @category Foldable\n * @since 2.5.0\n */\nexport var reduce = RA.reduce;\n/**\n * @category FoldableWithIndex\n * @since 2.5.0\n */\nexport var reduceWithIndex = RA.reduceWithIndex;\n/**\n * @category Foldable\n * @since 2.5.0\n */\nexport var reduceRight = RA.reduceRight;\n/**\n * @category FoldableWithIndex\n * @since 2.5.0\n */\nexport var reduceRightWithIndex = RA.reduceRightWithIndex;\n/**\n * @since 2.6.3\n */\nexport var traverse = RA.traverse;\n/**\n * @since 2.6.3\n */\nexport var sequence = RA.sequence;\n/**\n * @since 2.6.3\n */\nexport var traverseWithIndex = RA.traverseWithIndex;\n/**\n * @since 2.6.3\n */\nexport var extract = head;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.5.0\n */\nexport var URI = 'ReadonlyNonEmptyArray';\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Functor = {\n    URI: URI,\n    map: map_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var FunctorWithIndex = {\n    URI: URI,\n    map: map_,\n    mapWithIndex: mapWithIndex_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Applicative = {\n    URI: URI,\n    map: map_,\n    ap: ap_,\n    of: of\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Monad = {\n    URI: URI,\n    map: map_,\n    ap: ap_,\n    of: of,\n    chain: chain_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Foldable = {\n    URI: URI,\n    reduce: reduce_,\n    foldMap: foldMap_,\n    reduceRight: reduceRight_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var FoldableWithIndex = {\n    URI: URI,\n    reduce: reduce_,\n    foldMap: foldMap_,\n    reduceRight: reduceRight_,\n    reduceWithIndex: reduceWithIndex_,\n    foldMapWithIndex: foldMapWithIndex_,\n    reduceRightWithIndex: reduceRightWithIndex_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Traversable = {\n    URI: URI,\n    map: map_,\n    reduce: reduce_,\n    foldMap: foldMap_,\n    reduceRight: reduceRight_,\n    traverse: traverse_,\n    sequence: sequence\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var TraversableWithIndex = {\n    URI: URI,\n    map: map_,\n    mapWithIndex: mapWithIndex_,\n    reduce: reduce_,\n    foldMap: foldMap_,\n    reduceRight: reduceRight_,\n    traverse: traverse_,\n    sequence: sequence,\n    reduceWithIndex: reduceWithIndex_,\n    foldMapWithIndex: foldMapWithIndex_,\n    reduceRightWithIndex: reduceRightWithIndex_,\n    traverseWithIndex: traverseWithIndex_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Alt = {\n    URI: URI,\n    map: map_,\n    alt: alt_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Comonad = {\n    URI: URI,\n    map: map_,\n    extend: extend_,\n    extract: extract\n};\n// TODO: remove in v3\n/**\n * @category instances\n * @since 2.5.0\n */\nexport var readonlyNonEmptyArray = {\n    URI: URI,\n    of: of,\n    map: map_,\n    mapWithIndex: mapWithIndex_,\n    ap: ap_,\n    chain: chain_,\n    extend: extend_,\n    extract: extract,\n    reduce: reduce_,\n    foldMap: foldMap_,\n    reduceRight: reduceRight_,\n    traverse: traverse_,\n    sequence: sequence,\n    reduceWithIndex: reduceWithIndex_,\n    foldMapWithIndex: foldMapWithIndex_,\n    reduceRightWithIndex: reduceRightWithIndex_,\n    traverseWithIndex: traverseWithIndex_,\n    alt: alt_\n};\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.9.0\n */\nexport var Do = \n/*#__PURE__*/\nof({});\n/**\n * @since 2.8.0\n */\nexport var bindTo = function (name) { return map(bindTo_(name)); };\n/**\n * @since 2.8.0\n */\nexport var bind = function (name, f) {\n    return chain(function (a) {\n        return pipe(f(a), map(function (b) { return bind_(a, name, b); }));\n    });\n};\n// -------------------------------------------------------------------------------------\n// pipeable sequence S\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.8.0\n */\nexport var apS = function (name, fb) {\n    return flow(map(function (a) { return function (b) { return bind_(a, name, b); }; }), ap(fb));\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}