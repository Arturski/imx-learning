{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.fromQuorumWallet = exports.fromKryptoKit = exports.fromEtherCamp = exports.fromEtherWallet = void 0;\nvar crypto = __importStar(require(\"crypto\"));\nvar ethereumjs_util_1 = require(\"ethereumjs-util\");\nvar scrypt_js_1 = require(\"scrypt-js\");\nvar index_1 = __importDefault(require(\"./index\"));\nvar utf8 = require('utf8');\nvar aesjs = require('aes-js');\nfunction runCipherBuffer(cipher, data) {\n  return Buffer.concat([cipher.update(data), cipher.final()]);\n}\nvar evpKdfDefaults = {\n  count: 1,\n  keysize: 16,\n  ivsize: 16,\n  digest: 'md5'\n};\nfunction mergeEvpKdfOptsWithDefaults(opts) {\n  if (!opts) {\n    return evpKdfDefaults;\n  }\n  return {\n    count: opts.count || evpKdfDefaults.count,\n    keysize: opts.keysize || evpKdfDefaults.keysize,\n    ivsize: opts.ivsize || evpKdfDefaults.ivsize,\n    digest: opts.digest || evpKdfDefaults.digest\n  };\n}\n/*\n * opts:\n * - digest - digest algorithm, defaults to md5\n * - count - hash iterations\n * - keysize - desired key size\n * - ivsize - desired IV size\n *\n * Algorithm form https://www.openssl.org/docs/manmaster/crypto/EVP_BytesToKey.html\n *\n * FIXME: not optimised at all\n */\nfunction evp_kdf(data, salt, opts) {\n  var params = mergeEvpKdfOptsWithDefaults(opts);\n  // A single EVP iteration, returns `D_i`, where block equlas to `D_(i-1)`\n  function iter(block) {\n    var hash = crypto.createHash(params.digest);\n    hash.update(block);\n    hash.update(data);\n    hash.update(salt);\n    block = hash.digest();\n    for (var i_1 = 1, len = params.count; i_1 < len; i_1++) {\n      hash = crypto.createHash(params.digest);\n      hash.update(block);\n      block = hash.digest();\n    }\n    return block;\n  }\n  var ret = [];\n  var i = 0;\n  while (Buffer.concat(ret).length < params.keysize + params.ivsize) {\n    ret[i] = iter(i === 0 ? Buffer.alloc(0) : ret[i - 1]);\n    i++;\n  }\n  var tmp = Buffer.concat(ret);\n  return {\n    key: tmp.slice(0, params.keysize),\n    iv: tmp.slice(params.keysize, params.keysize + params.ivsize)\n  };\n}\n// http://stackoverflow.com/questions/25288311/cryptojs-aes-pattern-always-ends-with\nfunction decodeCryptojsSalt(input) {\n  var ciphertext = Buffer.from(input, 'base64');\n  if (ciphertext.slice(0, 8).toString() === 'Salted__') {\n    return {\n      salt: ciphertext.slice(8, 16),\n      ciphertext: ciphertext.slice(16)\n    };\n  }\n  return {\n    ciphertext: ciphertext\n  };\n}\n/*\n * Third Party API: Import a wallet generated by EtherWallet\n * This wallet format is created by https://github.com/SilentCicero/ethereumjs-accounts\n * and used on https://www.myetherwallet.com/\n */\nfunction fromEtherWallet(input, password) {\n  var json = typeof input === 'object' ? input : JSON.parse(input);\n  var privateKey;\n  if (!json.locked) {\n    if (json.private.length !== 64) {\n      throw new Error('Invalid private key length');\n    }\n    privateKey = Buffer.from(json.private, 'hex');\n  } else {\n    if (typeof password !== 'string') {\n      throw new Error('Password required');\n    }\n    if (password.length < 7) {\n      throw new Error('Password must be at least 7 characters');\n    }\n    // the \"encrypted\" version has the low 4 bytes\n    // of the hash of the address appended\n    var hash = json.encrypted ? json.private.slice(0, 128) : json.private;\n    // decode openssl ciphertext + salt encoding\n    var cipher = decodeCryptojsSalt(hash);\n    if (!cipher.salt) {\n      throw new Error('Unsupported EtherWallet key format');\n    }\n    // derive key/iv using OpenSSL EVP as implemented in CryptoJS\n    var evp = evp_kdf(Buffer.from(password), cipher.salt, {\n      keysize: 32,\n      ivsize: 16\n    });\n    var decipher = crypto.createDecipheriv('aes-256-cbc', evp.key, evp.iv);\n    privateKey = runCipherBuffer(decipher, Buffer.from(cipher.ciphertext));\n    // NOTE: yes, they've run it through UTF8\n    privateKey = Buffer.from(utf8.decode(privateKey.toString()), 'hex');\n  }\n  var wallet = new index_1.default(privateKey);\n  if (wallet.getAddressString() !== json.address) {\n    throw new Error('Invalid private key or address');\n  }\n  return wallet;\n}\nexports.fromEtherWallet = fromEtherWallet;\n/**\n * Third Party API: Import a brain wallet used by Ether.Camp\n */\nfunction fromEtherCamp(passphrase) {\n  return new index_1.default((0, ethereumjs_util_1.keccak256)(Buffer.from(passphrase)));\n}\nexports.fromEtherCamp = fromEtherCamp;\n/**\n * Third Party API: Import a wallet from a KryptoKit seed\n */\nfunction fromKryptoKit(entropy, password) {\n  return __awaiter(this, void 0, void 0, function () {\n    function kryptoKitBrokenScryptSeed(buf) {\n      // js-scrypt calls `Buffer.from(String(salt), 'utf8')` on the seed even though it is a buffer\n      //\n      // The `buffer`` implementation used does the below transformation (doesn't matches the current version):\n      // https://github.com/feross/buffer/blob/67c61181b938b17d10dbfc0a545f713b8bd59de8/index.js\n      function decodeUtf8Char(str) {\n        try {\n          return decodeURIComponent(str);\n        } catch (err) {\n          return String.fromCharCode(0xfffd); // UTF 8 invalid char\n        }\n      }\n\n      var res = '',\n        tmp = '';\n      for (var i = 0; i < buf.length; i++) {\n        if (buf[i] <= 0x7f) {\n          res += decodeUtf8Char(tmp) + String.fromCharCode(buf[i]);\n          tmp = '';\n        } else {\n          tmp += '%' + buf[i].toString(16);\n        }\n      }\n      return Buffer.from(res + decodeUtf8Char(tmp));\n    }\n    var type, privateKey, encryptedSeed, checksum, salt, aesKey, decipher;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (entropy[0] === '#') {\n            entropy = entropy.slice(1);\n          }\n          type = entropy[0];\n          entropy = entropy.slice(1);\n          if (!(type === 'd')) return [3 /*break*/, 1];\n          privateKey = (0, ethereumjs_util_1.sha256)((0, ethereumjs_util_1.toBuffer)(entropy));\n          return [3 /*break*/, 4];\n        case 1:\n          if (!(type === 'q')) return [3 /*break*/, 3];\n          if (typeof password !== 'string') {\n            throw new Error('Password required');\n          }\n          encryptedSeed = (0, ethereumjs_util_1.sha256)(Buffer.from(entropy.slice(0, 30)));\n          checksum = entropy.slice(30, 46);\n          salt = kryptoKitBrokenScryptSeed(encryptedSeed);\n          return [4 /*yield*/, (0, scrypt_js_1.scrypt)(Buffer.from(password, 'utf8'), salt, 16384, 8, 1, 32)\n          /* FIXME: try to use `crypto` instead of `aesjs`\n                               // NOTE: ECB doesn't use the IV, so it can be anything\n          var decipher = crypto.createDecipheriv(\"aes-256-ecb\", aesKey, Buffer.from(0))\n                               // FIXME: this is a clear abuse, but seems to match how ECB in aesjs works\n          privKey = Buffer.concat([\n            decipher.update(encryptedSeed).slice(0, 16),\n            decipher.update(encryptedSeed).slice(0, 16),\n          ])\n          */];\n\n        case 2:\n          aesKey = _a.sent();\n          decipher = new aesjs.ModeOfOperation.ecb(aesKey);\n          /* decrypt returns an Uint8Array, perhaps there is a better way to concatenate */\n          privateKey = Buffer.concat([Buffer.from(decipher.decrypt(encryptedSeed.slice(0, 16))), Buffer.from(decipher.decrypt(encryptedSeed.slice(16, 32)))]);\n          if (checksum.length > 0) {\n            if (checksum !== (0, ethereumjs_util_1.sha256)((0, ethereumjs_util_1.sha256)(privateKey)).slice(0, 8).toString('hex')) {\n              throw new Error('Failed to decrypt input - possibly invalid passphrase');\n            }\n          }\n          return [3 /*break*/, 4];\n        case 3:\n          throw new Error('Unsupported or invalid entropy type');\n        case 4:\n          return [2 /*return*/, new index_1.default(privateKey)];\n      }\n    });\n  });\n}\nexports.fromKryptoKit = fromKryptoKit;\n/**\n * Third Party API: Import a brain wallet used by Quorum Wallet\n */\nfunction fromQuorumWallet(passphrase, userid) {\n  if (passphrase.length < 10) {\n    throw new Error('Passphrase must be at least 10 characters');\n  }\n  if (userid.length < 10) {\n    throw new Error('User id must be at least 10 characters');\n  }\n  var merged = passphrase + userid;\n  var seed = crypto.pbkdf2Sync(merged, merged, 2000, 32, 'sha256');\n  return new index_1.default(seed);\n}\nexports.fromQuorumWallet = fromQuorumWallet;\nvar Thirdparty = {\n  fromEtherWallet: fromEtherWallet,\n  fromEtherCamp: fromEtherCamp,\n  fromKryptoKit: fromKryptoKit,\n  fromQuorumWallet: fromQuorumWallet\n};\nexports.default = Thirdparty;","map":{"version":3,"sources":["../src/thirdparty.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromQuorumWallet = exports.fromKryptoKit = exports.fromEtherCamp = exports.fromEtherWallet = void 0;\nvar crypto = __importStar(require(\"crypto\"));\nvar ethereumjs_util_1 = require(\"ethereumjs-util\");\nvar scrypt_js_1 = require(\"scrypt-js\");\nvar index_1 = __importDefault(require(\"./index\"));\nvar utf8 = require('utf8');\nvar aesjs = require('aes-js');\nfunction runCipherBuffer(cipher, data) {\n    return Buffer.concat([cipher.update(data), cipher.final()]);\n}\nvar evpKdfDefaults = {\n    count: 1,\n    keysize: 16,\n    ivsize: 16,\n    digest: 'md5',\n};\nfunction mergeEvpKdfOptsWithDefaults(opts) {\n    if (!opts) {\n        return evpKdfDefaults;\n    }\n    return {\n        count: opts.count || evpKdfDefaults.count,\n        keysize: opts.keysize || evpKdfDefaults.keysize,\n        ivsize: opts.ivsize || evpKdfDefaults.ivsize,\n        digest: opts.digest || evpKdfDefaults.digest,\n    };\n}\n/*\n * opts:\n * - digest - digest algorithm, defaults to md5\n * - count - hash iterations\n * - keysize - desired key size\n * - ivsize - desired IV size\n *\n * Algorithm form https://www.openssl.org/docs/manmaster/crypto/EVP_BytesToKey.html\n *\n * FIXME: not optimised at all\n */\nfunction evp_kdf(data, salt, opts) {\n    var params = mergeEvpKdfOptsWithDefaults(opts);\n    // A single EVP iteration, returns `D_i`, where block equlas to `D_(i-1)`\n    function iter(block) {\n        var hash = crypto.createHash(params.digest);\n        hash.update(block);\n        hash.update(data);\n        hash.update(salt);\n        block = hash.digest();\n        for (var i_1 = 1, len = params.count; i_1 < len; i_1++) {\n            hash = crypto.createHash(params.digest);\n            hash.update(block);\n            block = hash.digest();\n        }\n        return block;\n    }\n    var ret = [];\n    var i = 0;\n    while (Buffer.concat(ret).length < params.keysize + params.ivsize) {\n        ret[i] = iter(i === 0 ? Buffer.alloc(0) : ret[i - 1]);\n        i++;\n    }\n    var tmp = Buffer.concat(ret);\n    return {\n        key: tmp.slice(0, params.keysize),\n        iv: tmp.slice(params.keysize, params.keysize + params.ivsize),\n    };\n}\n// http://stackoverflow.com/questions/25288311/cryptojs-aes-pattern-always-ends-with\nfunction decodeCryptojsSalt(input) {\n    var ciphertext = Buffer.from(input, 'base64');\n    if (ciphertext.slice(0, 8).toString() === 'Salted__') {\n        return {\n            salt: ciphertext.slice(8, 16),\n            ciphertext: ciphertext.slice(16),\n        };\n    }\n    return { ciphertext: ciphertext };\n}\n/*\n * Third Party API: Import a wallet generated by EtherWallet\n * This wallet format is created by https://github.com/SilentCicero/ethereumjs-accounts\n * and used on https://www.myetherwallet.com/\n */\nfunction fromEtherWallet(input, password) {\n    var json = typeof input === 'object' ? input : JSON.parse(input);\n    var privateKey;\n    if (!json.locked) {\n        if (json.private.length !== 64) {\n            throw new Error('Invalid private key length');\n        }\n        privateKey = Buffer.from(json.private, 'hex');\n    }\n    else {\n        if (typeof password !== 'string') {\n            throw new Error('Password required');\n        }\n        if (password.length < 7) {\n            throw new Error('Password must be at least 7 characters');\n        }\n        // the \"encrypted\" version has the low 4 bytes\n        // of the hash of the address appended\n        var hash = json.encrypted ? json.private.slice(0, 128) : json.private;\n        // decode openssl ciphertext + salt encoding\n        var cipher = decodeCryptojsSalt(hash);\n        if (!cipher.salt) {\n            throw new Error('Unsupported EtherWallet key format');\n        }\n        // derive key/iv using OpenSSL EVP as implemented in CryptoJS\n        var evp = evp_kdf(Buffer.from(password), cipher.salt, { keysize: 32, ivsize: 16 });\n        var decipher = crypto.createDecipheriv('aes-256-cbc', evp.key, evp.iv);\n        privateKey = runCipherBuffer(decipher, Buffer.from(cipher.ciphertext));\n        // NOTE: yes, they've run it through UTF8\n        privateKey = Buffer.from(utf8.decode(privateKey.toString()), 'hex');\n    }\n    var wallet = new index_1.default(privateKey);\n    if (wallet.getAddressString() !== json.address) {\n        throw new Error('Invalid private key or address');\n    }\n    return wallet;\n}\nexports.fromEtherWallet = fromEtherWallet;\n/**\n * Third Party API: Import a brain wallet used by Ether.Camp\n */\nfunction fromEtherCamp(passphrase) {\n    return new index_1.default((0, ethereumjs_util_1.keccak256)(Buffer.from(passphrase)));\n}\nexports.fromEtherCamp = fromEtherCamp;\n/**\n * Third Party API: Import a wallet from a KryptoKit seed\n */\nfunction fromKryptoKit(entropy, password) {\n    return __awaiter(this, void 0, void 0, function () {\n        function kryptoKitBrokenScryptSeed(buf) {\n            // js-scrypt calls `Buffer.from(String(salt), 'utf8')` on the seed even though it is a buffer\n            //\n            // The `buffer`` implementation used does the below transformation (doesn't matches the current version):\n            // https://github.com/feross/buffer/blob/67c61181b938b17d10dbfc0a545f713b8bd59de8/index.js\n            function decodeUtf8Char(str) {\n                try {\n                    return decodeURIComponent(str);\n                }\n                catch (err) {\n                    return String.fromCharCode(0xfffd); // UTF 8 invalid char\n                }\n            }\n            var res = '', tmp = '';\n            for (var i = 0; i < buf.length; i++) {\n                if (buf[i] <= 0x7f) {\n                    res += decodeUtf8Char(tmp) + String.fromCharCode(buf[i]);\n                    tmp = '';\n                }\n                else {\n                    tmp += '%' + buf[i].toString(16);\n                }\n            }\n            return Buffer.from(res + decodeUtf8Char(tmp));\n        }\n        var type, privateKey, encryptedSeed, checksum, salt, aesKey, decipher;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (entropy[0] === '#') {\n                        entropy = entropy.slice(1);\n                    }\n                    type = entropy[0];\n                    entropy = entropy.slice(1);\n                    if (!(type === 'd')) return [3 /*break*/, 1];\n                    privateKey = (0, ethereumjs_util_1.sha256)((0, ethereumjs_util_1.toBuffer)(entropy));\n                    return [3 /*break*/, 4];\n                case 1:\n                    if (!(type === 'q')) return [3 /*break*/, 3];\n                    if (typeof password !== 'string') {\n                        throw new Error('Password required');\n                    }\n                    encryptedSeed = (0, ethereumjs_util_1.sha256)(Buffer.from(entropy.slice(0, 30)));\n                    checksum = entropy.slice(30, 46);\n                    salt = kryptoKitBrokenScryptSeed(encryptedSeed);\n                    return [4 /*yield*/, (0, scrypt_js_1.scrypt)(Buffer.from(password, 'utf8'), salt, 16384, 8, 1, 32)\n                        /* FIXME: try to use `crypto` instead of `aesjs`\n                    \n                        // NOTE: ECB doesn't use the IV, so it can be anything\n                        var decipher = crypto.createDecipheriv(\"aes-256-ecb\", aesKey, Buffer.from(0))\n                    \n                        // FIXME: this is a clear abuse, but seems to match how ECB in aesjs works\n                        privKey = Buffer.concat([\n                          decipher.update(encryptedSeed).slice(0, 16),\n                          decipher.update(encryptedSeed).slice(0, 16),\n                        ])\n                        */\n                    ];\n                case 2:\n                    aesKey = _a.sent();\n                    decipher = new aesjs.ModeOfOperation.ecb(aesKey);\n                    /* decrypt returns an Uint8Array, perhaps there is a better way to concatenate */\n                    privateKey = Buffer.concat([\n                        Buffer.from(decipher.decrypt(encryptedSeed.slice(0, 16))),\n                        Buffer.from(decipher.decrypt(encryptedSeed.slice(16, 32))),\n                    ]);\n                    if (checksum.length > 0) {\n                        if (checksum !== (0, ethereumjs_util_1.sha256)((0, ethereumjs_util_1.sha256)(privateKey)).slice(0, 8).toString('hex')) {\n                            throw new Error('Failed to decrypt input - possibly invalid passphrase');\n                        }\n                    }\n                    return [3 /*break*/, 4];\n                case 3: throw new Error('Unsupported or invalid entropy type');\n                case 4: return [2 /*return*/, new index_1.default(privateKey)];\n            }\n        });\n    });\n}\nexports.fromKryptoKit = fromKryptoKit;\n/**\n * Third Party API: Import a brain wallet used by Quorum Wallet\n */\nfunction fromQuorumWallet(passphrase, userid) {\n    if (passphrase.length < 10) {\n        throw new Error('Passphrase must be at least 10 characters');\n    }\n    if (userid.length < 10) {\n        throw new Error('User id must be at least 10 characters');\n    }\n    var merged = passphrase + userid;\n    var seed = crypto.pbkdf2Sync(merged, merged, 2000, 32, 'sha256');\n    return new index_1.default(seed);\n}\nexports.fromQuorumWallet = fromQuorumWallet;\nvar Thirdparty = {\n    fromEtherWallet: fromEtherWallet,\n    fromEtherCamp: fromEtherCamp,\n    fromKryptoKit: fromKryptoKit,\n    fromQuorumWallet: fromQuorumWallet,\n};\nexports.default = Thirdparty;\n//# sourceMappingURL=thirdparty.js.map"]},"metadata":{},"sourceType":"script"}