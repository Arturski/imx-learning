{"ast":null,"code":"import * as RM from './ReadonlyMap';\n/* tslint:disable:readonly-array */\n/**\n * @category instances\n * @since 2.0.0\n */\nexport var getShow = RM.getShow;\n/**\n * Calculate the number of key/value pairs in a map\n *\n * @since 2.0.0\n */\nexport var size = RM.size;\n/**\n * Test whether or not a map is empty\n *\n * @since 2.0.0\n */\nexport var isEmpty = RM.isEmpty;\n// TODO: remove non-curried overloading in v3\n/**\n * Test whether or not a key exists in a map\n *\n * @since 2.0.0\n */\nexport var member = RM.member;\n// TODO: remove non-curried overloading in v3\n/**\n * Test whether or not a value is a member of a map\n *\n * @since 2.0.0\n */\nexport var elem = RM.elem;\n/**\n * Get a sorted array of the keys contained in a map\n *\n * @since 2.0.0\n */\nexport var keys = RM.keys;\n/**\n * Get a sorted array of the values contained in a map\n *\n * @since 2.0.0\n */\nexport var values = RM.values;\n/**\n * @since 2.0.0\n */\nexport var collect = RM.collect;\n/**\n * Get a sorted of the key/value pairs contained in a map\n *\n * @since 2.0.0\n */\nexport var toArray = RM.toReadonlyArray;\nexport function toUnfoldable(O, U) {\n  return RM.toUnfoldable(O, U);\n}\n/**\n * Insert or replace a key/value pair in a map\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var insertAt = RM.insertAt;\n/**\n * Delete a key and value from a map\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var deleteAt = RM.deleteAt;\n/**\n * @since 2.0.0\n */\nexport var updateAt = RM.updateAt;\n/**\n * @since 2.0.0\n */\nexport var modifyAt = RM.modifyAt;\n/**\n * Delete a key and value from a map, returning the value as well as the subsequent map\n *\n * @since 2.0.0\n */\nexport var pop = RM.pop;\n// TODO: remove non-curried overloading in v3\n/**\n * Lookup the value for a key in a `Map`.\n * If the result is a `Some`, the existing key is also returned.\n *\n * @since 2.0.0\n */\nexport var lookupWithKey = RM.lookupWithKey;\n// TODO: remove non-curried overloading in v3\n/**\n * Lookup the value for a key in a `Map`.\n *\n * @since 2.0.0\n */\nexport var lookup = RM.lookup;\n// TODO: remove non-curried overloading in v3\n/**\n * Test whether or not one `Map` contains all of the keys and values contained in another `Map`\n *\n * @since 2.0.0\n */\nexport var isSubmap = RM.isSubmap;\n/**\n * @since 2.0.0\n */\nexport var empty = new Map();\n/**\n * @category instances\n * @since 2.0.0\n */\nexport var getEq = RM.getEq;\n/**\n * Gets `Monoid` instance for Maps given `Semigroup` instance for their values\n *\n * @category instances\n * @since 2.0.0\n */\nexport var getMonoid = RM.getMonoid;\n/**\n * Create a map with one key/value pair\n *\n * @since 2.0.0\n */\nexport var singleton = RM.singleton;\nexport function fromFoldable(E, M, F) {\n  return RM.fromFoldable(E, M, F);\n}\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\nvar map__ = RM.Functor.map;\nvar filter_ = RM.Filterable.filter;\nvar filterMap_ = RM.Filterable.filterMap;\nvar partition_ = RM.Filterable.partition;\nvar partitionMap_ = RM.Filterable.partitionMap;\n// -------------------------------------------------------------------------------------\n// pipeables\n// -------------------------------------------------------------------------------------\n/**\n * @category Compactable\n * @since 2.0.0\n */\nexport var compact = RM.compact;\n/**\n * @category Filterable\n * @since 2.0.0\n */\nexport var filter = RM.filter;\n/**\n * @category Filterable\n * @since 2.0.0\n */\nexport var filterMap = RM.filterMap;\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category Functor\n * @since 2.0.0\n */\nexport var map = RM.map;\n/**\n * @category FunctorWithIndex\n * @since 2.7.1\n */\nexport var mapWithIndex = RM.mapWithIndex;\n/**\n * @category Filterable\n * @since 2.0.0\n */\nexport var partition = RM.partition;\n/**\n * @category Filterable\n * @since 2.0.0\n */\nexport var partitionMap = RM.partitionMap;\n/**\n * @category Compactable\n * @since 2.0.0\n */\nexport var separate = RM.separate;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.0.0\n */\nexport var URI = 'Map';\n/**\n * @category instances\n * @since 2.0.0\n */\nexport var getFilterableWithIndex = RM.getFilterableWithIndex;\n/**\n * @category instances\n * @since 2.0.0\n */\nexport var getWitherable = RM.getWitherable;\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Functor = {\n  URI: URI,\n  map: map__\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Compactable = {\n  URI: URI,\n  compact: compact,\n  separate: separate\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Filterable = {\n  URI: URI,\n  map: map__,\n  compact: compact,\n  separate: separate,\n  filter: filter_,\n  filterMap: filterMap_,\n  partition: partition_,\n  partitionMap: partitionMap_\n};\n// TODO: remove in v3\n/**\n * @category instances\n * @since 2.0.0\n */\nexport var map_ = Filterable;","map":{"version":3,"names":["RM","getShow","size","isEmpty","member","elem","keys","values","collect","toArray","toReadonlyArray","toUnfoldable","O","U","insertAt","deleteAt","updateAt","modifyAt","pop","lookupWithKey","lookup","isSubmap","empty","Map","getEq","getMonoid","singleton","fromFoldable","E","M","F","map__","Functor","map","filter_","Filterable","filter","filterMap_","filterMap","partition_","partition","partitionMap_","partitionMap","compact","mapWithIndex","separate","URI","getFilterableWithIndex","getWitherable","Compactable","map_"],"sources":["/Users/arthurfrancis/Documents/repo/imx-reactjs-integration-example/node_modules/fp-ts/es6/Map.js"],"sourcesContent":["import * as RM from './ReadonlyMap';\n/* tslint:disable:readonly-array */\n/**\n * @category instances\n * @since 2.0.0\n */\nexport var getShow = RM.getShow;\n/**\n * Calculate the number of key/value pairs in a map\n *\n * @since 2.0.0\n */\nexport var size = RM.size;\n/**\n * Test whether or not a map is empty\n *\n * @since 2.0.0\n */\nexport var isEmpty = RM.isEmpty;\n// TODO: remove non-curried overloading in v3\n/**\n * Test whether or not a key exists in a map\n *\n * @since 2.0.0\n */\nexport var member = RM.member;\n// TODO: remove non-curried overloading in v3\n/**\n * Test whether or not a value is a member of a map\n *\n * @since 2.0.0\n */\nexport var elem = RM.elem;\n/**\n * Get a sorted array of the keys contained in a map\n *\n * @since 2.0.0\n */\nexport var keys = RM.keys;\n/**\n * Get a sorted array of the values contained in a map\n *\n * @since 2.0.0\n */\nexport var values = RM.values;\n/**\n * @since 2.0.0\n */\nexport var collect = RM.collect;\n/**\n * Get a sorted of the key/value pairs contained in a map\n *\n * @since 2.0.0\n */\nexport var toArray = RM.toReadonlyArray;\nexport function toUnfoldable(O, U) {\n    return RM.toUnfoldable(O, U);\n}\n/**\n * Insert or replace a key/value pair in a map\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var insertAt = RM.insertAt;\n/**\n * Delete a key and value from a map\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var deleteAt = RM.deleteAt;\n/**\n * @since 2.0.0\n */\nexport var updateAt = RM.updateAt;\n/**\n * @since 2.0.0\n */\nexport var modifyAt = RM.modifyAt;\n/**\n * Delete a key and value from a map, returning the value as well as the subsequent map\n *\n * @since 2.0.0\n */\nexport var pop = RM.pop;\n// TODO: remove non-curried overloading in v3\n/**\n * Lookup the value for a key in a `Map`.\n * If the result is a `Some`, the existing key is also returned.\n *\n * @since 2.0.0\n */\nexport var lookupWithKey = RM.lookupWithKey;\n// TODO: remove non-curried overloading in v3\n/**\n * Lookup the value for a key in a `Map`.\n *\n * @since 2.0.0\n */\nexport var lookup = RM.lookup;\n// TODO: remove non-curried overloading in v3\n/**\n * Test whether or not one `Map` contains all of the keys and values contained in another `Map`\n *\n * @since 2.0.0\n */\nexport var isSubmap = RM.isSubmap;\n/**\n * @since 2.0.0\n */\nexport var empty = new Map();\n/**\n * @category instances\n * @since 2.0.0\n */\nexport var getEq = RM.getEq;\n/**\n * Gets `Monoid` instance for Maps given `Semigroup` instance for their values\n *\n * @category instances\n * @since 2.0.0\n */\nexport var getMonoid = RM.getMonoid;\n/**\n * Create a map with one key/value pair\n *\n * @since 2.0.0\n */\nexport var singleton = RM.singleton;\nexport function fromFoldable(E, M, F) {\n    return RM.fromFoldable(E, M, F);\n}\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\nvar map__ = RM.Functor.map;\nvar filter_ = RM.Filterable.filter;\nvar filterMap_ = RM.Filterable.filterMap;\nvar partition_ = RM.Filterable.partition;\nvar partitionMap_ = RM.Filterable.partitionMap;\n// -------------------------------------------------------------------------------------\n// pipeables\n// -------------------------------------------------------------------------------------\n/**\n * @category Compactable\n * @since 2.0.0\n */\nexport var compact = RM.compact;\n/**\n * @category Filterable\n * @since 2.0.0\n */\nexport var filter = RM.filter;\n/**\n * @category Filterable\n * @since 2.0.0\n */\nexport var filterMap = RM.filterMap;\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category Functor\n * @since 2.0.0\n */\nexport var map = RM.map;\n/**\n * @category FunctorWithIndex\n * @since 2.7.1\n */\nexport var mapWithIndex = RM.mapWithIndex;\n/**\n * @category Filterable\n * @since 2.0.0\n */\nexport var partition = RM.partition;\n/**\n * @category Filterable\n * @since 2.0.0\n */\nexport var partitionMap = RM.partitionMap;\n/**\n * @category Compactable\n * @since 2.0.0\n */\nexport var separate = RM.separate;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.0.0\n */\nexport var URI = 'Map';\n/**\n * @category instances\n * @since 2.0.0\n */\nexport var getFilterableWithIndex = RM.getFilterableWithIndex;\n/**\n * @category instances\n * @since 2.0.0\n */\nexport var getWitherable = RM.getWitherable;\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Functor = {\n    URI: URI,\n    map: map__\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Compactable = {\n    URI: URI,\n    compact: compact,\n    separate: separate\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Filterable = {\n    URI: URI,\n    map: map__,\n    compact: compact,\n    separate: separate,\n    filter: filter_,\n    filterMap: filterMap_,\n    partition: partition_,\n    partitionMap: partitionMap_\n};\n// TODO: remove in v3\n/**\n * @category instances\n * @since 2.0.0\n */\nexport var map_ = Filterable;\n"],"mappings":"AAAA,OAAO,KAAKA,EAAE,MAAM,eAAe;AACnC;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIC,OAAO,GAAGD,EAAE,CAACC,OAAO;AAC/B;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIC,IAAI,GAAGF,EAAE,CAACE,IAAI;AACzB;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIC,OAAO,GAAGH,EAAE,CAACG,OAAO;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIC,MAAM,GAAGJ,EAAE,CAACI,MAAM;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIC,IAAI,GAAGL,EAAE,CAACK,IAAI;AACzB;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIC,IAAI,GAAGN,EAAE,CAACM,IAAI;AACzB;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIC,MAAM,GAAGP,EAAE,CAACO,MAAM;AAC7B;AACA;AACA;AACA,OAAO,IAAIC,OAAO,GAAGR,EAAE,CAACQ,OAAO;AAC/B;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIC,OAAO,GAAGT,EAAE,CAACU,eAAe;AACvC,OAAO,SAASC,YAAY,CAACC,CAAC,EAAEC,CAAC,EAAE;EAC/B,OAAOb,EAAE,CAACW,YAAY,CAACC,CAAC,EAAEC,CAAC,CAAC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIC,QAAQ,GAAGd,EAAE,CAACc,QAAQ;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIC,QAAQ,GAAGf,EAAE,CAACe,QAAQ;AACjC;AACA;AACA;AACA,OAAO,IAAIC,QAAQ,GAAGhB,EAAE,CAACgB,QAAQ;AACjC;AACA;AACA;AACA,OAAO,IAAIC,QAAQ,GAAGjB,EAAE,CAACiB,QAAQ;AACjC;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIC,GAAG,GAAGlB,EAAE,CAACkB,GAAG;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIC,aAAa,GAAGnB,EAAE,CAACmB,aAAa;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIC,MAAM,GAAGpB,EAAE,CAACoB,MAAM;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIC,QAAQ,GAAGrB,EAAE,CAACqB,QAAQ;AACjC;AACA;AACA;AACA,OAAO,IAAIC,KAAK,GAAG,IAAIC,GAAG,EAAE;AAC5B;AACA;AACA;AACA;AACA,OAAO,IAAIC,KAAK,GAAGxB,EAAE,CAACwB,KAAK;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIC,SAAS,GAAGzB,EAAE,CAACyB,SAAS;AACnC;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIC,SAAS,GAAG1B,EAAE,CAAC0B,SAAS;AACnC,OAAO,SAASC,YAAY,CAACC,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAE;EAClC,OAAO9B,EAAE,CAAC2B,YAAY,CAACC,CAAC,EAAEC,CAAC,EAAEC,CAAC,CAAC;AACnC;AACA;AACA;AACA;AACA,IAAIC,KAAK,GAAG/B,EAAE,CAACgC,OAAO,CAACC,GAAG;AAC1B,IAAIC,OAAO,GAAGlC,EAAE,CAACmC,UAAU,CAACC,MAAM;AAClC,IAAIC,UAAU,GAAGrC,EAAE,CAACmC,UAAU,CAACG,SAAS;AACxC,IAAIC,UAAU,GAAGvC,EAAE,CAACmC,UAAU,CAACK,SAAS;AACxC,IAAIC,aAAa,GAAGzC,EAAE,CAACmC,UAAU,CAACO,YAAY;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIC,OAAO,GAAG3C,EAAE,CAAC2C,OAAO;AAC/B;AACA;AACA;AACA;AACA,OAAO,IAAIP,MAAM,GAAGpC,EAAE,CAACoC,MAAM;AAC7B;AACA;AACA;AACA;AACA,OAAO,IAAIE,SAAS,GAAGtC,EAAE,CAACsC,SAAS;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIL,GAAG,GAAGjC,EAAE,CAACiC,GAAG;AACvB;AACA;AACA;AACA;AACA,OAAO,IAAIW,YAAY,GAAG5C,EAAE,CAAC4C,YAAY;AACzC;AACA;AACA;AACA;AACA,OAAO,IAAIJ,SAAS,GAAGxC,EAAE,CAACwC,SAAS;AACnC;AACA;AACA;AACA;AACA,OAAO,IAAIE,YAAY,GAAG1C,EAAE,CAAC0C,YAAY;AACzC;AACA;AACA;AACA;AACA,OAAO,IAAIG,QAAQ,GAAG7C,EAAE,CAAC6C,QAAQ;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIC,GAAG,GAAG,KAAK;AACtB;AACA;AACA;AACA;AACA,OAAO,IAAIC,sBAAsB,GAAG/C,EAAE,CAAC+C,sBAAsB;AAC7D;AACA;AACA;AACA;AACA,OAAO,IAAIC,aAAa,GAAGhD,EAAE,CAACgD,aAAa;AAC3C;AACA;AACA;AACA;AACA,OAAO,IAAIhB,OAAO,GAAG;EACjBc,GAAG,EAAEA,GAAG;EACRb,GAAG,EAAEF;AACT,CAAC;AACD;AACA;AACA;AACA;AACA,OAAO,IAAIkB,WAAW,GAAG;EACrBH,GAAG,EAAEA,GAAG;EACRH,OAAO,EAAEA,OAAO;EAChBE,QAAQ,EAAEA;AACd,CAAC;AACD;AACA;AACA;AACA;AACA,OAAO,IAAIV,UAAU,GAAG;EACpBW,GAAG,EAAEA,GAAG;EACRb,GAAG,EAAEF,KAAK;EACVY,OAAO,EAAEA,OAAO;EAChBE,QAAQ,EAAEA,QAAQ;EAClBT,MAAM,EAAEF,OAAO;EACfI,SAAS,EAAED,UAAU;EACrBG,SAAS,EAAED,UAAU;EACrBG,YAAY,EAAED;AAClB,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIS,IAAI,GAAGf,UAAU"},"metadata":{},"sourceType":"module"}