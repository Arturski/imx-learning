{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.intersperse = exports.prependToAll = exports.unzip = exports.zip = exports.zipWith = exports.sort = exports.lefts = exports.rights = exports.reverse = exports.modifyAt = exports.deleteAt = exports.updateAt = exports.insertAt = exports.findLastIndex = exports.findLastMap = exports.findLast = exports.findFirstMap = exports.findFirst = exports.findIndex = exports.dropLeftWhile = exports.dropRight = exports.dropLeft = exports.spanLeft = exports.takeLeftWhile = exports.takeRight = exports.takeLeft = exports.init = exports.tail = exports.last = exports.head = exports.snoc = exports.cons = exports.lookup = exports.isOutOfBound = exports.isNonEmpty = exports.isEmpty = exports.scanRight = exports.scanLeft = exports.foldRight = exports.foldLeft = exports.flatten = exports.replicate = exports.range = exports.makeBy = exports.getOrd = exports.getEq = exports.getMonoid = exports.getShow = exports.toArray = exports.fromArray = void 0;\nexports.FunctorWithIndex = exports.Functor = exports.URI = exports.unfold = exports.wilt = exports.wither = exports.traverseWithIndex = exports.sequence = exports.traverse = exports.reduceRightWithIndex = exports.reduceRight = exports.reduceWithIndex = exports.foldMap = exports.reduce = exports.foldMapWithIndex = exports.duplicate = exports.extend = exports.filterWithIndex = exports.partitionMapWithIndex = exports.partitionMap = exports.partitionWithIndex = exports.partition = exports.compact = exports.filterMap = exports.filterMapWithIndex = exports.filter = exports.separate = exports.mapWithIndex = exports.map = exports.chainFirst = exports.chainWithIndex = exports.chain = exports.apSecond = exports.apFirst = exports.ap = exports.alt = exports.altW = exports.zero = exports.of = exports.difference = exports.intersection = exports.union = exports.comprehension = exports.chunksOf = exports.splitAt = exports.chop = exports.sortBy = exports.uniq = exports.elem = exports.rotate = void 0;\nexports.apS = exports.bind = exports.bindTo = exports.Do = exports.some = exports.every = exports.empty = exports.unsafeDeleteAt = exports.unsafeUpdateAt = exports.unsafeInsertAt = exports.readonlyArray = exports.Witherable = exports.TraversableWithIndex = exports.Traversable = exports.FoldableWithIndex = exports.Foldable = exports.FilterableWithIndex = exports.Filterable = exports.Compactable = exports.Extend = exports.Alternative = exports.Alt = exports.Unfoldable = exports.Monad = exports.Applicative = void 0;\nvar function_1 = require(\"./function\");\nvar O = __importStar(require(\"./Option\"));\nvar Ord_1 = require(\"./Ord\");\n// -------------------------------------------------------------------------------------\n// model\n// -------------------------------------------------------------------------------------\n/**\n * @category constructors\n * @since 2.5.0\n */\n// tslint:disable-next-line: readonly-array\nfunction fromArray(as) {\n  var l = as.length;\n  if (l === 0) {\n    return exports.empty;\n  }\n  var ras = Array(l);\n  for (var i = 0; i < l; i++) {\n    ras[i] = as[i];\n  }\n  return ras;\n}\nexports.fromArray = fromArray;\n/**\n * @category destructors\n * @since 2.5.0\n */\n// tslint:disable-next-line: readonly-array\nfunction toArray(ras) {\n  var l = ras.length;\n  var as = Array(l);\n  for (var i = 0; i < l; i++) {\n    as[i] = ras[i];\n  }\n  return as;\n}\nexports.toArray = toArray;\n/**\n * @category instances\n * @since 2.5.0\n */\nfunction getShow(S) {\n  return {\n    show: function (as) {\n      return \"[\" + as.map(S.show).join(', ') + \"]\";\n    }\n  };\n}\nexports.getShow = getShow;\nvar concat = function (x, y) {\n  var lenx = x.length;\n  if (lenx === 0) {\n    return y;\n  }\n  var leny = y.length;\n  if (leny === 0) {\n    return x;\n  }\n  var r = Array(lenx + leny);\n  for (var i = 0; i < lenx; i++) {\n    r[i] = x[i];\n  }\n  for (var i = 0; i < leny; i++) {\n    r[i + lenx] = y[i];\n  }\n  return r;\n};\n/**\n * Returns a `Monoid` for `ReadonlyArray<A>`\n *\n * @example\n * import { getMonoid } from 'fp-ts/ReadonlyArray'\n *\n * const M = getMonoid<number>()\n * assert.deepStrictEqual(M.concat([1, 2], [3, 4]), [1, 2, 3, 4])\n *\n * @category instances\n * @since 2.5.0\n */\nfunction getMonoid() {\n  return {\n    concat: concat,\n    empty: exports.empty\n  };\n}\nexports.getMonoid = getMonoid;\n/**\n * Derives an `Eq` over the `ReadonlyArray` of a given element type from the `Eq` of that type. The derived `Eq` defines two\n * arrays as equal if all elements of both arrays are compared equal pairwise with the given `E`. In case of arrays of\n * different lengths, the result is non equality.\n *\n * @example\n * import { eqString } from 'fp-ts/Eq'\n * import { getEq } from 'fp-ts/ReadonlyArray'\n *\n * const E = getEq(eqString)\n * assert.strictEqual(E.equals(['a', 'b'], ['a', 'b']), true)\n * assert.strictEqual(E.equals(['a'], []), false)\n *\n * @category instances\n * @since 2.5.0\n */\nfunction getEq(E) {\n  return {\n    equals: function (xs, ys) {\n      return xs === ys || xs.length === ys.length && xs.every(function (x, i) {\n        return E.equals(x, ys[i]);\n      });\n    }\n  };\n}\nexports.getEq = getEq;\n/**\n * Derives an `Ord` over the `ReadonlyArray` of a given element type from the `Ord` of that type. The ordering between two such\n * arrays is equal to: the first non equal comparison of each arrays elements taken pairwise in increasing order, in\n * case of equality over all the pairwise elements; the longest array is considered the greatest, if both arrays have\n * the same length, the result is equality.\n *\n * @example\n * import { getOrd } from 'fp-ts/ReadonlyArray'\n * import { ordString } from 'fp-ts/Ord'\n *\n * const O = getOrd(ordString)\n * assert.strictEqual(O.compare(['b'], ['a']), 1)\n * assert.strictEqual(O.compare(['a'], ['a']), 0)\n * assert.strictEqual(O.compare(['a'], ['b']), -1)\n *\n *\n * @category instances\n * @since 2.5.0\n */\nfunction getOrd(O) {\n  return Ord_1.fromCompare(function (a, b) {\n    var aLen = a.length;\n    var bLen = b.length;\n    var len = Math.min(aLen, bLen);\n    for (var i = 0; i < len; i++) {\n      var ordering = O.compare(a[i], b[i]);\n      if (ordering !== 0) {\n        return ordering;\n      }\n    }\n    return Ord_1.ordNumber.compare(aLen, bLen);\n  });\n}\nexports.getOrd = getOrd;\n/**\n * Return a list of length `n` with element `i` initialized with `f(i)`\n *\n * @example\n * import { makeBy } from 'fp-ts/ReadonlyArray'\n *\n * const double = (n: number): number => n * 2\n * assert.deepStrictEqual(makeBy(5, double), [0, 2, 4, 6, 8])\n *\n * @category constructors\n * @since 2.5.0\n */\nfunction makeBy(n, f) {\n  // tslint:disable-next-line: readonly-array\n  var r = [];\n  for (var i = 0; i < n; i++) {\n    r.push(f(i));\n  }\n  return r;\n}\nexports.makeBy = makeBy;\n/**\n * Create an array containing a range of integers, including both endpoints\n *\n * @example\n * import { range } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(range(1, 5), [1, 2, 3, 4, 5])\n *\n * @category constructors\n * @since 2.5.0\n */\nfunction range(start, end) {\n  return makeBy(end - start + 1, function (i) {\n    return start + i;\n  });\n}\nexports.range = range;\n/**\n * Create an array containing a value repeated the specified number of times\n *\n * @example\n * import { replicate } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(replicate(3, 'a'), ['a', 'a', 'a'])\n *\n * @category constructors\n * @since 2.5.0\n */\nfunction replicate(n, a) {\n  return makeBy(n, function () {\n    return a;\n  });\n}\nexports.replicate = replicate;\n/**\n * Removes one level of nesting\n *\n * Derivable from `Monad`.\n *\n * @example\n * import { flatten } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(flatten([[1], [2], [3]]), [1, 2, 3])\n *\n * @category combinators\n * @since 2.5.0\n */\nfunction flatten(mma) {\n  var rLen = 0;\n  var len = mma.length;\n  for (var i = 0; i < len; i++) {\n    rLen += mma[i].length;\n  }\n  var r = Array(rLen);\n  var start = 0;\n  for (var i = 0; i < len; i++) {\n    var arr = mma[i];\n    var l = arr.length;\n    for (var j = 0; j < l; j++) {\n      r[j + start] = arr[j];\n    }\n    start += l;\n  }\n  return r;\n}\nexports.flatten = flatten;\n/**\n * Break an array into its first element and remaining elements\n *\n * @example\n * import { foldLeft } from 'fp-ts/ReadonlyArray'\n *\n * const len: <A>(as: ReadonlyArray<A>) => number = foldLeft(() => 0, (_, tail) => 1 + len(tail))\n * assert.strictEqual(len([1, 2, 3]), 3)\n *\n * @category destructors\n * @since 2.5.0\n */\nfunction foldLeft(onEmpty, onCons) {\n  return function (as) {\n    return isEmpty(as) ? onEmpty() : onCons(as[0], as.slice(1));\n  };\n}\nexports.foldLeft = foldLeft;\n/**\n * Break an array into its initial elements and the last element\n *\n * @category destructors\n * @since 2.5.0\n */\nfunction foldRight(onEmpty, onCons) {\n  return function (as) {\n    return isEmpty(as) ? onEmpty() : onCons(as.slice(0, as.length - 1), as[as.length - 1]);\n  };\n}\nexports.foldRight = foldRight;\n/**\n * Same as `reduce` but it carries over the intermediate steps\n *\n * @example\n * import { scanLeft } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(scanLeft(10, (b, a: number) => b - a)([1, 2, 3]), [10, 9, 7, 4])\n *\n * @category combinators\n * @since 2.5.0\n */\nfunction scanLeft(b, f) {\n  return function (as) {\n    var l = as.length;\n    // tslint:disable-next-line: readonly-array\n    var r = new Array(l + 1);\n    r[0] = b;\n    for (var i = 0; i < l; i++) {\n      r[i + 1] = f(r[i], as[i]);\n    }\n    return r;\n  };\n}\nexports.scanLeft = scanLeft;\n/**\n * Fold an array from the right, keeping all intermediate results instead of only the final result\n *\n * @example\n * import { scanRight } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(scanRight(10, (a: number, b) => b - a)([1, 2, 3]), [4, 5, 7, 10])\n *\n * @category combinators\n * @since 2.5.0\n */\nfunction scanRight(b, f) {\n  return function (as) {\n    var l = as.length;\n    // tslint:disable-next-line: readonly-array\n    var r = new Array(l + 1);\n    r[l] = b;\n    for (var i = l - 1; i >= 0; i--) {\n      r[i] = f(as[i], r[i + 1]);\n    }\n    return r;\n  };\n}\nexports.scanRight = scanRight;\n/**\n * Test whether an array is empty\n *\n * @example\n * import { isEmpty } from 'fp-ts/ReadonlyArray'\n *\n * assert.strictEqual(isEmpty([]), true)\n *\n * @since 2.5.0\n */\nfunction isEmpty(as) {\n  return as.length === 0;\n}\nexports.isEmpty = isEmpty;\n/**\n * Test whether an array is non empty narrowing down the type to `NonEmptyReadonlyArray<A>`\n *\n * @category guards\n * @since 2.5.0\n */\nfunction isNonEmpty(as) {\n  return as.length > 0;\n}\nexports.isNonEmpty = isNonEmpty;\n/**\n * Test whether an array contains a particular index\n *\n * @since 2.5.0\n */\nfunction isOutOfBound(i, as) {\n  return i < 0 || i >= as.length;\n}\nexports.isOutOfBound = isOutOfBound;\nfunction lookup(i, as) {\n  return as === undefined ? function (as) {\n    return lookup(i, as);\n  } : isOutOfBound(i, as) ? O.none : O.some(as[i]);\n}\nexports.lookup = lookup;\nfunction cons(head, tail) {\n  if (tail === undefined) {\n    return function (tail) {\n      return cons(head, tail);\n    };\n  }\n  var len = tail.length;\n  var r = Array(len + 1);\n  for (var i = 0; i < len; i++) {\n    r[i + 1] = tail[i];\n  }\n  r[0] = head;\n  return r;\n}\nexports.cons = cons;\n// TODO: curry and make data-last in v3\n/**\n * Append an element to the end of an array, creating a new non empty array\n *\n * @example\n * import { snoc } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(snoc([1, 2, 3], 4), [1, 2, 3, 4])\n *\n * @category constructors\n * @since 2.5.0\n */\nfunction snoc(init, end) {\n  var len = init.length;\n  var r = Array(len + 1);\n  for (var i = 0; i < len; i++) {\n    r[i] = init[i];\n  }\n  r[len] = end;\n  return r;\n}\nexports.snoc = snoc;\n/**\n * Get the first element in an array, or `None` if the array is empty\n *\n * @example\n * import { head } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(head([1, 2, 3]), some(1))\n * assert.deepStrictEqual(head([]), none)\n *\n * @since 2.5.0\n */\nfunction head(as) {\n  return isEmpty(as) ? O.none : O.some(as[0]);\n}\nexports.head = head;\n/**\n * Get the last element in an array, or `None` if the array is empty\n *\n * @example\n * import { last } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(last([1, 2, 3]), some(3))\n * assert.deepStrictEqual(last([]), none)\n *\n * @since 2.5.0\n */\nfunction last(as) {\n  return lookup(as.length - 1, as);\n}\nexports.last = last;\n/**\n * Get all but the first element of an array, creating a new array, or `None` if the array is empty\n *\n * @example\n * import { tail } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(tail([1, 2, 3]), some([2, 3]))\n * assert.deepStrictEqual(tail([]), none)\n *\n * @since 2.5.0\n */\nfunction tail(as) {\n  return isEmpty(as) ? O.none : O.some(as.slice(1));\n}\nexports.tail = tail;\n/**\n * Get all but the last element of an array, creating a new array, or `None` if the array is empty\n *\n * @example\n * import { init } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(init([1, 2, 3]), some([1, 2]))\n * assert.deepStrictEqual(init([]), none)\n *\n * @since 2.5.0\n */\nfunction init(as) {\n  var len = as.length;\n  return len === 0 ? O.none : O.some(as.slice(0, len - 1));\n}\nexports.init = init;\n/**\n * Keep only a number of elements from the start of an array, creating a new array.\n * `n` must be a natural number\n *\n * @example\n * import { takeLeft } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(takeLeft(2)([1, 2, 3]), [1, 2])\n *\n * @category combinators\n * @since 2.5.0\n */\nfunction takeLeft(n) {\n  return function (as) {\n    return as.slice(0, n);\n  };\n}\nexports.takeLeft = takeLeft;\n/**\n * Keep only a number of elements from the end of an array, creating a new array.\n * `n` must be a natural number\n *\n * @example\n * import { takeRight } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(takeRight(2)([1, 2, 3, 4, 5]), [4, 5])\n *\n * @since 2.5.0\n */\nfunction takeRight(n) {\n  return function (as) {\n    return n === 0 ? exports.empty : as.slice(-n);\n  };\n}\nexports.takeRight = takeRight;\nfunction takeLeftWhile(predicate) {\n  return function (as) {\n    var i = spanIndexUncurry(as, predicate);\n    var init = Array(i);\n    for (var j = 0; j < i; j++) {\n      init[j] = as[j];\n    }\n    return init;\n  };\n}\nexports.takeLeftWhile = takeLeftWhile;\nvar spanIndexUncurry = function (as, predicate) {\n  var l = as.length;\n  var i = 0;\n  for (; i < l; i++) {\n    if (!predicate(as[i])) {\n      break;\n    }\n  }\n  return i;\n};\nfunction spanLeft(predicate) {\n  return function (as) {\n    var i = spanIndexUncurry(as, predicate);\n    var init = Array(i);\n    for (var j = 0; j < i; j++) {\n      init[j] = as[j];\n    }\n    var l = as.length;\n    var rest = Array(l - i);\n    for (var j = i; j < l; j++) {\n      rest[j - i] = as[j];\n    }\n    return {\n      init: init,\n      rest: rest\n    };\n  };\n}\nexports.spanLeft = spanLeft;\n/**\n * Drop a number of elements from the start of an array, creating a new array\n *\n * @example\n * import { dropLeft } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(dropLeft(2)([1, 2, 3]), [3])\n *\n * @category combinators\n * @since 2.5.0\n */\nfunction dropLeft(n) {\n  return function (as) {\n    return as.slice(n, as.length);\n  };\n}\nexports.dropLeft = dropLeft;\n/**\n * Drop a number of elements from the end of an array, creating a new array\n *\n * @example\n * import { dropRight } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(dropRight(2)([1, 2, 3, 4, 5]), [1, 2, 3])\n *\n * @category combinators\n * @since 2.5.0\n */\nfunction dropRight(n) {\n  return function (as) {\n    return as.slice(0, as.length - n);\n  };\n}\nexports.dropRight = dropRight;\n/**\n * Remove the longest initial subarray for which all element satisfy the specified predicate, creating a new array\n *\n * @example\n * import { dropLeftWhile } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(dropLeftWhile((n: number) => n % 2 === 1)([1, 3, 2, 4, 5]), [2, 4, 5])\n *\n * @category combinators\n * @since 2.5.0\n */\nfunction dropLeftWhile(predicate) {\n  return function (as) {\n    var i = spanIndexUncurry(as, predicate);\n    var l = as.length;\n    var rest = Array(l - i);\n    for (var j = i; j < l; j++) {\n      rest[j - i] = as[j];\n    }\n    return rest;\n  };\n}\nexports.dropLeftWhile = dropLeftWhile;\n/**\n * Find the first index for which a predicate holds\n *\n * @example\n * import { findIndex } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(findIndex((n: number) => n === 2)([1, 2, 3]), some(1))\n * assert.deepStrictEqual(findIndex((n: number) => n === 2)([]), none)\n *\n * @since 2.5.0\n */\nfunction findIndex(predicate) {\n  return function (as) {\n    var len = as.length;\n    for (var i = 0; i < len; i++) {\n      if (predicate(as[i])) {\n        return O.some(i);\n      }\n    }\n    return O.none;\n  };\n}\nexports.findIndex = findIndex;\nfunction findFirst(predicate) {\n  return function (as) {\n    var len = as.length;\n    for (var i = 0; i < len; i++) {\n      if (predicate(as[i])) {\n        return O.some(as[i]);\n      }\n    }\n    return O.none;\n  };\n}\nexports.findFirst = findFirst;\n/**\n * Find the first element returned by an option based selector function\n *\n * @example\n * import { findFirstMap } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface Person {\n *   name: string\n *   age?: number\n * }\n *\n * const persons: ReadonlyArray<Person> = [{ name: 'John' }, { name: 'Mary', age: 45 }, { name: 'Joey', age: 28 }]\n *\n * // returns the name of the first person that has an age\n * assert.deepStrictEqual(findFirstMap((p: Person) => (p.age === undefined ? none : some(p.name)))(persons), some('Mary'))\n *\n * @since 2.5.0\n */\nfunction findFirstMap(f) {\n  return function (as) {\n    var len = as.length;\n    for (var i = 0; i < len; i++) {\n      var v = f(as[i]);\n      if (O.isSome(v)) {\n        return v;\n      }\n    }\n    return O.none;\n  };\n}\nexports.findFirstMap = findFirstMap;\nfunction findLast(predicate) {\n  return function (as) {\n    var len = as.length;\n    for (var i = len - 1; i >= 0; i--) {\n      if (predicate(as[i])) {\n        return O.some(as[i]);\n      }\n    }\n    return O.none;\n  };\n}\nexports.findLast = findLast;\n/**\n * Find the last element returned by an option based selector function\n *\n * @example\n * import { findLastMap } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface Person {\n *   name: string\n *   age?: number\n * }\n *\n * const persons: ReadonlyArray<Person> = [{ name: 'John' }, { name: 'Mary', age: 45 }, { name: 'Joey', age: 28 }]\n *\n * // returns the name of the last person that has an age\n * assert.deepStrictEqual(findLastMap((p: Person) => (p.age === undefined ? none : some(p.name)))(persons), some('Joey'))\n *\n * @since 2.5.0\n */\nfunction findLastMap(f) {\n  return function (as) {\n    var len = as.length;\n    for (var i = len - 1; i >= 0; i--) {\n      var v = f(as[i]);\n      if (O.isSome(v)) {\n        return v;\n      }\n    }\n    return O.none;\n  };\n}\nexports.findLastMap = findLastMap;\n/**\n * Returns the index of the last element of the list which matches the predicate\n *\n * @example\n * import { findLastIndex } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface X {\n *   a: number\n *   b: number\n * }\n * const xs: ReadonlyArray<X> = [{ a: 1, b: 0 }, { a: 1, b: 1 }]\n * assert.deepStrictEqual(findLastIndex((x: { a: number }) => x.a === 1)(xs), some(1))\n * assert.deepStrictEqual(findLastIndex((x: { a: number }) => x.a === 4)(xs), none)\n *\n *\n * @since 2.5.0\n */\nfunction findLastIndex(predicate) {\n  return function (as) {\n    var len = as.length;\n    for (var i = len - 1; i >= 0; i--) {\n      if (predicate(as[i])) {\n        return O.some(i);\n      }\n    }\n    return O.none;\n  };\n}\nexports.findLastIndex = findLastIndex;\n/**\n * Insert an element at the specified index, creating a new array, or returning `None` if the index is out of bounds\n *\n * @example\n * import { insertAt } from 'fp-ts/ReadonlyArray'\n * import { some } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(insertAt(2, 5)([1, 2, 3, 4]), some([1, 2, 5, 3, 4]))\n *\n * @since 2.5.0\n */\nfunction insertAt(i, a) {\n  return function (as) {\n    return i < 0 || i > as.length ? O.none : O.some(unsafeInsertAt(i, a, as));\n  };\n}\nexports.insertAt = insertAt;\n/**\n * Change the element at the specified index, creating a new array, or returning `None` if the index is out of bounds\n *\n * @example\n * import { updateAt } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(updateAt(1, 1)([1, 2, 3]), some([1, 1, 3]))\n * assert.deepStrictEqual(updateAt(1, 1)([]), none)\n *\n * @since 2.5.0\n */\nfunction updateAt(i, a) {\n  return function (as) {\n    return isOutOfBound(i, as) ? O.none : O.some(unsafeUpdateAt(i, a, as));\n  };\n}\nexports.updateAt = updateAt;\n/**\n * Delete the element at the specified index, creating a new array, or returning `None` if the index is out of bounds\n *\n * @example\n * import { deleteAt } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(deleteAt(0)([1, 2, 3]), some([2, 3]))\n * assert.deepStrictEqual(deleteAt(1)([]), none)\n *\n * @since 2.5.0\n */\nfunction deleteAt(i) {\n  return function (as) {\n    return isOutOfBound(i, as) ? O.none : O.some(unsafeDeleteAt(i, as));\n  };\n}\nexports.deleteAt = deleteAt;\n/**\n * Apply a function to the element at the specified index, creating a new array, or returning `None` if the index is out\n * of bounds\n *\n * @example\n * import { modifyAt } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * const double = (x: number): number => x * 2\n * assert.deepStrictEqual(modifyAt(1, double)([1, 2, 3]), some([1, 4, 3]))\n * assert.deepStrictEqual(modifyAt(1, double)([]), none)\n *\n * @since 2.5.0\n */\nfunction modifyAt(i, f) {\n  return function (as) {\n    return isOutOfBound(i, as) ? O.none : O.some(unsafeUpdateAt(i, f(as[i]), as));\n  };\n}\nexports.modifyAt = modifyAt;\n/**\n * Reverse an array, creating a new array\n *\n * @example\n * import { reverse } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(reverse([1, 2, 3]), [3, 2, 1])\n *\n * @category combinators\n * @since 2.5.0\n */\nfunction reverse(as) {\n  if (isEmpty(as)) {\n    return as;\n  }\n  return as.slice().reverse();\n}\nexports.reverse = reverse;\n/**\n * Extracts from an array of `Either` all the `Right` elements. All the `Right` elements are extracted in order\n *\n * @example\n * import { rights } from 'fp-ts/ReadonlyArray'\n * import { right, left } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(rights([right(1), left('foo'), right(2)]), [1, 2])\n *\n * @category combinators\n * @since 2.5.0\n */\nfunction rights(as) {\n  // tslint:disable-next-line: readonly-array\n  var r = [];\n  var len = as.length;\n  for (var i = 0; i < len; i++) {\n    var a = as[i];\n    if (a._tag === 'Right') {\n      r.push(a.right);\n    }\n  }\n  return r;\n}\nexports.rights = rights;\n/**\n * Extracts from an array of `Either` all the `Left` elements. All the `Left` elements are extracted in order\n *\n * @example\n * import { lefts } from 'fp-ts/ReadonlyArray'\n * import { left, right } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(lefts([right(1), left('foo'), right(2)]), ['foo'])\n *\n * @since 2.5.0\n */\nfunction lefts(as) {\n  // tslint:disable-next-line: readonly-array\n  var r = [];\n  var len = as.length;\n  for (var i = 0; i < len; i++) {\n    var a = as[i];\n    if (a._tag === 'Left') {\n      r.push(a.left);\n    }\n  }\n  return r;\n}\nexports.lefts = lefts;\n/**\n * Sort the elements of an array in increasing order, creating a new array\n *\n * @example\n * import { sort } from 'fp-ts/ReadonlyArray'\n * import { ordNumber } from 'fp-ts/Ord'\n *\n * assert.deepStrictEqual(sort(ordNumber)([3, 2, 1]), [1, 2, 3])\n *\n * @category combinators\n * @since 2.5.0\n */\nvar sort = function (O) {\n  return function (as) {\n    return as.length <= 1 ? as : as.slice().sort(O.compare);\n  };\n};\nexports.sort = sort;\n// TODO: curry and make data-last in v3\n/**\n * Apply a function to pairs of elements at the same index in two arrays, collecting the results in a new array. If one\n * input array is short, excess elements of the longer array are discarded.\n *\n * @example\n * import { zipWith } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(zipWith([1, 2, 3], ['a', 'b', 'c', 'd'], (n, s) => s + n), ['a1', 'b2', 'c3'])\n *\n * @category combinators\n * @since 2.5.0\n */\nfunction zipWith(fa, fb, f) {\n  // tslint:disable-next-line: readonly-array\n  var fc = [];\n  var len = Math.min(fa.length, fb.length);\n  for (var i = 0; i < len; i++) {\n    fc[i] = f(fa[i], fb[i]);\n  }\n  return fc;\n}\nexports.zipWith = zipWith;\nfunction zip(as, bs) {\n  if (bs === undefined) {\n    return function (bs) {\n      return zip(bs, as);\n    };\n  }\n  return zipWith(as, bs, function (a, b) {\n    return [a, b];\n  });\n}\nexports.zip = zip;\n/**\n * The function is reverse of `zip`. Takes an array of pairs and return two corresponding arrays\n *\n * @example\n * import { unzip } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(unzip([[1, 'a'], [2, 'b'], [3, 'c']]), [[1, 2, 3], ['a', 'b', 'c']])\n *\n * @since 2.5.0\n */\nfunction unzip(as) {\n  // tslint:disable-next-line: readonly-array\n  var fa = [];\n  // tslint:disable-next-line: readonly-array\n  var fb = [];\n  for (var i = 0; i < as.length; i++) {\n    fa[i] = as[i][0];\n    fb[i] = as[i][1];\n  }\n  return [fa, fb];\n}\nexports.unzip = unzip;\n/**\n * Prepend an element to every member of an array\n *\n * @example\n * import { prependToAll } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(prependToAll(9)([1, 2, 3, 4]), [9, 1, 9, 2, 9, 3, 9, 4])\n *\n * @category combinators\n * @since 2.9.0\n */\nvar prependToAll = function (e) {\n  return function (xs) {\n    // tslint:disable-next-line: readonly-array\n    var ys = [];\n    for (var _i = 0, xs_1 = xs; _i < xs_1.length; _i++) {\n      var x = xs_1[_i];\n      ys.push(e, x);\n    }\n    return ys;\n  };\n};\nexports.prependToAll = prependToAll;\n/**\n * Places an element in between members of an array\n *\n * @example\n * import { intersperse } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(intersperse(9)([1, 2, 3, 4]), [1, 9, 2, 9, 3, 9, 4])\n *\n * @category combinators\n * @since 2.9.0\n */\nfunction intersperse(e) {\n  return function (as) {\n    var length = as.length;\n    if (length === 0) {\n      return as;\n    }\n    return cons(as[0], exports.prependToAll(e)(as.slice(1, as.length)));\n  };\n}\nexports.intersperse = intersperse;\n/**\n * Rotate an array to the right by `n` steps\n *\n * @example\n * import { rotate } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(rotate(2)([1, 2, 3, 4, 5]), [4, 5, 1, 2, 3])\n *\n * @category combinators\n * @since 2.5.0\n */\nfunction rotate(n) {\n  return function (as) {\n    var len = as.length;\n    if (n === 0 || len <= 1 || len === Math.abs(n)) {\n      return as;\n    } else if (n < 0) {\n      return rotate(len + n)(as);\n    } else {\n      return as.slice(-n).concat(as.slice(0, len - n));\n    }\n  };\n}\nexports.rotate = rotate;\nfunction elem(E) {\n  return function (a, as) {\n    if (as === undefined) {\n      var elemE_1 = elem(E);\n      return function (as) {\n        return elemE_1(a, as);\n      };\n    }\n    var predicate = function (element) {\n      return E.equals(element, a);\n    };\n    var i = 0;\n    var len = as.length;\n    for (; i < len; i++) {\n      if (predicate(as[i])) {\n        return true;\n      }\n    }\n    return false;\n  };\n}\nexports.elem = elem;\n/**\n * Remove duplicates from an array, keeping the first occurrence of an element.\n *\n * @example\n * import { uniq } from 'fp-ts/ReadonlyArray'\n * import { eqNumber } from 'fp-ts/Eq'\n *\n * assert.deepStrictEqual(uniq(eqNumber)([1, 2, 1]), [1, 2])\n *\n * @category combinators\n * @since 2.5.0\n */\nfunction uniq(E) {\n  var elemS = elem(E);\n  return function (as) {\n    var len = as.length;\n    if (len <= 1) {\n      return as;\n    }\n    // tslint:disable-next-line: readonly-array\n    var r = [];\n    var i = 0;\n    for (; i < len; i++) {\n      var a = as[i];\n      if (!elemS(a, r)) {\n        r.push(a);\n      }\n    }\n    return len === r.length ? as : r;\n  };\n}\nexports.uniq = uniq;\n/**\n * Sort the elements of an array in increasing order, where elements are compared using first `ords[0]`, then `ords[1]`,\n * etc...\n *\n * @example\n * import { sortBy } from 'fp-ts/ReadonlyArray'\n * import { ord, ordString, ordNumber } from 'fp-ts/Ord'\n *\n * interface Person {\n *   name: string\n *   age: number\n * }\n * const byName = ord.contramap(ordString, (p: Person) => p.name)\n * const byAge = ord.contramap(ordNumber, (p: Person) => p.age)\n *\n * const sortByNameByAge = sortBy([byName, byAge])\n *\n * const persons = [{ name: 'a', age: 1 }, { name: 'b', age: 3 }, { name: 'c', age: 2 }, { name: 'b', age: 2 }]\n * assert.deepStrictEqual(sortByNameByAge(persons), [\n *   { name: 'a', age: 1 },\n *   { name: 'b', age: 2 },\n *   { name: 'b', age: 3 },\n *   { name: 'c', age: 2 }\n * ])\n *\n * @category combinators\n * @since 2.5.0\n */\nfunction sortBy(ords) {\n  var M = Ord_1.getMonoid();\n  return exports.sort(ords.reduce(M.concat, M.empty));\n}\nexports.sortBy = sortBy;\n/**\n * A useful recursion pattern for processing an array to produce a new array, often used for \"chopping\" up the input\n * array. Typically chop is called with some function that will consume an initial prefix of the array and produce a\n * value and the rest of the array.\n *\n * @example\n * import { Eq, eqNumber } from 'fp-ts/Eq'\n * import { chop, spanLeft } from 'fp-ts/ReadonlyArray'\n *\n * const group = <A>(S: Eq<A>): ((as: ReadonlyArray<A>) => ReadonlyArray<ReadonlyArray<A>>) => {\n *   return chop(as => {\n *     const { init, rest } = spanLeft((a: A) => S.equals(a, as[0]))(as)\n *     return [init, rest]\n *   })\n * }\n * assert.deepStrictEqual(group(eqNumber)([1, 1, 2, 3, 3, 4]), [[1, 1], [2], [3, 3], [4]])\n *\n * @category combinators\n * @since 2.5.0\n */\nvar chop = function (f) {\n  return function (as) {\n    // tslint:disable-next-line: readonly-array\n    var result = [];\n    var cs = as;\n    while (isNonEmpty(cs)) {\n      var _a = f(cs),\n        b = _a[0],\n        c = _a[1];\n      result.push(b);\n      cs = c;\n    }\n    return result;\n  };\n};\nexports.chop = chop;\n/**\n * Splits an array into two pieces, the first piece has `n` elements.\n *\n * @example\n * import { splitAt } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(splitAt(2)([1, 2, 3, 4, 5]), [[1, 2], [3, 4, 5]])\n *\n * @since 2.5.0\n */\nfunction splitAt(n) {\n  return function (as) {\n    return [as.slice(0, n), as.slice(n)];\n  };\n}\nexports.splitAt = splitAt;\n/**\n * Splits an array into length-`n` pieces. The last piece will be shorter if `n` does not evenly divide the length of\n * the array. Note that `chunksOf(n)([])` is `[]`, not `[[]]`. This is intentional, and is consistent with a recursive\n * definition of `chunksOf`; it satisfies the property that\n *\n * ```ts\n * chunksOf(n)(xs).concat(chunksOf(n)(ys)) == chunksOf(n)(xs.concat(ys)))\n * ```\n *\n * whenever `n` evenly divides the length of `xs`.\n *\n * @example\n * import { chunksOf } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(chunksOf(2)([1, 2, 3, 4, 5]), [[1, 2], [3, 4], [5]])\n *\n *\n * @since 2.5.0\n */\nfunction chunksOf(n) {\n  var f = exports.chop(splitAt(n));\n  return function (as) {\n    return as.length === 0 ? exports.empty : isOutOfBound(n - 1, as) ? [as] : f(as);\n  };\n}\nexports.chunksOf = chunksOf;\nfunction comprehension(input, f, g) {\n  if (g === void 0) {\n    g = function () {\n      return true;\n    };\n  }\n  var go = function (scope, input) {\n    if (input.length === 0) {\n      return g.apply(void 0, scope) ? [f.apply(void 0, scope)] : exports.empty;\n    } else {\n      return chain_(input[0], function (x) {\n        return go(snoc(scope, x), input.slice(1));\n      });\n    }\n  };\n  return go(exports.empty, input);\n}\nexports.comprehension = comprehension;\nfunction union(E) {\n  var elemE = elem(E);\n  return function (xs, ys) {\n    if (ys === undefined) {\n      var unionE_1 = union(E);\n      return function (ys) {\n        return unionE_1(ys, xs);\n      };\n    }\n    return concat(xs, ys.filter(function (a) {\n      return !elemE(a, xs);\n    }));\n  };\n}\nexports.union = union;\nfunction intersection(E) {\n  var elemE = elem(E);\n  return function (xs, ys) {\n    if (ys === undefined) {\n      var intersectionE_1 = intersection(E);\n      return function (ys) {\n        return intersectionE_1(ys, xs);\n      };\n    }\n    return xs.filter(function (a) {\n      return elemE(a, ys);\n    });\n  };\n}\nexports.intersection = intersection;\nfunction difference(E) {\n  var elemE = elem(E);\n  return function (xs, ys) {\n    if (ys === undefined) {\n      var differenceE_1 = difference(E);\n      return function (ys) {\n        return differenceE_1(ys, xs);\n      };\n    }\n    return xs.filter(function (a) {\n      return !elemE(a, ys);\n    });\n  };\n}\nexports.difference = difference;\n/**\n * Wrap a value into the type constructor.\n *\n * @category Applicative\n * @since 2.5.0\n */\nvar of = function (a) {\n  return [a];\n};\nexports.of = of;\n/**\n * @category Alternative\n * @since 2.7.0\n */\nvar zero = function () {\n  return exports.empty;\n};\nexports.zero = zero;\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\nvar map_ = function (fa, f) {\n  return function_1.pipe(fa, exports.map(f));\n};\nvar mapWithIndex_ = function (fa, f) {\n  return function_1.pipe(fa, exports.mapWithIndex(f));\n};\nvar ap_ = function (fab, fa) {\n  return function_1.pipe(fab, exports.ap(fa));\n};\nvar chain_ = function (ma, f) {\n  return function_1.pipe(ma, exports.chain(f));\n};\nvar filter_ = function (fa, predicate) {\n  return function_1.pipe(fa, exports.filter(predicate));\n};\nvar filterMap_ = function (fa, f) {\n  return function_1.pipe(fa, exports.filterMap(f));\n};\nvar partitionWithIndex_ = function (fa, predicateWithIndex) {\n  return function_1.pipe(fa, exports.partitionWithIndex(predicateWithIndex));\n};\nvar partition_ = function (fa, predicate) {\n  return function_1.pipe(fa, exports.partition(predicate));\n};\nvar partitionMap_ = function (fa, f) {\n  return function_1.pipe(fa, exports.partitionMap(f));\n};\nvar partitionMapWithIndex_ = function (fa, f) {\n  return function_1.pipe(fa, exports.partitionMapWithIndex(f));\n};\nvar alt_ = function (fa, that) {\n  return function_1.pipe(fa, exports.alt(that));\n};\nvar reduce_ = function (fa, b, f) {\n  return function_1.pipe(fa, exports.reduce(b, f));\n};\nvar foldMap_ = function (M) {\n  var foldMapM = exports.foldMap(M);\n  return function (fa, f) {\n    return function_1.pipe(fa, foldMapM(f));\n  };\n};\nvar reduceRight_ = function (fa, b, f) {\n  return function_1.pipe(fa, exports.reduceRight(b, f));\n};\nvar reduceWithIndex_ = function (fa, b, f) {\n  var l = fa.length;\n  var r = b;\n  for (var i = 0; i < l; i++) {\n    r = f(i, r, fa[i]);\n  }\n  return r;\n};\nvar foldMapWithIndex_ = function (M) {\n  return function (fa, f) {\n    return fa.reduce(function (b, a, i) {\n      return M.concat(b, f(i, a));\n    }, M.empty);\n  };\n};\nvar reduceRightWithIndex_ = function (fa, b, f) {\n  return function_1.pipe(fa, exports.reduceRightWithIndex(b, f));\n};\nvar filterMapWithIndex_ = function (fa, f) {\n  return function_1.pipe(fa, exports.filterMapWithIndex(f));\n};\nvar filterWithIndex_ = function (fa, predicateWithIndex) {\n  return function_1.pipe(fa, exports.filterWithIndex(predicateWithIndex));\n};\nvar extend_ = function (fa, f) {\n  return function_1.pipe(fa, exports.extend(f));\n};\nvar traverse_ = function (F) {\n  var traverseF = exports.traverse(F);\n  return function (ta, f) {\n    return function_1.pipe(ta, traverseF(f));\n  };\n};\n/* istanbul ignore next */\nvar traverseWithIndex_ = function (F) {\n  var traverseWithIndexF = exports.traverseWithIndex(F);\n  return function (ta, f) {\n    return function_1.pipe(ta, traverseWithIndexF(f));\n  };\n};\n/* istanbul ignore next */\nvar wither_ = function (F) {\n  var witherF = exports.wither(F);\n  return function (fa, f) {\n    return function_1.pipe(fa, witherF(f));\n  };\n};\n/* istanbul ignore next */\nvar wilt_ = function (F) {\n  var wiltF = exports.wilt(F);\n  return function (fa, f) {\n    return function_1.pipe(fa, wiltF(f));\n  };\n};\n// -------------------------------------------------------------------------------------\n// pipeables\n// -------------------------------------------------------------------------------------\n/**\n * Less strict version of [`alt`](#alt).\n *\n * @category Alt\n * @since 2.9.0\n */\nvar altW = function (that) {\n  return function (fa) {\n    return concat(fa, that());\n  };\n};\nexports.altW = altW;\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * @category Alt\n * @since 2.5.0\n */\nexports.alt = exports.altW;\n/**\n * Apply a function to an argument under a type constructor.\n *\n * @category Apply\n * @since 2.5.0\n */\nvar ap = function (fa) {\n  return exports.chain(function (f) {\n    return function_1.pipe(fa, exports.map(f));\n  });\n};\nexports.ap = ap;\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.5.0\n */\nvar apFirst = function (fb) {\n  return function_1.flow(exports.map(function (a) {\n    return function () {\n      return a;\n    };\n  }), exports.ap(fb));\n};\nexports.apFirst = apFirst;\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.5.0\n */\nvar apSecond = function (fb) {\n  return function_1.flow(exports.map(function () {\n    return function (b) {\n      return b;\n    };\n  }), exports.ap(fb));\n};\nexports.apSecond = apSecond;\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @category Monad\n * @since 2.5.0\n */\nvar chain = function (f) {\n  return function (ma) {\n    return function_1.pipe(ma, exports.chainWithIndex(function (_, a) {\n      return f(a);\n    }));\n  };\n};\nexports.chain = chain;\n/**\n * @since 2.7.0\n */\nvar chainWithIndex = function (f) {\n  return function (ma) {\n    var outLen = 0;\n    var l = ma.length;\n    var temp = new Array(l);\n    for (var i = 0; i < l; i++) {\n      var e = ma[i];\n      var arr = f(i, e);\n      outLen += arr.length;\n      temp[i] = arr;\n    }\n    var out = Array(outLen);\n    var start = 0;\n    for (var i = 0; i < l; i++) {\n      var arr = temp[i];\n      var l_1 = arr.length;\n      for (var j = 0; j < l_1; j++) {\n        out[j + start] = arr[j];\n      }\n      start += l_1;\n    }\n    return out;\n  };\n};\nexports.chainWithIndex = chainWithIndex;\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * Derivable from `Monad`.\n *\n * @category combinators\n * @since 2.5.0\n */\nvar chainFirst = function (f) {\n  return exports.chain(function (a) {\n    return function_1.pipe(f(a), exports.map(function () {\n      return a;\n    }));\n  });\n};\nexports.chainFirst = chainFirst;\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category Functor\n * @since 2.5.0\n */\nvar map = function (f) {\n  return function (fa) {\n    return fa.map(function (a) {\n      return f(a);\n    });\n  };\n};\nexports.map = map;\n/**\n * @category FunctorWithIndex\n * @since 2.5.0\n */\nvar mapWithIndex = function (f) {\n  return function (fa) {\n    return fa.map(function (a, i) {\n      return f(i, a);\n    });\n  };\n};\nexports.mapWithIndex = mapWithIndex;\n/**\n * @category Compactable\n * @since 2.5.0\n */\nvar separate = function (fa) {\n  // tslint:disable-next-line: readonly-array\n  var left = [];\n  // tslint:disable-next-line: readonly-array\n  var right = [];\n  for (var _i = 0, fa_1 = fa; _i < fa_1.length; _i++) {\n    var e = fa_1[_i];\n    if (e._tag === 'Left') {\n      left.push(e.left);\n    } else {\n      right.push(e.right);\n    }\n  }\n  return {\n    left: left,\n    right: right\n  };\n};\nexports.separate = separate;\n/**\n * @category Filterable\n * @since 2.5.0\n */\nvar filter = function (predicate) {\n  return function (fa) {\n    return fa.filter(predicate);\n  };\n};\nexports.filter = filter;\n/**\n * @category FilterableWithIndex\n * @since 2.5.0\n */\nvar filterMapWithIndex = function (f) {\n  return function (fa) {\n    // tslint:disable-next-line: readonly-array\n    var result = [];\n    for (var i = 0; i < fa.length; i++) {\n      var optionB = f(i, fa[i]);\n      if (O.isSome(optionB)) {\n        result.push(optionB.value);\n      }\n    }\n    return result;\n  };\n};\nexports.filterMapWithIndex = filterMapWithIndex;\n/**\n * @category Filterable\n * @since 2.5.0\n */\nvar filterMap = function (f) {\n  return exports.filterMapWithIndex(function (_, a) {\n    return f(a);\n  });\n};\nexports.filterMap = filterMap;\n/**\n * @category Compactable\n * @since 2.5.0\n */\nexports.compact = /*#__PURE__*/\nexports.filterMap(function_1.identity);\n/**\n * @category Filterable\n * @since 2.5.0\n */\nvar partition = function (predicate) {\n  return exports.partitionWithIndex(function (_, a) {\n    return predicate(a);\n  });\n};\nexports.partition = partition;\n/**\n * @category FilterableWithIndex\n * @since 2.5.0\n */\nvar partitionWithIndex = function (predicateWithIndex) {\n  return function (fa) {\n    // tslint:disable-next-line: readonly-array\n    var left = [];\n    // tslint:disable-next-line: readonly-array\n    var right = [];\n    for (var i = 0; i < fa.length; i++) {\n      var a = fa[i];\n      if (predicateWithIndex(i, a)) {\n        right.push(a);\n      } else {\n        left.push(a);\n      }\n    }\n    return {\n      left: left,\n      right: right\n    };\n  };\n};\nexports.partitionWithIndex = partitionWithIndex;\n/**\n * @category Filterable\n * @since 2.5.0\n */\nvar partitionMap = function (f) {\n  return exports.partitionMapWithIndex(function (_, a) {\n    return f(a);\n  });\n};\nexports.partitionMap = partitionMap;\n/**\n * @category FilterableWithIndex\n * @since 2.5.0\n */\nvar partitionMapWithIndex = function (f) {\n  return function (fa) {\n    // tslint:disable-next-line: readonly-array\n    var left = [];\n    // tslint:disable-next-line: readonly-array\n    var right = [];\n    for (var i = 0; i < fa.length; i++) {\n      var e = f(i, fa[i]);\n      if (e._tag === 'Left') {\n        left.push(e.left);\n      } else {\n        right.push(e.right);\n      }\n    }\n    return {\n      left: left,\n      right: right\n    };\n  };\n};\nexports.partitionMapWithIndex = partitionMapWithIndex;\n/**\n * @category FilterableWithIndex\n * @since 2.5.0\n */\nvar filterWithIndex = function (predicateWithIndex) {\n  return function (fa) {\n    return fa.filter(function (a, i) {\n      return predicateWithIndex(i, a);\n    });\n  };\n};\nexports.filterWithIndex = filterWithIndex;\n/**\n * @category Extend\n * @since 2.5.0\n */\nvar extend = function (f) {\n  return function (wa) {\n    return wa.map(function (_, i, as) {\n      return f(as.slice(i));\n    });\n  };\n};\nexports.extend = extend;\n/**\n * Derivable from `Extend`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexports.duplicate = /*#__PURE__*/\nexports.extend(function_1.identity);\n/**\n * @category FoldableWithIndex\n * @since 2.5.0\n */\nvar foldMapWithIndex = function (M) {\n  var foldMapWithIndexM = foldMapWithIndex_(M);\n  return function (f) {\n    return function (fa) {\n      return foldMapWithIndexM(fa, f);\n    };\n  };\n};\nexports.foldMapWithIndex = foldMapWithIndex;\n/**\n * @category Foldable\n * @since 2.5.0\n */\nvar reduce = function (b, f) {\n  return exports.reduceWithIndex(b, function (_, b, a) {\n    return f(b, a);\n  });\n};\nexports.reduce = reduce;\n/**\n * @category Foldable\n * @since 2.5.0\n */\nvar foldMap = function (M) {\n  var foldMapWithIndexM = exports.foldMapWithIndex(M);\n  return function (f) {\n    return foldMapWithIndexM(function (_, a) {\n      return f(a);\n    });\n  };\n};\nexports.foldMap = foldMap;\n/**\n * @category FoldableWithIndex\n * @since 2.5.0\n */\nvar reduceWithIndex = function (b, f) {\n  return function (fa) {\n    return reduceWithIndex_(fa, b, f);\n  };\n};\nexports.reduceWithIndex = reduceWithIndex;\n/**\n * @category Foldable\n * @since 2.5.0\n */\nvar reduceRight = function (b, f) {\n  return exports.reduceRightWithIndex(b, function (_, a, b) {\n    return f(a, b);\n  });\n};\nexports.reduceRight = reduceRight;\n/**\n * @category FoldableWithIndex\n * @since 2.5.0\n */\nvar reduceRightWithIndex = function (b, f) {\n  return function (fa) {\n    return fa.reduceRight(function (b, a, i) {\n      return f(i, a, b);\n    }, b);\n  };\n};\nexports.reduceRightWithIndex = reduceRightWithIndex;\n/**\n * **for optimized and stack safe version check the data types `traverseArray` function**\n * @category Traversable\n * @since 2.6.3\n */\nvar traverse = function (F) {\n  var traverseWithIndexF = exports.traverseWithIndex(F);\n  return function (f) {\n    return traverseWithIndexF(function (_, a) {\n      return f(a);\n    });\n  };\n};\nexports.traverse = traverse;\n/**\n * **for optimized and stack safe version check the data types `sequenceArray` function**\n * @category Traversable\n * @since 2.6.3\n */\nvar sequence = function (F) {\n  return function (ta) {\n    return reduce_(ta, F.of(exports.zero()), function (fas, fa) {\n      return F.ap(F.map(fas, function (as) {\n        return function (a) {\n          return snoc(as, a);\n        };\n      }), fa);\n    });\n  };\n};\nexports.sequence = sequence;\n/**\n * **for optimized and stack safe version check the data types `traverseArrayWithIndex` function**\n * @category TraversableWithIndex\n * @since 2.6.3\n */\nvar traverseWithIndex = function (F) {\n  return function (f) {\n    return exports.reduceWithIndex(F.of(exports.zero()), function (i, fbs, a) {\n      return F.ap(F.map(fbs, function (bs) {\n        return function (b) {\n          return snoc(bs, b);\n        };\n      }), f(i, a));\n    });\n  };\n};\nexports.traverseWithIndex = traverseWithIndex;\n/**\n * @category Witherable\n * @since 2.6.5\n */\nvar wither = function (F) {\n  var traverseF = exports.traverse(F);\n  return function (f) {\n    return function (fa) {\n      return F.map(function_1.pipe(fa, traverseF(f)), exports.compact);\n    };\n  };\n};\nexports.wither = wither;\n/**\n * @category Witherable\n * @since 2.6.5\n */\nvar wilt = function (F) {\n  var traverseF = exports.traverse(F);\n  return function (f) {\n    return function (fa) {\n      return F.map(function_1.pipe(fa, traverseF(f)), exports.separate);\n    };\n  };\n};\nexports.wilt = wilt;\n/**\n * @category Unfoldable\n * @since 2.6.6\n */\nvar unfold = function (b, f) {\n  // tslint:disable-next-line: readonly-array\n  var ret = [];\n  var bb = b;\n  while (true) {\n    var mt = f(bb);\n    if (O.isSome(mt)) {\n      var _a = mt.value,\n        a = _a[0],\n        b_1 = _a[1];\n      ret.push(a);\n      bb = b_1;\n    } else {\n      break;\n    }\n  }\n  return ret;\n};\nexports.unfold = unfold;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.5.0\n */\nexports.URI = 'ReadonlyArray';\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Functor = {\n  URI: exports.URI,\n  map: map_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.FunctorWithIndex = {\n  URI: exports.URI,\n  map: map_,\n  mapWithIndex: mapWithIndex_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Applicative = {\n  URI: exports.URI,\n  map: map_,\n  ap: ap_,\n  of: exports.of\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Monad = {\n  URI: exports.URI,\n  map: map_,\n  ap: ap_,\n  of: exports.of,\n  chain: chain_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Unfoldable = {\n  URI: exports.URI,\n  unfold: exports.unfold\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Alt = {\n  URI: exports.URI,\n  map: map_,\n  alt: alt_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Alternative = {\n  URI: exports.URI,\n  map: map_,\n  ap: ap_,\n  of: exports.of,\n  alt: alt_,\n  zero: exports.zero\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Extend = {\n  URI: exports.URI,\n  map: map_,\n  extend: extend_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Compactable = {\n  URI: exports.URI,\n  compact: exports.compact,\n  separate: exports.separate\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Filterable = {\n  URI: exports.URI,\n  map: map_,\n  compact: exports.compact,\n  separate: exports.separate,\n  filter: filter_,\n  filterMap: filterMap_,\n  partition: partition_,\n  partitionMap: partitionMap_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.FilterableWithIndex = {\n  URI: exports.URI,\n  map: map_,\n  mapWithIndex: mapWithIndex_,\n  compact: exports.compact,\n  separate: exports.separate,\n  filter: filter_,\n  filterMap: filterMap_,\n  partition: partition_,\n  partitionMap: partitionMap_,\n  partitionMapWithIndex: partitionMapWithIndex_,\n  partitionWithIndex: partitionWithIndex_,\n  filterMapWithIndex: filterMapWithIndex_,\n  filterWithIndex: filterWithIndex_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Foldable = {\n  URI: exports.URI,\n  reduce: reduce_,\n  foldMap: foldMap_,\n  reduceRight: reduceRight_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.FoldableWithIndex = {\n  URI: exports.URI,\n  reduce: reduce_,\n  foldMap: foldMap_,\n  reduceRight: reduceRight_,\n  reduceWithIndex: reduceWithIndex_,\n  foldMapWithIndex: foldMapWithIndex_,\n  reduceRightWithIndex: reduceRightWithIndex_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Traversable = {\n  URI: exports.URI,\n  map: map_,\n  reduce: reduce_,\n  foldMap: foldMap_,\n  reduceRight: reduceRight_,\n  traverse: traverse_,\n  sequence: exports.sequence\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.TraversableWithIndex = {\n  URI: exports.URI,\n  map: map_,\n  mapWithIndex: mapWithIndex_,\n  reduce: reduce_,\n  foldMap: foldMap_,\n  reduceRight: reduceRight_,\n  reduceWithIndex: reduceWithIndex_,\n  foldMapWithIndex: foldMapWithIndex_,\n  reduceRightWithIndex: reduceRightWithIndex_,\n  traverse: traverse_,\n  sequence: exports.sequence,\n  traverseWithIndex: traverseWithIndex_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Witherable = {\n  URI: exports.URI,\n  map: map_,\n  compact: exports.compact,\n  separate: exports.separate,\n  filter: filter_,\n  filterMap: filterMap_,\n  partition: partition_,\n  partitionMap: partitionMap_,\n  reduce: reduce_,\n  foldMap: foldMap_,\n  reduceRight: reduceRight_,\n  traverse: traverse_,\n  sequence: exports.sequence,\n  wither: wither_,\n  wilt: wilt_\n};\n// TODO: remove in v3\n/**\n * @category instances\n * @since 2.5.0\n */\nexports.readonlyArray = {\n  URI: exports.URI,\n  compact: exports.compact,\n  separate: exports.separate,\n  map: map_,\n  ap: ap_,\n  of: exports.of,\n  chain: chain_,\n  filter: filter_,\n  filterMap: filterMap_,\n  partition: partition_,\n  partitionMap: partitionMap_,\n  mapWithIndex: mapWithIndex_,\n  partitionMapWithIndex: partitionMapWithIndex_,\n  partitionWithIndex: partitionWithIndex_,\n  filterMapWithIndex: filterMapWithIndex_,\n  filterWithIndex: filterWithIndex_,\n  alt: alt_,\n  zero: exports.zero,\n  unfold: exports.unfold,\n  reduce: reduce_,\n  foldMap: foldMap_,\n  reduceRight: reduceRight_,\n  traverse: traverse_,\n  sequence: exports.sequence,\n  reduceWithIndex: reduceWithIndex_,\n  foldMapWithIndex: foldMapWithIndex_,\n  reduceRightWithIndex: reduceRightWithIndex_,\n  traverseWithIndex: traverseWithIndex_,\n  extend: extend_,\n  wither: wither_,\n  wilt: wilt_\n};\n// -------------------------------------------------------------------------------------\n// unsafe\n// -------------------------------------------------------------------------------------\n/**\n * @category unsafe\n * @since 2.5.0\n */\nfunction unsafeInsertAt(i, a, as) {\n  var xs = as.slice();\n  xs.splice(i, 0, a);\n  return xs;\n}\nexports.unsafeInsertAt = unsafeInsertAt;\n/**\n * @category unsafe\n * @since 2.5.0\n */\nfunction unsafeUpdateAt(i, a, as) {\n  if (as[i] === a) {\n    return as;\n  } else {\n    var xs = as.slice();\n    xs[i] = a;\n    return xs;\n  }\n}\nexports.unsafeUpdateAt = unsafeUpdateAt;\n/**\n * @category unsafe\n * @since 2.5.0\n */\nfunction unsafeDeleteAt(i, as) {\n  var xs = as.slice();\n  xs.splice(i, 1);\n  return xs;\n}\nexports.unsafeDeleteAt = unsafeDeleteAt;\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * An empty array\n *\n * @since 2.5.0\n */\nexports.empty = [];\n/**\n * Check if a predicate holds true for every array member.\n *\n * @example\n * import { every } from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const isPositive = (n: number): boolean => n > 0\n *\n * assert.deepStrictEqual(pipe([1, 2, 3], every(isPositive)), true)\n * assert.deepStrictEqual(pipe([1, 2, -3], every(isPositive)), false)\n *\n * @since 2.9.0\n */\nvar every = function (predicate) {\n  return function (as) {\n    return as.every(predicate);\n  };\n};\nexports.every = every;\n/**\n * Check if a predicate holds true for any array member.\n *\n * @example\n * import { some } from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const isPositive = (n: number): boolean => n > 0\n *\n * assert.deepStrictEqual(pipe([-1, -2, 3], some(isPositive)), true)\n * assert.deepStrictEqual(pipe([-1, -2, -3], some(isPositive)), false)\n *\n * @since 2.9.0\n */\nvar some = function (predicate) {\n  return function (as) {\n    return as.some(predicate);\n  };\n};\nexports.some = some;\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.9.0\n */\nexports.Do = /*#__PURE__*/\nexports.of({});\n/**\n * @since 2.8.0\n */\nvar bindTo = function (name) {\n  return exports.map(function_1.bindTo_(name));\n};\nexports.bindTo = bindTo;\n/**\n * @since 2.8.0\n */\nvar bind = function (name, f) {\n  return exports.chain(function (a) {\n    return function_1.pipe(f(a), exports.map(function (b) {\n      return function_1.bind_(a, name, b);\n    }));\n  });\n};\nexports.bind = bind;\n// -------------------------------------------------------------------------------------\n// pipeable sequence S\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.8.0\n */\nvar apS = function (name, fb) {\n  return function_1.flow(exports.map(function (a) {\n    return function (b) {\n      return function_1.bind_(a, name, b);\n    };\n  }), exports.ap(fb));\n};\nexports.apS = apS;","map":{"version":3,"names":["__createBinding","Object","create","o","m","k","k2","undefined","defineProperty","enumerable","get","__setModuleDefault","v","value","__importStar","mod","__esModule","result","prototype","hasOwnProperty","call","exports","intersperse","prependToAll","unzip","zip","zipWith","sort","lefts","rights","reverse","modifyAt","deleteAt","updateAt","insertAt","findLastIndex","findLastMap","findLast","findFirstMap","findFirst","findIndex","dropLeftWhile","dropRight","dropLeft","spanLeft","takeLeftWhile","takeRight","takeLeft","init","tail","last","head","snoc","cons","lookup","isOutOfBound","isNonEmpty","isEmpty","scanRight","scanLeft","foldRight","foldLeft","flatten","replicate","range","makeBy","getOrd","getEq","getMonoid","getShow","toArray","fromArray","FunctorWithIndex","Functor","URI","unfold","wilt","wither","traverseWithIndex","sequence","traverse","reduceRightWithIndex","reduceRight","reduceWithIndex","foldMap","reduce","foldMapWithIndex","duplicate","extend","filterWithIndex","partitionMapWithIndex","partitionMap","partitionWithIndex","partition","compact","filterMap","filterMapWithIndex","filter","separate","mapWithIndex","map","chainFirst","chainWithIndex","chain","apSecond","apFirst","ap","alt","altW","zero","of","difference","intersection","union","comprehension","chunksOf","splitAt","chop","sortBy","uniq","elem","rotate","apS","bind","bindTo","Do","some","every","empty","unsafeDeleteAt","unsafeUpdateAt","unsafeInsertAt","readonlyArray","Witherable","TraversableWithIndex","Traversable","FoldableWithIndex","Foldable","FilterableWithIndex","Filterable","Compactable","Extend","Alternative","Alt","Unfoldable","Monad","Applicative","function_1","require","O","Ord_1","as","l","length","ras","Array","i","S","show","join","concat","x","y","lenx","leny","r","E","equals","xs","ys","fromCompare","a","b","aLen","bLen","len","Math","min","ordering","compare","ordNumber","n","f","push","start","end","mma","rLen","arr","j","onEmpty","onCons","slice","none","predicate","spanIndexUncurry","rest","isSome","_tag","right","left","fa","fb","fc","bs","e","_i","xs_1","abs","elemE_1","element","elemS","ords","M","cs","_a","c","input","g","go","scope","apply","chain_","elemE","unionE_1","intersectionE_1","differenceE_1","map_","pipe","mapWithIndex_","ap_","fab","ma","filter_","filterMap_","partitionWithIndex_","predicateWithIndex","partition_","partitionMap_","partitionMapWithIndex_","alt_","that","reduce_","foldMap_","foldMapM","reduceRight_","reduceWithIndex_","foldMapWithIndex_","reduceRightWithIndex_","filterMapWithIndex_","filterWithIndex_","extend_","traverse_","F","traverseF","ta","traverseWithIndex_","traverseWithIndexF","wither_","witherF","wilt_","wiltF","flow","_","outLen","temp","out","l_1","fa_1","optionB","identity","wa","foldMapWithIndexM","fas","fbs","ret","bb","mt","b_1","splice","name","bindTo_","bind_"],"sources":["/Users/arthurfrancis/Documents/repo/imx-reactjs-integration-example/node_modules/fp-ts/lib/ReadonlyArray.js"],"sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.intersperse = exports.prependToAll = exports.unzip = exports.zip = exports.zipWith = exports.sort = exports.lefts = exports.rights = exports.reverse = exports.modifyAt = exports.deleteAt = exports.updateAt = exports.insertAt = exports.findLastIndex = exports.findLastMap = exports.findLast = exports.findFirstMap = exports.findFirst = exports.findIndex = exports.dropLeftWhile = exports.dropRight = exports.dropLeft = exports.spanLeft = exports.takeLeftWhile = exports.takeRight = exports.takeLeft = exports.init = exports.tail = exports.last = exports.head = exports.snoc = exports.cons = exports.lookup = exports.isOutOfBound = exports.isNonEmpty = exports.isEmpty = exports.scanRight = exports.scanLeft = exports.foldRight = exports.foldLeft = exports.flatten = exports.replicate = exports.range = exports.makeBy = exports.getOrd = exports.getEq = exports.getMonoid = exports.getShow = exports.toArray = exports.fromArray = void 0;\nexports.FunctorWithIndex = exports.Functor = exports.URI = exports.unfold = exports.wilt = exports.wither = exports.traverseWithIndex = exports.sequence = exports.traverse = exports.reduceRightWithIndex = exports.reduceRight = exports.reduceWithIndex = exports.foldMap = exports.reduce = exports.foldMapWithIndex = exports.duplicate = exports.extend = exports.filterWithIndex = exports.partitionMapWithIndex = exports.partitionMap = exports.partitionWithIndex = exports.partition = exports.compact = exports.filterMap = exports.filterMapWithIndex = exports.filter = exports.separate = exports.mapWithIndex = exports.map = exports.chainFirst = exports.chainWithIndex = exports.chain = exports.apSecond = exports.apFirst = exports.ap = exports.alt = exports.altW = exports.zero = exports.of = exports.difference = exports.intersection = exports.union = exports.comprehension = exports.chunksOf = exports.splitAt = exports.chop = exports.sortBy = exports.uniq = exports.elem = exports.rotate = void 0;\nexports.apS = exports.bind = exports.bindTo = exports.Do = exports.some = exports.every = exports.empty = exports.unsafeDeleteAt = exports.unsafeUpdateAt = exports.unsafeInsertAt = exports.readonlyArray = exports.Witherable = exports.TraversableWithIndex = exports.Traversable = exports.FoldableWithIndex = exports.Foldable = exports.FilterableWithIndex = exports.Filterable = exports.Compactable = exports.Extend = exports.Alternative = exports.Alt = exports.Unfoldable = exports.Monad = exports.Applicative = void 0;\nvar function_1 = require(\"./function\");\nvar O = __importStar(require(\"./Option\"));\nvar Ord_1 = require(\"./Ord\");\n// -------------------------------------------------------------------------------------\n// model\n// -------------------------------------------------------------------------------------\n/**\n * @category constructors\n * @since 2.5.0\n */\n// tslint:disable-next-line: readonly-array\nfunction fromArray(as) {\n    var l = as.length;\n    if (l === 0) {\n        return exports.empty;\n    }\n    var ras = Array(l);\n    for (var i = 0; i < l; i++) {\n        ras[i] = as[i];\n    }\n    return ras;\n}\nexports.fromArray = fromArray;\n/**\n * @category destructors\n * @since 2.5.0\n */\n// tslint:disable-next-line: readonly-array\nfunction toArray(ras) {\n    var l = ras.length;\n    var as = Array(l);\n    for (var i = 0; i < l; i++) {\n        as[i] = ras[i];\n    }\n    return as;\n}\nexports.toArray = toArray;\n/**\n * @category instances\n * @since 2.5.0\n */\nfunction getShow(S) {\n    return {\n        show: function (as) { return \"[\" + as.map(S.show).join(', ') + \"]\"; }\n    };\n}\nexports.getShow = getShow;\nvar concat = function (x, y) {\n    var lenx = x.length;\n    if (lenx === 0) {\n        return y;\n    }\n    var leny = y.length;\n    if (leny === 0) {\n        return x;\n    }\n    var r = Array(lenx + leny);\n    for (var i = 0; i < lenx; i++) {\n        r[i] = x[i];\n    }\n    for (var i = 0; i < leny; i++) {\n        r[i + lenx] = y[i];\n    }\n    return r;\n};\n/**\n * Returns a `Monoid` for `ReadonlyArray<A>`\n *\n * @example\n * import { getMonoid } from 'fp-ts/ReadonlyArray'\n *\n * const M = getMonoid<number>()\n * assert.deepStrictEqual(M.concat([1, 2], [3, 4]), [1, 2, 3, 4])\n *\n * @category instances\n * @since 2.5.0\n */\nfunction getMonoid() {\n    return {\n        concat: concat,\n        empty: exports.empty\n    };\n}\nexports.getMonoid = getMonoid;\n/**\n * Derives an `Eq` over the `ReadonlyArray` of a given element type from the `Eq` of that type. The derived `Eq` defines two\n * arrays as equal if all elements of both arrays are compared equal pairwise with the given `E`. In case of arrays of\n * different lengths, the result is non equality.\n *\n * @example\n * import { eqString } from 'fp-ts/Eq'\n * import { getEq } from 'fp-ts/ReadonlyArray'\n *\n * const E = getEq(eqString)\n * assert.strictEqual(E.equals(['a', 'b'], ['a', 'b']), true)\n * assert.strictEqual(E.equals(['a'], []), false)\n *\n * @category instances\n * @since 2.5.0\n */\nfunction getEq(E) {\n    return {\n        equals: function (xs, ys) { return xs === ys || (xs.length === ys.length && xs.every(function (x, i) { return E.equals(x, ys[i]); })); }\n    };\n}\nexports.getEq = getEq;\n/**\n * Derives an `Ord` over the `ReadonlyArray` of a given element type from the `Ord` of that type. The ordering between two such\n * arrays is equal to: the first non equal comparison of each arrays elements taken pairwise in increasing order, in\n * case of equality over all the pairwise elements; the longest array is considered the greatest, if both arrays have\n * the same length, the result is equality.\n *\n * @example\n * import { getOrd } from 'fp-ts/ReadonlyArray'\n * import { ordString } from 'fp-ts/Ord'\n *\n * const O = getOrd(ordString)\n * assert.strictEqual(O.compare(['b'], ['a']), 1)\n * assert.strictEqual(O.compare(['a'], ['a']), 0)\n * assert.strictEqual(O.compare(['a'], ['b']), -1)\n *\n *\n * @category instances\n * @since 2.5.0\n */\nfunction getOrd(O) {\n    return Ord_1.fromCompare(function (a, b) {\n        var aLen = a.length;\n        var bLen = b.length;\n        var len = Math.min(aLen, bLen);\n        for (var i = 0; i < len; i++) {\n            var ordering = O.compare(a[i], b[i]);\n            if (ordering !== 0) {\n                return ordering;\n            }\n        }\n        return Ord_1.ordNumber.compare(aLen, bLen);\n    });\n}\nexports.getOrd = getOrd;\n/**\n * Return a list of length `n` with element `i` initialized with `f(i)`\n *\n * @example\n * import { makeBy } from 'fp-ts/ReadonlyArray'\n *\n * const double = (n: number): number => n * 2\n * assert.deepStrictEqual(makeBy(5, double), [0, 2, 4, 6, 8])\n *\n * @category constructors\n * @since 2.5.0\n */\nfunction makeBy(n, f) {\n    // tslint:disable-next-line: readonly-array\n    var r = [];\n    for (var i = 0; i < n; i++) {\n        r.push(f(i));\n    }\n    return r;\n}\nexports.makeBy = makeBy;\n/**\n * Create an array containing a range of integers, including both endpoints\n *\n * @example\n * import { range } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(range(1, 5), [1, 2, 3, 4, 5])\n *\n * @category constructors\n * @since 2.5.0\n */\nfunction range(start, end) {\n    return makeBy(end - start + 1, function (i) { return start + i; });\n}\nexports.range = range;\n/**\n * Create an array containing a value repeated the specified number of times\n *\n * @example\n * import { replicate } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(replicate(3, 'a'), ['a', 'a', 'a'])\n *\n * @category constructors\n * @since 2.5.0\n */\nfunction replicate(n, a) {\n    return makeBy(n, function () { return a; });\n}\nexports.replicate = replicate;\n/**\n * Removes one level of nesting\n *\n * Derivable from `Monad`.\n *\n * @example\n * import { flatten } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(flatten([[1], [2], [3]]), [1, 2, 3])\n *\n * @category combinators\n * @since 2.5.0\n */\nfunction flatten(mma) {\n    var rLen = 0;\n    var len = mma.length;\n    for (var i = 0; i < len; i++) {\n        rLen += mma[i].length;\n    }\n    var r = Array(rLen);\n    var start = 0;\n    for (var i = 0; i < len; i++) {\n        var arr = mma[i];\n        var l = arr.length;\n        for (var j = 0; j < l; j++) {\n            r[j + start] = arr[j];\n        }\n        start += l;\n    }\n    return r;\n}\nexports.flatten = flatten;\n/**\n * Break an array into its first element and remaining elements\n *\n * @example\n * import { foldLeft } from 'fp-ts/ReadonlyArray'\n *\n * const len: <A>(as: ReadonlyArray<A>) => number = foldLeft(() => 0, (_, tail) => 1 + len(tail))\n * assert.strictEqual(len([1, 2, 3]), 3)\n *\n * @category destructors\n * @since 2.5.0\n */\nfunction foldLeft(onEmpty, onCons) {\n    return function (as) { return (isEmpty(as) ? onEmpty() : onCons(as[0], as.slice(1))); };\n}\nexports.foldLeft = foldLeft;\n/**\n * Break an array into its initial elements and the last element\n *\n * @category destructors\n * @since 2.5.0\n */\nfunction foldRight(onEmpty, onCons) {\n    return function (as) { return (isEmpty(as) ? onEmpty() : onCons(as.slice(0, as.length - 1), as[as.length - 1])); };\n}\nexports.foldRight = foldRight;\n/**\n * Same as `reduce` but it carries over the intermediate steps\n *\n * @example\n * import { scanLeft } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(scanLeft(10, (b, a: number) => b - a)([1, 2, 3]), [10, 9, 7, 4])\n *\n * @category combinators\n * @since 2.5.0\n */\nfunction scanLeft(b, f) {\n    return function (as) {\n        var l = as.length;\n        // tslint:disable-next-line: readonly-array\n        var r = new Array(l + 1);\n        r[0] = b;\n        for (var i = 0; i < l; i++) {\n            r[i + 1] = f(r[i], as[i]);\n        }\n        return r;\n    };\n}\nexports.scanLeft = scanLeft;\n/**\n * Fold an array from the right, keeping all intermediate results instead of only the final result\n *\n * @example\n * import { scanRight } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(scanRight(10, (a: number, b) => b - a)([1, 2, 3]), [4, 5, 7, 10])\n *\n * @category combinators\n * @since 2.5.0\n */\nfunction scanRight(b, f) {\n    return function (as) {\n        var l = as.length;\n        // tslint:disable-next-line: readonly-array\n        var r = new Array(l + 1);\n        r[l] = b;\n        for (var i = l - 1; i >= 0; i--) {\n            r[i] = f(as[i], r[i + 1]);\n        }\n        return r;\n    };\n}\nexports.scanRight = scanRight;\n/**\n * Test whether an array is empty\n *\n * @example\n * import { isEmpty } from 'fp-ts/ReadonlyArray'\n *\n * assert.strictEqual(isEmpty([]), true)\n *\n * @since 2.5.0\n */\nfunction isEmpty(as) {\n    return as.length === 0;\n}\nexports.isEmpty = isEmpty;\n/**\n * Test whether an array is non empty narrowing down the type to `NonEmptyReadonlyArray<A>`\n *\n * @category guards\n * @since 2.5.0\n */\nfunction isNonEmpty(as) {\n    return as.length > 0;\n}\nexports.isNonEmpty = isNonEmpty;\n/**\n * Test whether an array contains a particular index\n *\n * @since 2.5.0\n */\nfunction isOutOfBound(i, as) {\n    return i < 0 || i >= as.length;\n}\nexports.isOutOfBound = isOutOfBound;\nfunction lookup(i, as) {\n    return as === undefined ? function (as) { return lookup(i, as); } : isOutOfBound(i, as) ? O.none : O.some(as[i]);\n}\nexports.lookup = lookup;\nfunction cons(head, tail) {\n    if (tail === undefined) {\n        return function (tail) { return cons(head, tail); };\n    }\n    var len = tail.length;\n    var r = Array(len + 1);\n    for (var i = 0; i < len; i++) {\n        r[i + 1] = tail[i];\n    }\n    r[0] = head;\n    return r;\n}\nexports.cons = cons;\n// TODO: curry and make data-last in v3\n/**\n * Append an element to the end of an array, creating a new non empty array\n *\n * @example\n * import { snoc } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(snoc([1, 2, 3], 4), [1, 2, 3, 4])\n *\n * @category constructors\n * @since 2.5.0\n */\nfunction snoc(init, end) {\n    var len = init.length;\n    var r = Array(len + 1);\n    for (var i = 0; i < len; i++) {\n        r[i] = init[i];\n    }\n    r[len] = end;\n    return r;\n}\nexports.snoc = snoc;\n/**\n * Get the first element in an array, or `None` if the array is empty\n *\n * @example\n * import { head } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(head([1, 2, 3]), some(1))\n * assert.deepStrictEqual(head([]), none)\n *\n * @since 2.5.0\n */\nfunction head(as) {\n    return isEmpty(as) ? O.none : O.some(as[0]);\n}\nexports.head = head;\n/**\n * Get the last element in an array, or `None` if the array is empty\n *\n * @example\n * import { last } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(last([1, 2, 3]), some(3))\n * assert.deepStrictEqual(last([]), none)\n *\n * @since 2.5.0\n */\nfunction last(as) {\n    return lookup(as.length - 1, as);\n}\nexports.last = last;\n/**\n * Get all but the first element of an array, creating a new array, or `None` if the array is empty\n *\n * @example\n * import { tail } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(tail([1, 2, 3]), some([2, 3]))\n * assert.deepStrictEqual(tail([]), none)\n *\n * @since 2.5.0\n */\nfunction tail(as) {\n    return isEmpty(as) ? O.none : O.some(as.slice(1));\n}\nexports.tail = tail;\n/**\n * Get all but the last element of an array, creating a new array, or `None` if the array is empty\n *\n * @example\n * import { init } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(init([1, 2, 3]), some([1, 2]))\n * assert.deepStrictEqual(init([]), none)\n *\n * @since 2.5.0\n */\nfunction init(as) {\n    var len = as.length;\n    return len === 0 ? O.none : O.some(as.slice(0, len - 1));\n}\nexports.init = init;\n/**\n * Keep only a number of elements from the start of an array, creating a new array.\n * `n` must be a natural number\n *\n * @example\n * import { takeLeft } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(takeLeft(2)([1, 2, 3]), [1, 2])\n *\n * @category combinators\n * @since 2.5.0\n */\nfunction takeLeft(n) {\n    return function (as) { return as.slice(0, n); };\n}\nexports.takeLeft = takeLeft;\n/**\n * Keep only a number of elements from the end of an array, creating a new array.\n * `n` must be a natural number\n *\n * @example\n * import { takeRight } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(takeRight(2)([1, 2, 3, 4, 5]), [4, 5])\n *\n * @since 2.5.0\n */\nfunction takeRight(n) {\n    return function (as) { return (n === 0 ? exports.empty : as.slice(-n)); };\n}\nexports.takeRight = takeRight;\nfunction takeLeftWhile(predicate) {\n    return function (as) {\n        var i = spanIndexUncurry(as, predicate);\n        var init = Array(i);\n        for (var j = 0; j < i; j++) {\n            init[j] = as[j];\n        }\n        return init;\n    };\n}\nexports.takeLeftWhile = takeLeftWhile;\nvar spanIndexUncurry = function (as, predicate) {\n    var l = as.length;\n    var i = 0;\n    for (; i < l; i++) {\n        if (!predicate(as[i])) {\n            break;\n        }\n    }\n    return i;\n};\nfunction spanLeft(predicate) {\n    return function (as) {\n        var i = spanIndexUncurry(as, predicate);\n        var init = Array(i);\n        for (var j = 0; j < i; j++) {\n            init[j] = as[j];\n        }\n        var l = as.length;\n        var rest = Array(l - i);\n        for (var j = i; j < l; j++) {\n            rest[j - i] = as[j];\n        }\n        return { init: init, rest: rest };\n    };\n}\nexports.spanLeft = spanLeft;\n/**\n * Drop a number of elements from the start of an array, creating a new array\n *\n * @example\n * import { dropLeft } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(dropLeft(2)([1, 2, 3]), [3])\n *\n * @category combinators\n * @since 2.5.0\n */\nfunction dropLeft(n) {\n    return function (as) { return as.slice(n, as.length); };\n}\nexports.dropLeft = dropLeft;\n/**\n * Drop a number of elements from the end of an array, creating a new array\n *\n * @example\n * import { dropRight } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(dropRight(2)([1, 2, 3, 4, 5]), [1, 2, 3])\n *\n * @category combinators\n * @since 2.5.0\n */\nfunction dropRight(n) {\n    return function (as) { return as.slice(0, as.length - n); };\n}\nexports.dropRight = dropRight;\n/**\n * Remove the longest initial subarray for which all element satisfy the specified predicate, creating a new array\n *\n * @example\n * import { dropLeftWhile } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(dropLeftWhile((n: number) => n % 2 === 1)([1, 3, 2, 4, 5]), [2, 4, 5])\n *\n * @category combinators\n * @since 2.5.0\n */\nfunction dropLeftWhile(predicate) {\n    return function (as) {\n        var i = spanIndexUncurry(as, predicate);\n        var l = as.length;\n        var rest = Array(l - i);\n        for (var j = i; j < l; j++) {\n            rest[j - i] = as[j];\n        }\n        return rest;\n    };\n}\nexports.dropLeftWhile = dropLeftWhile;\n/**\n * Find the first index for which a predicate holds\n *\n * @example\n * import { findIndex } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(findIndex((n: number) => n === 2)([1, 2, 3]), some(1))\n * assert.deepStrictEqual(findIndex((n: number) => n === 2)([]), none)\n *\n * @since 2.5.0\n */\nfunction findIndex(predicate) {\n    return function (as) {\n        var len = as.length;\n        for (var i = 0; i < len; i++) {\n            if (predicate(as[i])) {\n                return O.some(i);\n            }\n        }\n        return O.none;\n    };\n}\nexports.findIndex = findIndex;\nfunction findFirst(predicate) {\n    return function (as) {\n        var len = as.length;\n        for (var i = 0; i < len; i++) {\n            if (predicate(as[i])) {\n                return O.some(as[i]);\n            }\n        }\n        return O.none;\n    };\n}\nexports.findFirst = findFirst;\n/**\n * Find the first element returned by an option based selector function\n *\n * @example\n * import { findFirstMap } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface Person {\n *   name: string\n *   age?: number\n * }\n *\n * const persons: ReadonlyArray<Person> = [{ name: 'John' }, { name: 'Mary', age: 45 }, { name: 'Joey', age: 28 }]\n *\n * // returns the name of the first person that has an age\n * assert.deepStrictEqual(findFirstMap((p: Person) => (p.age === undefined ? none : some(p.name)))(persons), some('Mary'))\n *\n * @since 2.5.0\n */\nfunction findFirstMap(f) {\n    return function (as) {\n        var len = as.length;\n        for (var i = 0; i < len; i++) {\n            var v = f(as[i]);\n            if (O.isSome(v)) {\n                return v;\n            }\n        }\n        return O.none;\n    };\n}\nexports.findFirstMap = findFirstMap;\nfunction findLast(predicate) {\n    return function (as) {\n        var len = as.length;\n        for (var i = len - 1; i >= 0; i--) {\n            if (predicate(as[i])) {\n                return O.some(as[i]);\n            }\n        }\n        return O.none;\n    };\n}\nexports.findLast = findLast;\n/**\n * Find the last element returned by an option based selector function\n *\n * @example\n * import { findLastMap } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface Person {\n *   name: string\n *   age?: number\n * }\n *\n * const persons: ReadonlyArray<Person> = [{ name: 'John' }, { name: 'Mary', age: 45 }, { name: 'Joey', age: 28 }]\n *\n * // returns the name of the last person that has an age\n * assert.deepStrictEqual(findLastMap((p: Person) => (p.age === undefined ? none : some(p.name)))(persons), some('Joey'))\n *\n * @since 2.5.0\n */\nfunction findLastMap(f) {\n    return function (as) {\n        var len = as.length;\n        for (var i = len - 1; i >= 0; i--) {\n            var v = f(as[i]);\n            if (O.isSome(v)) {\n                return v;\n            }\n        }\n        return O.none;\n    };\n}\nexports.findLastMap = findLastMap;\n/**\n * Returns the index of the last element of the list which matches the predicate\n *\n * @example\n * import { findLastIndex } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface X {\n *   a: number\n *   b: number\n * }\n * const xs: ReadonlyArray<X> = [{ a: 1, b: 0 }, { a: 1, b: 1 }]\n * assert.deepStrictEqual(findLastIndex((x: { a: number }) => x.a === 1)(xs), some(1))\n * assert.deepStrictEqual(findLastIndex((x: { a: number }) => x.a === 4)(xs), none)\n *\n *\n * @since 2.5.0\n */\nfunction findLastIndex(predicate) {\n    return function (as) {\n        var len = as.length;\n        for (var i = len - 1; i >= 0; i--) {\n            if (predicate(as[i])) {\n                return O.some(i);\n            }\n        }\n        return O.none;\n    };\n}\nexports.findLastIndex = findLastIndex;\n/**\n * Insert an element at the specified index, creating a new array, or returning `None` if the index is out of bounds\n *\n * @example\n * import { insertAt } from 'fp-ts/ReadonlyArray'\n * import { some } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(insertAt(2, 5)([1, 2, 3, 4]), some([1, 2, 5, 3, 4]))\n *\n * @since 2.5.0\n */\nfunction insertAt(i, a) {\n    return function (as) { return (i < 0 || i > as.length ? O.none : O.some(unsafeInsertAt(i, a, as))); };\n}\nexports.insertAt = insertAt;\n/**\n * Change the element at the specified index, creating a new array, or returning `None` if the index is out of bounds\n *\n * @example\n * import { updateAt } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(updateAt(1, 1)([1, 2, 3]), some([1, 1, 3]))\n * assert.deepStrictEqual(updateAt(1, 1)([]), none)\n *\n * @since 2.5.0\n */\nfunction updateAt(i, a) {\n    return function (as) { return (isOutOfBound(i, as) ? O.none : O.some(unsafeUpdateAt(i, a, as))); };\n}\nexports.updateAt = updateAt;\n/**\n * Delete the element at the specified index, creating a new array, or returning `None` if the index is out of bounds\n *\n * @example\n * import { deleteAt } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(deleteAt(0)([1, 2, 3]), some([2, 3]))\n * assert.deepStrictEqual(deleteAt(1)([]), none)\n *\n * @since 2.5.0\n */\nfunction deleteAt(i) {\n    return function (as) { return (isOutOfBound(i, as) ? O.none : O.some(unsafeDeleteAt(i, as))); };\n}\nexports.deleteAt = deleteAt;\n/**\n * Apply a function to the element at the specified index, creating a new array, or returning `None` if the index is out\n * of bounds\n *\n * @example\n * import { modifyAt } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * const double = (x: number): number => x * 2\n * assert.deepStrictEqual(modifyAt(1, double)([1, 2, 3]), some([1, 4, 3]))\n * assert.deepStrictEqual(modifyAt(1, double)([]), none)\n *\n * @since 2.5.0\n */\nfunction modifyAt(i, f) {\n    return function (as) { return (isOutOfBound(i, as) ? O.none : O.some(unsafeUpdateAt(i, f(as[i]), as))); };\n}\nexports.modifyAt = modifyAt;\n/**\n * Reverse an array, creating a new array\n *\n * @example\n * import { reverse } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(reverse([1, 2, 3]), [3, 2, 1])\n *\n * @category combinators\n * @since 2.5.0\n */\nfunction reverse(as) {\n    if (isEmpty(as)) {\n        return as;\n    }\n    return as.slice().reverse();\n}\nexports.reverse = reverse;\n/**\n * Extracts from an array of `Either` all the `Right` elements. All the `Right` elements are extracted in order\n *\n * @example\n * import { rights } from 'fp-ts/ReadonlyArray'\n * import { right, left } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(rights([right(1), left('foo'), right(2)]), [1, 2])\n *\n * @category combinators\n * @since 2.5.0\n */\nfunction rights(as) {\n    // tslint:disable-next-line: readonly-array\n    var r = [];\n    var len = as.length;\n    for (var i = 0; i < len; i++) {\n        var a = as[i];\n        if (a._tag === 'Right') {\n            r.push(a.right);\n        }\n    }\n    return r;\n}\nexports.rights = rights;\n/**\n * Extracts from an array of `Either` all the `Left` elements. All the `Left` elements are extracted in order\n *\n * @example\n * import { lefts } from 'fp-ts/ReadonlyArray'\n * import { left, right } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(lefts([right(1), left('foo'), right(2)]), ['foo'])\n *\n * @since 2.5.0\n */\nfunction lefts(as) {\n    // tslint:disable-next-line: readonly-array\n    var r = [];\n    var len = as.length;\n    for (var i = 0; i < len; i++) {\n        var a = as[i];\n        if (a._tag === 'Left') {\n            r.push(a.left);\n        }\n    }\n    return r;\n}\nexports.lefts = lefts;\n/**\n * Sort the elements of an array in increasing order, creating a new array\n *\n * @example\n * import { sort } from 'fp-ts/ReadonlyArray'\n * import { ordNumber } from 'fp-ts/Ord'\n *\n * assert.deepStrictEqual(sort(ordNumber)([3, 2, 1]), [1, 2, 3])\n *\n * @category combinators\n * @since 2.5.0\n */\nvar sort = function (O) { return function (as) {\n    return as.length <= 1 ? as : as.slice().sort(O.compare);\n}; };\nexports.sort = sort;\n// TODO: curry and make data-last in v3\n/**\n * Apply a function to pairs of elements at the same index in two arrays, collecting the results in a new array. If one\n * input array is short, excess elements of the longer array are discarded.\n *\n * @example\n * import { zipWith } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(zipWith([1, 2, 3], ['a', 'b', 'c', 'd'], (n, s) => s + n), ['a1', 'b2', 'c3'])\n *\n * @category combinators\n * @since 2.5.0\n */\nfunction zipWith(fa, fb, f) {\n    // tslint:disable-next-line: readonly-array\n    var fc = [];\n    var len = Math.min(fa.length, fb.length);\n    for (var i = 0; i < len; i++) {\n        fc[i] = f(fa[i], fb[i]);\n    }\n    return fc;\n}\nexports.zipWith = zipWith;\nfunction zip(as, bs) {\n    if (bs === undefined) {\n        return function (bs) { return zip(bs, as); };\n    }\n    return zipWith(as, bs, function (a, b) { return [a, b]; });\n}\nexports.zip = zip;\n/**\n * The function is reverse of `zip`. Takes an array of pairs and return two corresponding arrays\n *\n * @example\n * import { unzip } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(unzip([[1, 'a'], [2, 'b'], [3, 'c']]), [[1, 2, 3], ['a', 'b', 'c']])\n *\n * @since 2.5.0\n */\nfunction unzip(as) {\n    // tslint:disable-next-line: readonly-array\n    var fa = [];\n    // tslint:disable-next-line: readonly-array\n    var fb = [];\n    for (var i = 0; i < as.length; i++) {\n        fa[i] = as[i][0];\n        fb[i] = as[i][1];\n    }\n    return [fa, fb];\n}\nexports.unzip = unzip;\n/**\n * Prepend an element to every member of an array\n *\n * @example\n * import { prependToAll } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(prependToAll(9)([1, 2, 3, 4]), [9, 1, 9, 2, 9, 3, 9, 4])\n *\n * @category combinators\n * @since 2.9.0\n */\nvar prependToAll = function (e) { return function (xs) {\n    // tslint:disable-next-line: readonly-array\n    var ys = [];\n    for (var _i = 0, xs_1 = xs; _i < xs_1.length; _i++) {\n        var x = xs_1[_i];\n        ys.push(e, x);\n    }\n    return ys;\n}; };\nexports.prependToAll = prependToAll;\n/**\n * Places an element in between members of an array\n *\n * @example\n * import { intersperse } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(intersperse(9)([1, 2, 3, 4]), [1, 9, 2, 9, 3, 9, 4])\n *\n * @category combinators\n * @since 2.9.0\n */\nfunction intersperse(e) {\n    return function (as) {\n        var length = as.length;\n        if (length === 0) {\n            return as;\n        }\n        return cons(as[0], exports.prependToAll(e)(as.slice(1, as.length)));\n    };\n}\nexports.intersperse = intersperse;\n/**\n * Rotate an array to the right by `n` steps\n *\n * @example\n * import { rotate } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(rotate(2)([1, 2, 3, 4, 5]), [4, 5, 1, 2, 3])\n *\n * @category combinators\n * @since 2.5.0\n */\nfunction rotate(n) {\n    return function (as) {\n        var len = as.length;\n        if (n === 0 || len <= 1 || len === Math.abs(n)) {\n            return as;\n        }\n        else if (n < 0) {\n            return rotate(len + n)(as);\n        }\n        else {\n            return as.slice(-n).concat(as.slice(0, len - n));\n        }\n    };\n}\nexports.rotate = rotate;\nfunction elem(E) {\n    return function (a, as) {\n        if (as === undefined) {\n            var elemE_1 = elem(E);\n            return function (as) { return elemE_1(a, as); };\n        }\n        var predicate = function (element) { return E.equals(element, a); };\n        var i = 0;\n        var len = as.length;\n        for (; i < len; i++) {\n            if (predicate(as[i])) {\n                return true;\n            }\n        }\n        return false;\n    };\n}\nexports.elem = elem;\n/**\n * Remove duplicates from an array, keeping the first occurrence of an element.\n *\n * @example\n * import { uniq } from 'fp-ts/ReadonlyArray'\n * import { eqNumber } from 'fp-ts/Eq'\n *\n * assert.deepStrictEqual(uniq(eqNumber)([1, 2, 1]), [1, 2])\n *\n * @category combinators\n * @since 2.5.0\n */\nfunction uniq(E) {\n    var elemS = elem(E);\n    return function (as) {\n        var len = as.length;\n        if (len <= 1) {\n            return as;\n        }\n        // tslint:disable-next-line: readonly-array\n        var r = [];\n        var i = 0;\n        for (; i < len; i++) {\n            var a = as[i];\n            if (!elemS(a, r)) {\n                r.push(a);\n            }\n        }\n        return len === r.length ? as : r;\n    };\n}\nexports.uniq = uniq;\n/**\n * Sort the elements of an array in increasing order, where elements are compared using first `ords[0]`, then `ords[1]`,\n * etc...\n *\n * @example\n * import { sortBy } from 'fp-ts/ReadonlyArray'\n * import { ord, ordString, ordNumber } from 'fp-ts/Ord'\n *\n * interface Person {\n *   name: string\n *   age: number\n * }\n * const byName = ord.contramap(ordString, (p: Person) => p.name)\n * const byAge = ord.contramap(ordNumber, (p: Person) => p.age)\n *\n * const sortByNameByAge = sortBy([byName, byAge])\n *\n * const persons = [{ name: 'a', age: 1 }, { name: 'b', age: 3 }, { name: 'c', age: 2 }, { name: 'b', age: 2 }]\n * assert.deepStrictEqual(sortByNameByAge(persons), [\n *   { name: 'a', age: 1 },\n *   { name: 'b', age: 2 },\n *   { name: 'b', age: 3 },\n *   { name: 'c', age: 2 }\n * ])\n *\n * @category combinators\n * @since 2.5.0\n */\nfunction sortBy(ords) {\n    var M = Ord_1.getMonoid();\n    return exports.sort(ords.reduce(M.concat, M.empty));\n}\nexports.sortBy = sortBy;\n/**\n * A useful recursion pattern for processing an array to produce a new array, often used for \"chopping\" up the input\n * array. Typically chop is called with some function that will consume an initial prefix of the array and produce a\n * value and the rest of the array.\n *\n * @example\n * import { Eq, eqNumber } from 'fp-ts/Eq'\n * import { chop, spanLeft } from 'fp-ts/ReadonlyArray'\n *\n * const group = <A>(S: Eq<A>): ((as: ReadonlyArray<A>) => ReadonlyArray<ReadonlyArray<A>>) => {\n *   return chop(as => {\n *     const { init, rest } = spanLeft((a: A) => S.equals(a, as[0]))(as)\n *     return [init, rest]\n *   })\n * }\n * assert.deepStrictEqual(group(eqNumber)([1, 1, 2, 3, 3, 4]), [[1, 1], [2], [3, 3], [4]])\n *\n * @category combinators\n * @since 2.5.0\n */\nvar chop = function (f) { return function (as) {\n    // tslint:disable-next-line: readonly-array\n    var result = [];\n    var cs = as;\n    while (isNonEmpty(cs)) {\n        var _a = f(cs), b = _a[0], c = _a[1];\n        result.push(b);\n        cs = c;\n    }\n    return result;\n}; };\nexports.chop = chop;\n/**\n * Splits an array into two pieces, the first piece has `n` elements.\n *\n * @example\n * import { splitAt } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(splitAt(2)([1, 2, 3, 4, 5]), [[1, 2], [3, 4, 5]])\n *\n * @since 2.5.0\n */\nfunction splitAt(n) {\n    return function (as) { return [as.slice(0, n), as.slice(n)]; };\n}\nexports.splitAt = splitAt;\n/**\n * Splits an array into length-`n` pieces. The last piece will be shorter if `n` does not evenly divide the length of\n * the array. Note that `chunksOf(n)([])` is `[]`, not `[[]]`. This is intentional, and is consistent with a recursive\n * definition of `chunksOf`; it satisfies the property that\n *\n * ```ts\n * chunksOf(n)(xs).concat(chunksOf(n)(ys)) == chunksOf(n)(xs.concat(ys)))\n * ```\n *\n * whenever `n` evenly divides the length of `xs`.\n *\n * @example\n * import { chunksOf } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(chunksOf(2)([1, 2, 3, 4, 5]), [[1, 2], [3, 4], [5]])\n *\n *\n * @since 2.5.0\n */\nfunction chunksOf(n) {\n    var f = exports.chop(splitAt(n));\n    return function (as) { return (as.length === 0 ? exports.empty : isOutOfBound(n - 1, as) ? [as] : f(as)); };\n}\nexports.chunksOf = chunksOf;\nfunction comprehension(input, f, g) {\n    if (g === void 0) { g = function () { return true; }; }\n    var go = function (scope, input) {\n        if (input.length === 0) {\n            return g.apply(void 0, scope) ? [f.apply(void 0, scope)] : exports.empty;\n        }\n        else {\n            return chain_(input[0], function (x) { return go(snoc(scope, x), input.slice(1)); });\n        }\n    };\n    return go(exports.empty, input);\n}\nexports.comprehension = comprehension;\nfunction union(E) {\n    var elemE = elem(E);\n    return function (xs, ys) {\n        if (ys === undefined) {\n            var unionE_1 = union(E);\n            return function (ys) { return unionE_1(ys, xs); };\n        }\n        return concat(xs, ys.filter(function (a) { return !elemE(a, xs); }));\n    };\n}\nexports.union = union;\nfunction intersection(E) {\n    var elemE = elem(E);\n    return function (xs, ys) {\n        if (ys === undefined) {\n            var intersectionE_1 = intersection(E);\n            return function (ys) { return intersectionE_1(ys, xs); };\n        }\n        return xs.filter(function (a) { return elemE(a, ys); });\n    };\n}\nexports.intersection = intersection;\nfunction difference(E) {\n    var elemE = elem(E);\n    return function (xs, ys) {\n        if (ys === undefined) {\n            var differenceE_1 = difference(E);\n            return function (ys) { return differenceE_1(ys, xs); };\n        }\n        return xs.filter(function (a) { return !elemE(a, ys); });\n    };\n}\nexports.difference = difference;\n/**\n * Wrap a value into the type constructor.\n *\n * @category Applicative\n * @since 2.5.0\n */\nvar of = function (a) { return [a]; };\nexports.of = of;\n/**\n * @category Alternative\n * @since 2.7.0\n */\nvar zero = function () { return exports.empty; };\nexports.zero = zero;\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\nvar map_ = function (fa, f) { return function_1.pipe(fa, exports.map(f)); };\nvar mapWithIndex_ = function (fa, f) { return function_1.pipe(fa, exports.mapWithIndex(f)); };\nvar ap_ = function (fab, fa) { return function_1.pipe(fab, exports.ap(fa)); };\nvar chain_ = function (ma, f) {\n    return function_1.pipe(ma, exports.chain(f));\n};\nvar filter_ = function (fa, predicate) { return function_1.pipe(fa, exports.filter(predicate)); };\nvar filterMap_ = function (fa, f) { return function_1.pipe(fa, exports.filterMap(f)); };\nvar partitionWithIndex_ = function (fa, predicateWithIndex) { return function_1.pipe(fa, exports.partitionWithIndex(predicateWithIndex)); };\nvar partition_ = function (fa, predicate) { return function_1.pipe(fa, exports.partition(predicate)); };\nvar partitionMap_ = function (fa, f) { return function_1.pipe(fa, exports.partitionMap(f)); };\nvar partitionMapWithIndex_ = function (fa, f) { return function_1.pipe(fa, exports.partitionMapWithIndex(f)); };\nvar alt_ = function (fa, that) { return function_1.pipe(fa, exports.alt(that)); };\nvar reduce_ = function (fa, b, f) { return function_1.pipe(fa, exports.reduce(b, f)); };\nvar foldMap_ = function (M) {\n    var foldMapM = exports.foldMap(M);\n    return function (fa, f) { return function_1.pipe(fa, foldMapM(f)); };\n};\nvar reduceRight_ = function (fa, b, f) { return function_1.pipe(fa, exports.reduceRight(b, f)); };\nvar reduceWithIndex_ = function (fa, b, f) {\n    var l = fa.length;\n    var r = b;\n    for (var i = 0; i < l; i++) {\n        r = f(i, r, fa[i]);\n    }\n    return r;\n};\nvar foldMapWithIndex_ = function (M) { return function (fa, f) {\n    return fa.reduce(function (b, a, i) { return M.concat(b, f(i, a)); }, M.empty);\n}; };\nvar reduceRightWithIndex_ = function (fa, b, f) {\n    return function_1.pipe(fa, exports.reduceRightWithIndex(b, f));\n};\nvar filterMapWithIndex_ = function (fa, f) {\n    return function_1.pipe(fa, exports.filterMapWithIndex(f));\n};\nvar filterWithIndex_ = function (fa, predicateWithIndex) { return function_1.pipe(fa, exports.filterWithIndex(predicateWithIndex)); };\nvar extend_ = function (fa, f) { return function_1.pipe(fa, exports.extend(f)); };\nvar traverse_ = function (F) {\n    var traverseF = exports.traverse(F);\n    return function (ta, f) { return function_1.pipe(ta, traverseF(f)); };\n};\n/* istanbul ignore next */\nvar traverseWithIndex_ = function (F) {\n    var traverseWithIndexF = exports.traverseWithIndex(F);\n    return function (ta, f) { return function_1.pipe(ta, traverseWithIndexF(f)); };\n};\n/* istanbul ignore next */\nvar wither_ = function (F) {\n    var witherF = exports.wither(F);\n    return function (fa, f) { return function_1.pipe(fa, witherF(f)); };\n};\n/* istanbul ignore next */\nvar wilt_ = function (F) {\n    var wiltF = exports.wilt(F);\n    return function (fa, f) { return function_1.pipe(fa, wiltF(f)); };\n};\n// -------------------------------------------------------------------------------------\n// pipeables\n// -------------------------------------------------------------------------------------\n/**\n * Less strict version of [`alt`](#alt).\n *\n * @category Alt\n * @since 2.9.0\n */\nvar altW = function (that) { return function (fa) { return concat(fa, that()); }; };\nexports.altW = altW;\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * @category Alt\n * @since 2.5.0\n */\nexports.alt = exports.altW;\n/**\n * Apply a function to an argument under a type constructor.\n *\n * @category Apply\n * @since 2.5.0\n */\nvar ap = function (fa) {\n    return exports.chain(function (f) { return function_1.pipe(fa, exports.map(f)); });\n};\nexports.ap = ap;\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.5.0\n */\nvar apFirst = function (fb) {\n    return function_1.flow(exports.map(function (a) { return function () { return a; }; }), exports.ap(fb));\n};\nexports.apFirst = apFirst;\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.5.0\n */\nvar apSecond = function (fb) {\n    return function_1.flow(exports.map(function () { return function (b) { return b; }; }), exports.ap(fb));\n};\nexports.apSecond = apSecond;\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @category Monad\n * @since 2.5.0\n */\nvar chain = function (f) { return function (ma) {\n    return function_1.pipe(ma, exports.chainWithIndex(function (_, a) { return f(a); }));\n}; };\nexports.chain = chain;\n/**\n * @since 2.7.0\n */\nvar chainWithIndex = function (f) { return function (ma) {\n    var outLen = 0;\n    var l = ma.length;\n    var temp = new Array(l);\n    for (var i = 0; i < l; i++) {\n        var e = ma[i];\n        var arr = f(i, e);\n        outLen += arr.length;\n        temp[i] = arr;\n    }\n    var out = Array(outLen);\n    var start = 0;\n    for (var i = 0; i < l; i++) {\n        var arr = temp[i];\n        var l_1 = arr.length;\n        for (var j = 0; j < l_1; j++) {\n            out[j + start] = arr[j];\n        }\n        start += l_1;\n    }\n    return out;\n}; };\nexports.chainWithIndex = chainWithIndex;\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * Derivable from `Monad`.\n *\n * @category combinators\n * @since 2.5.0\n */\nvar chainFirst = function (f) {\n    return exports.chain(function (a) {\n        return function_1.pipe(f(a), exports.map(function () { return a; }));\n    });\n};\nexports.chainFirst = chainFirst;\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category Functor\n * @since 2.5.0\n */\nvar map = function (f) { return function (fa) {\n    return fa.map(function (a) { return f(a); });\n}; };\nexports.map = map;\n/**\n * @category FunctorWithIndex\n * @since 2.5.0\n */\nvar mapWithIndex = function (f) { return function (fa) { return fa.map(function (a, i) { return f(i, a); }); }; };\nexports.mapWithIndex = mapWithIndex;\n/**\n * @category Compactable\n * @since 2.5.0\n */\nvar separate = function (fa) {\n    // tslint:disable-next-line: readonly-array\n    var left = [];\n    // tslint:disable-next-line: readonly-array\n    var right = [];\n    for (var _i = 0, fa_1 = fa; _i < fa_1.length; _i++) {\n        var e = fa_1[_i];\n        if (e._tag === 'Left') {\n            left.push(e.left);\n        }\n        else {\n            right.push(e.right);\n        }\n    }\n    return {\n        left: left,\n        right: right\n    };\n};\nexports.separate = separate;\n/**\n * @category Filterable\n * @since 2.5.0\n */\nvar filter = function (predicate) { return function (fa) { return fa.filter(predicate); }; };\nexports.filter = filter;\n/**\n * @category FilterableWithIndex\n * @since 2.5.0\n */\nvar filterMapWithIndex = function (f) { return function (fa) {\n    // tslint:disable-next-line: readonly-array\n    var result = [];\n    for (var i = 0; i < fa.length; i++) {\n        var optionB = f(i, fa[i]);\n        if (O.isSome(optionB)) {\n            result.push(optionB.value);\n        }\n    }\n    return result;\n}; };\nexports.filterMapWithIndex = filterMapWithIndex;\n/**\n * @category Filterable\n * @since 2.5.0\n */\nvar filterMap = function (f) {\n    return exports.filterMapWithIndex(function (_, a) { return f(a); });\n};\nexports.filterMap = filterMap;\n/**\n * @category Compactable\n * @since 2.5.0\n */\nexports.compact = \n/*#__PURE__*/\nexports.filterMap(function_1.identity);\n/**\n * @category Filterable\n * @since 2.5.0\n */\nvar partition = function (predicate) {\n    return exports.partitionWithIndex(function (_, a) { return predicate(a); });\n};\nexports.partition = partition;\n/**\n * @category FilterableWithIndex\n * @since 2.5.0\n */\nvar partitionWithIndex = function (predicateWithIndex) { return function (fa) {\n    // tslint:disable-next-line: readonly-array\n    var left = [];\n    // tslint:disable-next-line: readonly-array\n    var right = [];\n    for (var i = 0; i < fa.length; i++) {\n        var a = fa[i];\n        if (predicateWithIndex(i, a)) {\n            right.push(a);\n        }\n        else {\n            left.push(a);\n        }\n    }\n    return {\n        left: left,\n        right: right\n    };\n}; };\nexports.partitionWithIndex = partitionWithIndex;\n/**\n * @category Filterable\n * @since 2.5.0\n */\nvar partitionMap = function (f) {\n    return exports.partitionMapWithIndex(function (_, a) { return f(a); });\n};\nexports.partitionMap = partitionMap;\n/**\n * @category FilterableWithIndex\n * @since 2.5.0\n */\nvar partitionMapWithIndex = function (f) { return function (fa) {\n    // tslint:disable-next-line: readonly-array\n    var left = [];\n    // tslint:disable-next-line: readonly-array\n    var right = [];\n    for (var i = 0; i < fa.length; i++) {\n        var e = f(i, fa[i]);\n        if (e._tag === 'Left') {\n            left.push(e.left);\n        }\n        else {\n            right.push(e.right);\n        }\n    }\n    return {\n        left: left,\n        right: right\n    };\n}; };\nexports.partitionMapWithIndex = partitionMapWithIndex;\n/**\n * @category FilterableWithIndex\n * @since 2.5.0\n */\nvar filterWithIndex = function (predicateWithIndex) { return function (fa) {\n    return fa.filter(function (a, i) { return predicateWithIndex(i, a); });\n}; };\nexports.filterWithIndex = filterWithIndex;\n/**\n * @category Extend\n * @since 2.5.0\n */\nvar extend = function (f) { return function (wa) { return wa.map(function (_, i, as) { return f(as.slice(i)); }); }; };\nexports.extend = extend;\n/**\n * Derivable from `Extend`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexports.duplicate = \n/*#__PURE__*/\nexports.extend(function_1.identity);\n/**\n * @category FoldableWithIndex\n * @since 2.5.0\n */\nvar foldMapWithIndex = function (M) {\n    var foldMapWithIndexM = foldMapWithIndex_(M);\n    return function (f) { return function (fa) { return foldMapWithIndexM(fa, f); }; };\n};\nexports.foldMapWithIndex = foldMapWithIndex;\n/**\n * @category Foldable\n * @since 2.5.0\n */\nvar reduce = function (b, f) {\n    return exports.reduceWithIndex(b, function (_, b, a) { return f(b, a); });\n};\nexports.reduce = reduce;\n/**\n * @category Foldable\n * @since 2.5.0\n */\nvar foldMap = function (M) {\n    var foldMapWithIndexM = exports.foldMapWithIndex(M);\n    return function (f) { return foldMapWithIndexM(function (_, a) { return f(a); }); };\n};\nexports.foldMap = foldMap;\n/**\n * @category FoldableWithIndex\n * @since 2.5.0\n */\nvar reduceWithIndex = function (b, f) { return function (fa) { return reduceWithIndex_(fa, b, f); }; };\nexports.reduceWithIndex = reduceWithIndex;\n/**\n * @category Foldable\n * @since 2.5.0\n */\nvar reduceRight = function (b, f) {\n    return exports.reduceRightWithIndex(b, function (_, a, b) { return f(a, b); });\n};\nexports.reduceRight = reduceRight;\n/**\n * @category FoldableWithIndex\n * @since 2.5.0\n */\nvar reduceRightWithIndex = function (b, f) { return function (fa) { return fa.reduceRight(function (b, a, i) { return f(i, a, b); }, b); }; };\nexports.reduceRightWithIndex = reduceRightWithIndex;\n/**\n * **for optimized and stack safe version check the data types `traverseArray` function**\n * @category Traversable\n * @since 2.6.3\n */\nvar traverse = function (F) {\n    var traverseWithIndexF = exports.traverseWithIndex(F);\n    return function (f) { return traverseWithIndexF(function (_, a) { return f(a); }); };\n};\nexports.traverse = traverse;\n/**\n * **for optimized and stack safe version check the data types `sequenceArray` function**\n * @category Traversable\n * @since 2.6.3\n */\nvar sequence = function (F) { return function (ta) {\n    return reduce_(ta, F.of(exports.zero()), function (fas, fa) {\n        return F.ap(F.map(fas, function (as) { return function (a) { return snoc(as, a); }; }), fa);\n    });\n}; };\nexports.sequence = sequence;\n/**\n * **for optimized and stack safe version check the data types `traverseArrayWithIndex` function**\n * @category TraversableWithIndex\n * @since 2.6.3\n */\nvar traverseWithIndex = function (F) { return function (f) {\n    return exports.reduceWithIndex(F.of(exports.zero()), function (i, fbs, a) {\n        return F.ap(F.map(fbs, function (bs) { return function (b) { return snoc(bs, b); }; }), f(i, a));\n    });\n}; };\nexports.traverseWithIndex = traverseWithIndex;\n/**\n * @category Witherable\n * @since 2.6.5\n */\nvar wither = function (F) {\n    var traverseF = exports.traverse(F);\n    return function (f) { return function (fa) { return F.map(function_1.pipe(fa, traverseF(f)), exports.compact); }; };\n};\nexports.wither = wither;\n/**\n * @category Witherable\n * @since 2.6.5\n */\nvar wilt = function (F) {\n    var traverseF = exports.traverse(F);\n    return function (f) { return function (fa) { return F.map(function_1.pipe(fa, traverseF(f)), exports.separate); }; };\n};\nexports.wilt = wilt;\n/**\n * @category Unfoldable\n * @since 2.6.6\n */\nvar unfold = function (b, f) {\n    // tslint:disable-next-line: readonly-array\n    var ret = [];\n    var bb = b;\n    while (true) {\n        var mt = f(bb);\n        if (O.isSome(mt)) {\n            var _a = mt.value, a = _a[0], b_1 = _a[1];\n            ret.push(a);\n            bb = b_1;\n        }\n        else {\n            break;\n        }\n    }\n    return ret;\n};\nexports.unfold = unfold;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.5.0\n */\nexports.URI = 'ReadonlyArray';\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Functor = {\n    URI: exports.URI,\n    map: map_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.FunctorWithIndex = {\n    URI: exports.URI,\n    map: map_,\n    mapWithIndex: mapWithIndex_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Applicative = {\n    URI: exports.URI,\n    map: map_,\n    ap: ap_,\n    of: exports.of\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Monad = {\n    URI: exports.URI,\n    map: map_,\n    ap: ap_,\n    of: exports.of,\n    chain: chain_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Unfoldable = {\n    URI: exports.URI,\n    unfold: exports.unfold\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Alt = {\n    URI: exports.URI,\n    map: map_,\n    alt: alt_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Alternative = {\n    URI: exports.URI,\n    map: map_,\n    ap: ap_,\n    of: exports.of,\n    alt: alt_,\n    zero: exports.zero\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Extend = {\n    URI: exports.URI,\n    map: map_,\n    extend: extend_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Compactable = {\n    URI: exports.URI,\n    compact: exports.compact,\n    separate: exports.separate\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Filterable = {\n    URI: exports.URI,\n    map: map_,\n    compact: exports.compact,\n    separate: exports.separate,\n    filter: filter_,\n    filterMap: filterMap_,\n    partition: partition_,\n    partitionMap: partitionMap_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.FilterableWithIndex = {\n    URI: exports.URI,\n    map: map_,\n    mapWithIndex: mapWithIndex_,\n    compact: exports.compact,\n    separate: exports.separate,\n    filter: filter_,\n    filterMap: filterMap_,\n    partition: partition_,\n    partitionMap: partitionMap_,\n    partitionMapWithIndex: partitionMapWithIndex_,\n    partitionWithIndex: partitionWithIndex_,\n    filterMapWithIndex: filterMapWithIndex_,\n    filterWithIndex: filterWithIndex_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Foldable = {\n    URI: exports.URI,\n    reduce: reduce_,\n    foldMap: foldMap_,\n    reduceRight: reduceRight_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.FoldableWithIndex = {\n    URI: exports.URI,\n    reduce: reduce_,\n    foldMap: foldMap_,\n    reduceRight: reduceRight_,\n    reduceWithIndex: reduceWithIndex_,\n    foldMapWithIndex: foldMapWithIndex_,\n    reduceRightWithIndex: reduceRightWithIndex_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Traversable = {\n    URI: exports.URI,\n    map: map_,\n    reduce: reduce_,\n    foldMap: foldMap_,\n    reduceRight: reduceRight_,\n    traverse: traverse_,\n    sequence: exports.sequence\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.TraversableWithIndex = {\n    URI: exports.URI,\n    map: map_,\n    mapWithIndex: mapWithIndex_,\n    reduce: reduce_,\n    foldMap: foldMap_,\n    reduceRight: reduceRight_,\n    reduceWithIndex: reduceWithIndex_,\n    foldMapWithIndex: foldMapWithIndex_,\n    reduceRightWithIndex: reduceRightWithIndex_,\n    traverse: traverse_,\n    sequence: exports.sequence,\n    traverseWithIndex: traverseWithIndex_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Witherable = {\n    URI: exports.URI,\n    map: map_,\n    compact: exports.compact,\n    separate: exports.separate,\n    filter: filter_,\n    filterMap: filterMap_,\n    partition: partition_,\n    partitionMap: partitionMap_,\n    reduce: reduce_,\n    foldMap: foldMap_,\n    reduceRight: reduceRight_,\n    traverse: traverse_,\n    sequence: exports.sequence,\n    wither: wither_,\n    wilt: wilt_\n};\n// TODO: remove in v3\n/**\n * @category instances\n * @since 2.5.0\n */\nexports.readonlyArray = {\n    URI: exports.URI,\n    compact: exports.compact,\n    separate: exports.separate,\n    map: map_,\n    ap: ap_,\n    of: exports.of,\n    chain: chain_,\n    filter: filter_,\n    filterMap: filterMap_,\n    partition: partition_,\n    partitionMap: partitionMap_,\n    mapWithIndex: mapWithIndex_,\n    partitionMapWithIndex: partitionMapWithIndex_,\n    partitionWithIndex: partitionWithIndex_,\n    filterMapWithIndex: filterMapWithIndex_,\n    filterWithIndex: filterWithIndex_,\n    alt: alt_,\n    zero: exports.zero,\n    unfold: exports.unfold,\n    reduce: reduce_,\n    foldMap: foldMap_,\n    reduceRight: reduceRight_,\n    traverse: traverse_,\n    sequence: exports.sequence,\n    reduceWithIndex: reduceWithIndex_,\n    foldMapWithIndex: foldMapWithIndex_,\n    reduceRightWithIndex: reduceRightWithIndex_,\n    traverseWithIndex: traverseWithIndex_,\n    extend: extend_,\n    wither: wither_,\n    wilt: wilt_\n};\n// -------------------------------------------------------------------------------------\n// unsafe\n// -------------------------------------------------------------------------------------\n/**\n * @category unsafe\n * @since 2.5.0\n */\nfunction unsafeInsertAt(i, a, as) {\n    var xs = as.slice();\n    xs.splice(i, 0, a);\n    return xs;\n}\nexports.unsafeInsertAt = unsafeInsertAt;\n/**\n * @category unsafe\n * @since 2.5.0\n */\nfunction unsafeUpdateAt(i, a, as) {\n    if (as[i] === a) {\n        return as;\n    }\n    else {\n        var xs = as.slice();\n        xs[i] = a;\n        return xs;\n    }\n}\nexports.unsafeUpdateAt = unsafeUpdateAt;\n/**\n * @category unsafe\n * @since 2.5.0\n */\nfunction unsafeDeleteAt(i, as) {\n    var xs = as.slice();\n    xs.splice(i, 1);\n    return xs;\n}\nexports.unsafeDeleteAt = unsafeDeleteAt;\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * An empty array\n *\n * @since 2.5.0\n */\nexports.empty = [];\n/**\n * Check if a predicate holds true for every array member.\n *\n * @example\n * import { every } from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const isPositive = (n: number): boolean => n > 0\n *\n * assert.deepStrictEqual(pipe([1, 2, 3], every(isPositive)), true)\n * assert.deepStrictEqual(pipe([1, 2, -3], every(isPositive)), false)\n *\n * @since 2.9.0\n */\nvar every = function (predicate) { return function (as) { return as.every(predicate); }; };\nexports.every = every;\n/**\n * Check if a predicate holds true for any array member.\n *\n * @example\n * import { some } from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const isPositive = (n: number): boolean => n > 0\n *\n * assert.deepStrictEqual(pipe([-1, -2, 3], some(isPositive)), true)\n * assert.deepStrictEqual(pipe([-1, -2, -3], some(isPositive)), false)\n *\n * @since 2.9.0\n */\nvar some = function (predicate) { return function (as) { return as.some(predicate); }; };\nexports.some = some;\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.9.0\n */\nexports.Do = \n/*#__PURE__*/\nexports.of({});\n/**\n * @since 2.8.0\n */\nvar bindTo = function (name) {\n    return exports.map(function_1.bindTo_(name));\n};\nexports.bindTo = bindTo;\n/**\n * @since 2.8.0\n */\nvar bind = function (name, f) {\n    return exports.chain(function (a) {\n        return function_1.pipe(f(a), exports.map(function (b) { return function_1.bind_(a, name, b); }));\n    });\n};\nexports.bind = bind;\n// -------------------------------------------------------------------------------------\n// pipeable sequence S\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.8.0\n */\nvar apS = function (name, fb) {\n    return function_1.flow(exports.map(function (a) { return function (b) { return function_1.bind_(a, name, b); }; }), exports.ap(fb));\n};\nexports.apS = apS;\n"],"mappings":"AAAA,YAAY;;AACZ,IAAIA,eAAe,GAAI,IAAI,IAAI,IAAI,CAACA,eAAe,KAAMC,MAAM,CAACC,MAAM,GAAI,UAASC,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAEC,EAAE,EAAE;EAC5F,IAAIA,EAAE,KAAKC,SAAS,EAAED,EAAE,GAAGD,CAAC;EAC5BJ,MAAM,CAACO,cAAc,CAACL,CAAC,EAAEG,EAAE,EAAE;IAAEG,UAAU,EAAE,IAAI;IAAEC,GAAG,EAAE,YAAW;MAAE,OAAON,CAAC,CAACC,CAAC,CAAC;IAAE;EAAE,CAAC,CAAC;AACxF,CAAC,GAAK,UAASF,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAEC,EAAE,EAAE;EACxB,IAAIA,EAAE,KAAKC,SAAS,EAAED,EAAE,GAAGD,CAAC;EAC5BF,CAAC,CAACG,EAAE,CAAC,GAAGF,CAAC,CAACC,CAAC,CAAC;AAChB,CAAE,CAAC;AACH,IAAIM,kBAAkB,GAAI,IAAI,IAAI,IAAI,CAACA,kBAAkB,KAAMV,MAAM,CAACC,MAAM,GAAI,UAASC,CAAC,EAAES,CAAC,EAAE;EAC3FX,MAAM,CAACO,cAAc,CAACL,CAAC,EAAE,SAAS,EAAE;IAAEM,UAAU,EAAE,IAAI;IAAEI,KAAK,EAAED;EAAE,CAAC,CAAC;AACvE,CAAC,GAAI,UAAST,CAAC,EAAES,CAAC,EAAE;EAChBT,CAAC,CAAC,SAAS,CAAC,GAAGS,CAAC;AACpB,CAAC,CAAC;AACF,IAAIE,YAAY,GAAI,IAAI,IAAI,IAAI,CAACA,YAAY,IAAK,UAAUC,GAAG,EAAE;EAC7D,IAAIA,GAAG,IAAIA,GAAG,CAACC,UAAU,EAAE,OAAOD,GAAG;EACrC,IAAIE,MAAM,GAAG,CAAC,CAAC;EACf,IAAIF,GAAG,IAAI,IAAI,EAAE,KAAK,IAAIV,CAAC,IAAIU,GAAG,EAAE,IAAIV,CAAC,KAAK,SAAS,IAAIJ,MAAM,CAACiB,SAAS,CAACC,cAAc,CAACC,IAAI,CAACL,GAAG,EAAEV,CAAC,CAAC,EAAEL,eAAe,CAACiB,MAAM,EAAEF,GAAG,EAAEV,CAAC,CAAC;EACxIM,kBAAkB,CAACM,MAAM,EAAEF,GAAG,CAAC;EAC/B,OAAOE,MAAM;AACjB,CAAC;AACDhB,MAAM,CAACO,cAAc,CAACa,OAAO,EAAE,YAAY,EAAE;EAAER,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DQ,OAAO,CAACC,WAAW,GAAGD,OAAO,CAACE,YAAY,GAAGF,OAAO,CAACG,KAAK,GAAGH,OAAO,CAACI,GAAG,GAAGJ,OAAO,CAACK,OAAO,GAAGL,OAAO,CAACM,IAAI,GAAGN,OAAO,CAACO,KAAK,GAAGP,OAAO,CAACQ,MAAM,GAAGR,OAAO,CAACS,OAAO,GAAGT,OAAO,CAACU,QAAQ,GAAGV,OAAO,CAACW,QAAQ,GAAGX,OAAO,CAACY,QAAQ,GAAGZ,OAAO,CAACa,QAAQ,GAAGb,OAAO,CAACc,aAAa,GAAGd,OAAO,CAACe,WAAW,GAAGf,OAAO,CAACgB,QAAQ,GAAGhB,OAAO,CAACiB,YAAY,GAAGjB,OAAO,CAACkB,SAAS,GAAGlB,OAAO,CAACmB,SAAS,GAAGnB,OAAO,CAACoB,aAAa,GAAGpB,OAAO,CAACqB,SAAS,GAAGrB,OAAO,CAACsB,QAAQ,GAAGtB,OAAO,CAACuB,QAAQ,GAAGvB,OAAO,CAACwB,aAAa,GAAGxB,OAAO,CAACyB,SAAS,GAAGzB,OAAO,CAAC0B,QAAQ,GAAG1B,OAAO,CAAC2B,IAAI,GAAG3B,OAAO,CAAC4B,IAAI,GAAG5B,OAAO,CAAC6B,IAAI,GAAG7B,OAAO,CAAC8B,IAAI,GAAG9B,OAAO,CAAC+B,IAAI,GAAG/B,OAAO,CAACgC,IAAI,GAAGhC,OAAO,CAACiC,MAAM,GAAGjC,OAAO,CAACkC,YAAY,GAAGlC,OAAO,CAACmC,UAAU,GAAGnC,OAAO,CAACoC,OAAO,GAAGpC,OAAO,CAACqC,SAAS,GAAGrC,OAAO,CAACsC,QAAQ,GAAGtC,OAAO,CAACuC,SAAS,GAAGvC,OAAO,CAACwC,QAAQ,GAAGxC,OAAO,CAACyC,OAAO,GAAGzC,OAAO,CAAC0C,SAAS,GAAG1C,OAAO,CAAC2C,KAAK,GAAG3C,OAAO,CAAC4C,MAAM,GAAG5C,OAAO,CAAC6C,MAAM,GAAG7C,OAAO,CAAC8C,KAAK,GAAG9C,OAAO,CAAC+C,SAAS,GAAG/C,OAAO,CAACgD,OAAO,GAAGhD,OAAO,CAACiD,OAAO,GAAGjD,OAAO,CAACkD,SAAS,GAAG,KAAK,CAAC;AAC76BlD,OAAO,CAACmD,gBAAgB,GAAGnD,OAAO,CAACoD,OAAO,GAAGpD,OAAO,CAACqD,GAAG,GAAGrD,OAAO,CAACsD,MAAM,GAAGtD,OAAO,CAACuD,IAAI,GAAGvD,OAAO,CAACwD,MAAM,GAAGxD,OAAO,CAACyD,iBAAiB,GAAGzD,OAAO,CAAC0D,QAAQ,GAAG1D,OAAO,CAAC2D,QAAQ,GAAG3D,OAAO,CAAC4D,oBAAoB,GAAG5D,OAAO,CAAC6D,WAAW,GAAG7D,OAAO,CAAC8D,eAAe,GAAG9D,OAAO,CAAC+D,OAAO,GAAG/D,OAAO,CAACgE,MAAM,GAAGhE,OAAO,CAACiE,gBAAgB,GAAGjE,OAAO,CAACkE,SAAS,GAAGlE,OAAO,CAACmE,MAAM,GAAGnE,OAAO,CAACoE,eAAe,GAAGpE,OAAO,CAACqE,qBAAqB,GAAGrE,OAAO,CAACsE,YAAY,GAAGtE,OAAO,CAACuE,kBAAkB,GAAGvE,OAAO,CAACwE,SAAS,GAAGxE,OAAO,CAACyE,OAAO,GAAGzE,OAAO,CAAC0E,SAAS,GAAG1E,OAAO,CAAC2E,kBAAkB,GAAG3E,OAAO,CAAC4E,MAAM,GAAG5E,OAAO,CAAC6E,QAAQ,GAAG7E,OAAO,CAAC8E,YAAY,GAAG9E,OAAO,CAAC+E,GAAG,GAAG/E,OAAO,CAACgF,UAAU,GAAGhF,OAAO,CAACiF,cAAc,GAAGjF,OAAO,CAACkF,KAAK,GAAGlF,OAAO,CAACmF,QAAQ,GAAGnF,OAAO,CAACoF,OAAO,GAAGpF,OAAO,CAACqF,EAAE,GAAGrF,OAAO,CAACsF,GAAG,GAAGtF,OAAO,CAACuF,IAAI,GAAGvF,OAAO,CAACwF,IAAI,GAAGxF,OAAO,CAACyF,EAAE,GAAGzF,OAAO,CAAC0F,UAAU,GAAG1F,OAAO,CAAC2F,YAAY,GAAG3F,OAAO,CAAC4F,KAAK,GAAG5F,OAAO,CAAC6F,aAAa,GAAG7F,OAAO,CAAC8F,QAAQ,GAAG9F,OAAO,CAAC+F,OAAO,GAAG/F,OAAO,CAACgG,IAAI,GAAGhG,OAAO,CAACiG,MAAM,GAAGjG,OAAO,CAACkG,IAAI,GAAGlG,OAAO,CAACmG,IAAI,GAAGnG,OAAO,CAACoG,MAAM,GAAG,KAAK,CAAC;AACr+BpG,OAAO,CAACqG,GAAG,GAAGrG,OAAO,CAACsG,IAAI,GAAGtG,OAAO,CAACuG,MAAM,GAAGvG,OAAO,CAACwG,EAAE,GAAGxG,OAAO,CAACyG,IAAI,GAAGzG,OAAO,CAAC0G,KAAK,GAAG1G,OAAO,CAAC2G,KAAK,GAAG3G,OAAO,CAAC4G,cAAc,GAAG5G,OAAO,CAAC6G,cAAc,GAAG7G,OAAO,CAAC8G,cAAc,GAAG9G,OAAO,CAAC+G,aAAa,GAAG/G,OAAO,CAACgH,UAAU,GAAGhH,OAAO,CAACiH,oBAAoB,GAAGjH,OAAO,CAACkH,WAAW,GAAGlH,OAAO,CAACmH,iBAAiB,GAAGnH,OAAO,CAACoH,QAAQ,GAAGpH,OAAO,CAACqH,mBAAmB,GAAGrH,OAAO,CAACsH,UAAU,GAAGtH,OAAO,CAACuH,WAAW,GAAGvH,OAAO,CAACwH,MAAM,GAAGxH,OAAO,CAACyH,WAAW,GAAGzH,OAAO,CAAC0H,GAAG,GAAG1H,OAAO,CAAC2H,UAAU,GAAG3H,OAAO,CAAC4H,KAAK,GAAG5H,OAAO,CAAC6H,WAAW,GAAG,KAAK,CAAC;AACrgB,IAAIC,UAAU,GAAGC,OAAO,CAAC,YAAY,CAAC;AACtC,IAAIC,CAAC,GAAGvI,YAAY,CAACsI,OAAO,CAAC,UAAU,CAAC,CAAC;AACzC,IAAIE,KAAK,GAAGF,OAAO,CAAC,OAAO,CAAC;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS7E,SAAS,CAACgF,EAAE,EAAE;EACnB,IAAIC,CAAC,GAAGD,EAAE,CAACE,MAAM;EACjB,IAAID,CAAC,KAAK,CAAC,EAAE;IACT,OAAOnI,OAAO,CAAC2G,KAAK;EACxB;EACA,IAAI0B,GAAG,GAAGC,KAAK,CAACH,CAAC,CAAC;EAClB,KAAK,IAAII,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,CAAC,EAAEI,CAAC,EAAE,EAAE;IACxBF,GAAG,CAACE,CAAC,CAAC,GAAGL,EAAE,CAACK,CAAC,CAAC;EAClB;EACA,OAAOF,GAAG;AACd;AACArI,OAAO,CAACkD,SAAS,GAAGA,SAAS;AAC7B;AACA;AACA;AACA;AACA;AACA,SAASD,OAAO,CAACoF,GAAG,EAAE;EAClB,IAAIF,CAAC,GAAGE,GAAG,CAACD,MAAM;EAClB,IAAIF,EAAE,GAAGI,KAAK,CAACH,CAAC,CAAC;EACjB,KAAK,IAAII,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,CAAC,EAAEI,CAAC,EAAE,EAAE;IACxBL,EAAE,CAACK,CAAC,CAAC,GAAGF,GAAG,CAACE,CAAC,CAAC;EAClB;EACA,OAAOL,EAAE;AACb;AACAlI,OAAO,CAACiD,OAAO,GAAGA,OAAO;AACzB;AACA;AACA;AACA;AACA,SAASD,OAAO,CAACwF,CAAC,EAAE;EAChB,OAAO;IACHC,IAAI,EAAE,UAAUP,EAAE,EAAE;MAAE,OAAO,GAAG,GAAGA,EAAE,CAACnD,GAAG,CAACyD,CAAC,CAACC,IAAI,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG;IAAE;EACxE,CAAC;AACL;AACA1I,OAAO,CAACgD,OAAO,GAAGA,OAAO;AACzB,IAAI2F,MAAM,GAAG,UAAUC,CAAC,EAAEC,CAAC,EAAE;EACzB,IAAIC,IAAI,GAAGF,CAAC,CAACR,MAAM;EACnB,IAAIU,IAAI,KAAK,CAAC,EAAE;IACZ,OAAOD,CAAC;EACZ;EACA,IAAIE,IAAI,GAAGF,CAAC,CAACT,MAAM;EACnB,IAAIW,IAAI,KAAK,CAAC,EAAE;IACZ,OAAOH,CAAC;EACZ;EACA,IAAII,CAAC,GAAGV,KAAK,CAACQ,IAAI,GAAGC,IAAI,CAAC;EAC1B,KAAK,IAAIR,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGO,IAAI,EAAEP,CAAC,EAAE,EAAE;IAC3BS,CAAC,CAACT,CAAC,CAAC,GAAGK,CAAC,CAACL,CAAC,CAAC;EACf;EACA,KAAK,IAAIA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGQ,IAAI,EAAER,CAAC,EAAE,EAAE;IAC3BS,CAAC,CAACT,CAAC,GAAGO,IAAI,CAAC,GAAGD,CAAC,CAACN,CAAC,CAAC;EACtB;EACA,OAAOS,CAAC;AACZ,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASjG,SAAS,GAAG;EACjB,OAAO;IACH4F,MAAM,EAAEA,MAAM;IACdhC,KAAK,EAAE3G,OAAO,CAAC2G;EACnB,CAAC;AACL;AACA3G,OAAO,CAAC+C,SAAS,GAAGA,SAAS;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASD,KAAK,CAACmG,CAAC,EAAE;EACd,OAAO;IACHC,MAAM,EAAE,UAAUC,EAAE,EAAEC,EAAE,EAAE;MAAE,OAAOD,EAAE,KAAKC,EAAE,IAAKD,EAAE,CAACf,MAAM,KAAKgB,EAAE,CAAChB,MAAM,IAAIe,EAAE,CAACzC,KAAK,CAAC,UAAUkC,CAAC,EAAEL,CAAC,EAAE;QAAE,OAAOU,CAAC,CAACC,MAAM,CAACN,CAAC,EAAEQ,EAAE,CAACb,CAAC,CAAC,CAAC;MAAE,CAAC,CAAE;IAAE;EAC3I,CAAC;AACL;AACAvI,OAAO,CAAC8C,KAAK,GAAGA,KAAK;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASD,MAAM,CAACmF,CAAC,EAAE;EACf,OAAOC,KAAK,CAACoB,WAAW,CAAC,UAAUC,CAAC,EAAEC,CAAC,EAAE;IACrC,IAAIC,IAAI,GAAGF,CAAC,CAAClB,MAAM;IACnB,IAAIqB,IAAI,GAAGF,CAAC,CAACnB,MAAM;IACnB,IAAIsB,GAAG,GAAGC,IAAI,CAACC,GAAG,CAACJ,IAAI,EAAEC,IAAI,CAAC;IAC9B,KAAK,IAAIlB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGmB,GAAG,EAAEnB,CAAC,EAAE,EAAE;MAC1B,IAAIsB,QAAQ,GAAG7B,CAAC,CAAC8B,OAAO,CAACR,CAAC,CAACf,CAAC,CAAC,EAAEgB,CAAC,CAAChB,CAAC,CAAC,CAAC;MACpC,IAAIsB,QAAQ,KAAK,CAAC,EAAE;QAChB,OAAOA,QAAQ;MACnB;IACJ;IACA,OAAO5B,KAAK,CAAC8B,SAAS,CAACD,OAAO,CAACN,IAAI,EAAEC,IAAI,CAAC;EAC9C,CAAC,CAAC;AACN;AACAzJ,OAAO,CAAC6C,MAAM,GAAGA,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASD,MAAM,CAACoH,CAAC,EAAEC,CAAC,EAAE;EAClB;EACA,IAAIjB,CAAC,GAAG,EAAE;EACV,KAAK,IAAIT,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGyB,CAAC,EAAEzB,CAAC,EAAE,EAAE;IACxBS,CAAC,CAACkB,IAAI,CAACD,CAAC,CAAC1B,CAAC,CAAC,CAAC;EAChB;EACA,OAAOS,CAAC;AACZ;AACAhJ,OAAO,CAAC4C,MAAM,GAAGA,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASD,KAAK,CAACwH,KAAK,EAAEC,GAAG,EAAE;EACvB,OAAOxH,MAAM,CAACwH,GAAG,GAAGD,KAAK,GAAG,CAAC,EAAE,UAAU5B,CAAC,EAAE;IAAE,OAAO4B,KAAK,GAAG5B,CAAC;EAAE,CAAC,CAAC;AACtE;AACAvI,OAAO,CAAC2C,KAAK,GAAGA,KAAK;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASD,SAAS,CAACsH,CAAC,EAAEV,CAAC,EAAE;EACrB,OAAO1G,MAAM,CAACoH,CAAC,EAAE,YAAY;IAAE,OAAOV,CAAC;EAAE,CAAC,CAAC;AAC/C;AACAtJ,OAAO,CAAC0C,SAAS,GAAGA,SAAS;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASD,OAAO,CAAC4H,GAAG,EAAE;EAClB,IAAIC,IAAI,GAAG,CAAC;EACZ,IAAIZ,GAAG,GAAGW,GAAG,CAACjC,MAAM;EACpB,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGmB,GAAG,EAAEnB,CAAC,EAAE,EAAE;IAC1B+B,IAAI,IAAID,GAAG,CAAC9B,CAAC,CAAC,CAACH,MAAM;EACzB;EACA,IAAIY,CAAC,GAAGV,KAAK,CAACgC,IAAI,CAAC;EACnB,IAAIH,KAAK,GAAG,CAAC;EACb,KAAK,IAAI5B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGmB,GAAG,EAAEnB,CAAC,EAAE,EAAE;IAC1B,IAAIgC,GAAG,GAAGF,GAAG,CAAC9B,CAAC,CAAC;IAChB,IAAIJ,CAAC,GAAGoC,GAAG,CAACnC,MAAM;IAClB,KAAK,IAAIoC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGrC,CAAC,EAAEqC,CAAC,EAAE,EAAE;MACxBxB,CAAC,CAACwB,CAAC,GAAGL,KAAK,CAAC,GAAGI,GAAG,CAACC,CAAC,CAAC;IACzB;IACAL,KAAK,IAAIhC,CAAC;EACd;EACA,OAAOa,CAAC;AACZ;AACAhJ,OAAO,CAACyC,OAAO,GAAGA,OAAO;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASD,QAAQ,CAACiI,OAAO,EAAEC,MAAM,EAAE;EAC/B,OAAO,UAAUxC,EAAE,EAAE;IAAE,OAAQ9F,OAAO,CAAC8F,EAAE,CAAC,GAAGuC,OAAO,EAAE,GAAGC,MAAM,CAACxC,EAAE,CAAC,CAAC,CAAC,EAAEA,EAAE,CAACyC,KAAK,CAAC,CAAC,CAAC,CAAC;EAAG,CAAC;AAC3F;AACA3K,OAAO,CAACwC,QAAQ,GAAGA,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,SAASD,SAAS,CAACkI,OAAO,EAAEC,MAAM,EAAE;EAChC,OAAO,UAAUxC,EAAE,EAAE;IAAE,OAAQ9F,OAAO,CAAC8F,EAAE,CAAC,GAAGuC,OAAO,EAAE,GAAGC,MAAM,CAACxC,EAAE,CAACyC,KAAK,CAAC,CAAC,EAAEzC,EAAE,CAACE,MAAM,GAAG,CAAC,CAAC,EAAEF,EAAE,CAACA,EAAE,CAACE,MAAM,GAAG,CAAC,CAAC,CAAC;EAAG,CAAC;AACtH;AACApI,OAAO,CAACuC,SAAS,GAAGA,SAAS;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASD,QAAQ,CAACiH,CAAC,EAAEU,CAAC,EAAE;EACpB,OAAO,UAAU/B,EAAE,EAAE;IACjB,IAAIC,CAAC,GAAGD,EAAE,CAACE,MAAM;IACjB;IACA,IAAIY,CAAC,GAAG,IAAIV,KAAK,CAACH,CAAC,GAAG,CAAC,CAAC;IACxBa,CAAC,CAAC,CAAC,CAAC,GAAGO,CAAC;IACR,KAAK,IAAIhB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,CAAC,EAAEI,CAAC,EAAE,EAAE;MACxBS,CAAC,CAACT,CAAC,GAAG,CAAC,CAAC,GAAG0B,CAAC,CAACjB,CAAC,CAACT,CAAC,CAAC,EAAEL,EAAE,CAACK,CAAC,CAAC,CAAC;IAC7B;IACA,OAAOS,CAAC;EACZ,CAAC;AACL;AACAhJ,OAAO,CAACsC,QAAQ,GAAGA,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASD,SAAS,CAACkH,CAAC,EAAEU,CAAC,EAAE;EACrB,OAAO,UAAU/B,EAAE,EAAE;IACjB,IAAIC,CAAC,GAAGD,EAAE,CAACE,MAAM;IACjB;IACA,IAAIY,CAAC,GAAG,IAAIV,KAAK,CAACH,CAAC,GAAG,CAAC,CAAC;IACxBa,CAAC,CAACb,CAAC,CAAC,GAAGoB,CAAC;IACR,KAAK,IAAIhB,CAAC,GAAGJ,CAAC,GAAG,CAAC,EAAEI,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;MAC7BS,CAAC,CAACT,CAAC,CAAC,GAAG0B,CAAC,CAAC/B,EAAE,CAACK,CAAC,CAAC,EAAES,CAAC,CAACT,CAAC,GAAG,CAAC,CAAC,CAAC;IAC7B;IACA,OAAOS,CAAC;EACZ,CAAC;AACL;AACAhJ,OAAO,CAACqC,SAAS,GAAGA,SAAS;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASD,OAAO,CAAC8F,EAAE,EAAE;EACjB,OAAOA,EAAE,CAACE,MAAM,KAAK,CAAC;AAC1B;AACApI,OAAO,CAACoC,OAAO,GAAGA,OAAO;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,SAASD,UAAU,CAAC+F,EAAE,EAAE;EACpB,OAAOA,EAAE,CAACE,MAAM,GAAG,CAAC;AACxB;AACApI,OAAO,CAACmC,UAAU,GAAGA,UAAU;AAC/B;AACA;AACA;AACA;AACA;AACA,SAASD,YAAY,CAACqG,CAAC,EAAEL,EAAE,EAAE;EACzB,OAAOK,CAAC,GAAG,CAAC,IAAIA,CAAC,IAAIL,EAAE,CAACE,MAAM;AAClC;AACApI,OAAO,CAACkC,YAAY,GAAGA,YAAY;AACnC,SAASD,MAAM,CAACsG,CAAC,EAAEL,EAAE,EAAE;EACnB,OAAOA,EAAE,KAAKhJ,SAAS,GAAG,UAAUgJ,EAAE,EAAE;IAAE,OAAOjG,MAAM,CAACsG,CAAC,EAAEL,EAAE,CAAC;EAAE,CAAC,GAAGhG,YAAY,CAACqG,CAAC,EAAEL,EAAE,CAAC,GAAGF,CAAC,CAAC4C,IAAI,GAAG5C,CAAC,CAACvB,IAAI,CAACyB,EAAE,CAACK,CAAC,CAAC,CAAC;AACpH;AACAvI,OAAO,CAACiC,MAAM,GAAGA,MAAM;AACvB,SAASD,IAAI,CAACF,IAAI,EAAEF,IAAI,EAAE;EACtB,IAAIA,IAAI,KAAK1C,SAAS,EAAE;IACpB,OAAO,UAAU0C,IAAI,EAAE;MAAE,OAAOI,IAAI,CAACF,IAAI,EAAEF,IAAI,CAAC;IAAE,CAAC;EACvD;EACA,IAAI8H,GAAG,GAAG9H,IAAI,CAACwG,MAAM;EACrB,IAAIY,CAAC,GAAGV,KAAK,CAACoB,GAAG,GAAG,CAAC,CAAC;EACtB,KAAK,IAAInB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGmB,GAAG,EAAEnB,CAAC,EAAE,EAAE;IAC1BS,CAAC,CAACT,CAAC,GAAG,CAAC,CAAC,GAAG3G,IAAI,CAAC2G,CAAC,CAAC;EACtB;EACAS,CAAC,CAAC,CAAC,CAAC,GAAGlH,IAAI;EACX,OAAOkH,CAAC;AACZ;AACAhJ,OAAO,CAACgC,IAAI,GAAGA,IAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASD,IAAI,CAACJ,IAAI,EAAEyI,GAAG,EAAE;EACrB,IAAIV,GAAG,GAAG/H,IAAI,CAACyG,MAAM;EACrB,IAAIY,CAAC,GAAGV,KAAK,CAACoB,GAAG,GAAG,CAAC,CAAC;EACtB,KAAK,IAAInB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGmB,GAAG,EAAEnB,CAAC,EAAE,EAAE;IAC1BS,CAAC,CAACT,CAAC,CAAC,GAAG5G,IAAI,CAAC4G,CAAC,CAAC;EAClB;EACAS,CAAC,CAACU,GAAG,CAAC,GAAGU,GAAG;EACZ,OAAOpB,CAAC;AACZ;AACAhJ,OAAO,CAAC+B,IAAI,GAAGA,IAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASD,IAAI,CAACoG,EAAE,EAAE;EACd,OAAO9F,OAAO,CAAC8F,EAAE,CAAC,GAAGF,CAAC,CAAC4C,IAAI,GAAG5C,CAAC,CAACvB,IAAI,CAACyB,EAAE,CAAC,CAAC,CAAC,CAAC;AAC/C;AACAlI,OAAO,CAAC8B,IAAI,GAAGA,IAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASD,IAAI,CAACqG,EAAE,EAAE;EACd,OAAOjG,MAAM,CAACiG,EAAE,CAACE,MAAM,GAAG,CAAC,EAAEF,EAAE,CAAC;AACpC;AACAlI,OAAO,CAAC6B,IAAI,GAAGA,IAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASD,IAAI,CAACsG,EAAE,EAAE;EACd,OAAO9F,OAAO,CAAC8F,EAAE,CAAC,GAAGF,CAAC,CAAC4C,IAAI,GAAG5C,CAAC,CAACvB,IAAI,CAACyB,EAAE,CAACyC,KAAK,CAAC,CAAC,CAAC,CAAC;AACrD;AACA3K,OAAO,CAAC4B,IAAI,GAAGA,IAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASD,IAAI,CAACuG,EAAE,EAAE;EACd,IAAIwB,GAAG,GAAGxB,EAAE,CAACE,MAAM;EACnB,OAAOsB,GAAG,KAAK,CAAC,GAAG1B,CAAC,CAAC4C,IAAI,GAAG5C,CAAC,CAACvB,IAAI,CAACyB,EAAE,CAACyC,KAAK,CAAC,CAAC,EAAEjB,GAAG,GAAG,CAAC,CAAC,CAAC;AAC5D;AACA1J,OAAO,CAAC2B,IAAI,GAAGA,IAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASD,QAAQ,CAACsI,CAAC,EAAE;EACjB,OAAO,UAAU9B,EAAE,EAAE;IAAE,OAAOA,EAAE,CAACyC,KAAK,CAAC,CAAC,EAAEX,CAAC,CAAC;EAAE,CAAC;AACnD;AACAhK,OAAO,CAAC0B,QAAQ,GAAGA,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASD,SAAS,CAACuI,CAAC,EAAE;EAClB,OAAO,UAAU9B,EAAE,EAAE;IAAE,OAAQ8B,CAAC,KAAK,CAAC,GAAGhK,OAAO,CAAC2G,KAAK,GAAGuB,EAAE,CAACyC,KAAK,CAAC,CAACX,CAAC,CAAC;EAAG,CAAC;AAC7E;AACAhK,OAAO,CAACyB,SAAS,GAAGA,SAAS;AAC7B,SAASD,aAAa,CAACqJ,SAAS,EAAE;EAC9B,OAAO,UAAU3C,EAAE,EAAE;IACjB,IAAIK,CAAC,GAAGuC,gBAAgB,CAAC5C,EAAE,EAAE2C,SAAS,CAAC;IACvC,IAAIlJ,IAAI,GAAG2G,KAAK,CAACC,CAAC,CAAC;IACnB,KAAK,IAAIiC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGjC,CAAC,EAAEiC,CAAC,EAAE,EAAE;MACxB7I,IAAI,CAAC6I,CAAC,CAAC,GAAGtC,EAAE,CAACsC,CAAC,CAAC;IACnB;IACA,OAAO7I,IAAI;EACf,CAAC;AACL;AACA3B,OAAO,CAACwB,aAAa,GAAGA,aAAa;AACrC,IAAIsJ,gBAAgB,GAAG,UAAU5C,EAAE,EAAE2C,SAAS,EAAE;EAC5C,IAAI1C,CAAC,GAAGD,EAAE,CAACE,MAAM;EACjB,IAAIG,CAAC,GAAG,CAAC;EACT,OAAOA,CAAC,GAAGJ,CAAC,EAAEI,CAAC,EAAE,EAAE;IACf,IAAI,CAACsC,SAAS,CAAC3C,EAAE,CAACK,CAAC,CAAC,CAAC,EAAE;MACnB;IACJ;EACJ;EACA,OAAOA,CAAC;AACZ,CAAC;AACD,SAAShH,QAAQ,CAACsJ,SAAS,EAAE;EACzB,OAAO,UAAU3C,EAAE,EAAE;IACjB,IAAIK,CAAC,GAAGuC,gBAAgB,CAAC5C,EAAE,EAAE2C,SAAS,CAAC;IACvC,IAAIlJ,IAAI,GAAG2G,KAAK,CAACC,CAAC,CAAC;IACnB,KAAK,IAAIiC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGjC,CAAC,EAAEiC,CAAC,EAAE,EAAE;MACxB7I,IAAI,CAAC6I,CAAC,CAAC,GAAGtC,EAAE,CAACsC,CAAC,CAAC;IACnB;IACA,IAAIrC,CAAC,GAAGD,EAAE,CAACE,MAAM;IACjB,IAAI2C,IAAI,GAAGzC,KAAK,CAACH,CAAC,GAAGI,CAAC,CAAC;IACvB,KAAK,IAAIiC,CAAC,GAAGjC,CAAC,EAAEiC,CAAC,GAAGrC,CAAC,EAAEqC,CAAC,EAAE,EAAE;MACxBO,IAAI,CAACP,CAAC,GAAGjC,CAAC,CAAC,GAAGL,EAAE,CAACsC,CAAC,CAAC;IACvB;IACA,OAAO;MAAE7I,IAAI,EAAEA,IAAI;MAAEoJ,IAAI,EAAEA;IAAK,CAAC;EACrC,CAAC;AACL;AACA/K,OAAO,CAACuB,QAAQ,GAAGA,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASD,QAAQ,CAAC0I,CAAC,EAAE;EACjB,OAAO,UAAU9B,EAAE,EAAE;IAAE,OAAOA,EAAE,CAACyC,KAAK,CAACX,CAAC,EAAE9B,EAAE,CAACE,MAAM,CAAC;EAAE,CAAC;AAC3D;AACApI,OAAO,CAACsB,QAAQ,GAAGA,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASD,SAAS,CAAC2I,CAAC,EAAE;EAClB,OAAO,UAAU9B,EAAE,EAAE;IAAE,OAAOA,EAAE,CAACyC,KAAK,CAAC,CAAC,EAAEzC,EAAE,CAACE,MAAM,GAAG4B,CAAC,CAAC;EAAE,CAAC;AAC/D;AACAhK,OAAO,CAACqB,SAAS,GAAGA,SAAS;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASD,aAAa,CAACyJ,SAAS,EAAE;EAC9B,OAAO,UAAU3C,EAAE,EAAE;IACjB,IAAIK,CAAC,GAAGuC,gBAAgB,CAAC5C,EAAE,EAAE2C,SAAS,CAAC;IACvC,IAAI1C,CAAC,GAAGD,EAAE,CAACE,MAAM;IACjB,IAAI2C,IAAI,GAAGzC,KAAK,CAACH,CAAC,GAAGI,CAAC,CAAC;IACvB,KAAK,IAAIiC,CAAC,GAAGjC,CAAC,EAAEiC,CAAC,GAAGrC,CAAC,EAAEqC,CAAC,EAAE,EAAE;MACxBO,IAAI,CAACP,CAAC,GAAGjC,CAAC,CAAC,GAAGL,EAAE,CAACsC,CAAC,CAAC;IACvB;IACA,OAAOO,IAAI;EACf,CAAC;AACL;AACA/K,OAAO,CAACoB,aAAa,GAAGA,aAAa;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASD,SAAS,CAAC0J,SAAS,EAAE;EAC1B,OAAO,UAAU3C,EAAE,EAAE;IACjB,IAAIwB,GAAG,GAAGxB,EAAE,CAACE,MAAM;IACnB,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGmB,GAAG,EAAEnB,CAAC,EAAE,EAAE;MAC1B,IAAIsC,SAAS,CAAC3C,EAAE,CAACK,CAAC,CAAC,CAAC,EAAE;QAClB,OAAOP,CAAC,CAACvB,IAAI,CAAC8B,CAAC,CAAC;MACpB;IACJ;IACA,OAAOP,CAAC,CAAC4C,IAAI;EACjB,CAAC;AACL;AACA5K,OAAO,CAACmB,SAAS,GAAGA,SAAS;AAC7B,SAASD,SAAS,CAAC2J,SAAS,EAAE;EAC1B,OAAO,UAAU3C,EAAE,EAAE;IACjB,IAAIwB,GAAG,GAAGxB,EAAE,CAACE,MAAM;IACnB,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGmB,GAAG,EAAEnB,CAAC,EAAE,EAAE;MAC1B,IAAIsC,SAAS,CAAC3C,EAAE,CAACK,CAAC,CAAC,CAAC,EAAE;QAClB,OAAOP,CAAC,CAACvB,IAAI,CAACyB,EAAE,CAACK,CAAC,CAAC,CAAC;MACxB;IACJ;IACA,OAAOP,CAAC,CAAC4C,IAAI;EACjB,CAAC;AACL;AACA5K,OAAO,CAACkB,SAAS,GAAGA,SAAS;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASD,YAAY,CAACgJ,CAAC,EAAE;EACrB,OAAO,UAAU/B,EAAE,EAAE;IACjB,IAAIwB,GAAG,GAAGxB,EAAE,CAACE,MAAM;IACnB,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGmB,GAAG,EAAEnB,CAAC,EAAE,EAAE;MAC1B,IAAIhJ,CAAC,GAAG0K,CAAC,CAAC/B,EAAE,CAACK,CAAC,CAAC,CAAC;MAChB,IAAIP,CAAC,CAACgD,MAAM,CAACzL,CAAC,CAAC,EAAE;QACb,OAAOA,CAAC;MACZ;IACJ;IACA,OAAOyI,CAAC,CAAC4C,IAAI;EACjB,CAAC;AACL;AACA5K,OAAO,CAACiB,YAAY,GAAGA,YAAY;AACnC,SAASD,QAAQ,CAAC6J,SAAS,EAAE;EACzB,OAAO,UAAU3C,EAAE,EAAE;IACjB,IAAIwB,GAAG,GAAGxB,EAAE,CAACE,MAAM;IACnB,KAAK,IAAIG,CAAC,GAAGmB,GAAG,GAAG,CAAC,EAAEnB,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;MAC/B,IAAIsC,SAAS,CAAC3C,EAAE,CAACK,CAAC,CAAC,CAAC,EAAE;QAClB,OAAOP,CAAC,CAACvB,IAAI,CAACyB,EAAE,CAACK,CAAC,CAAC,CAAC;MACxB;IACJ;IACA,OAAOP,CAAC,CAAC4C,IAAI;EACjB,CAAC;AACL;AACA5K,OAAO,CAACgB,QAAQ,GAAGA,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASD,WAAW,CAACkJ,CAAC,EAAE;EACpB,OAAO,UAAU/B,EAAE,EAAE;IACjB,IAAIwB,GAAG,GAAGxB,EAAE,CAACE,MAAM;IACnB,KAAK,IAAIG,CAAC,GAAGmB,GAAG,GAAG,CAAC,EAAEnB,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;MAC/B,IAAIhJ,CAAC,GAAG0K,CAAC,CAAC/B,EAAE,CAACK,CAAC,CAAC,CAAC;MAChB,IAAIP,CAAC,CAACgD,MAAM,CAACzL,CAAC,CAAC,EAAE;QACb,OAAOA,CAAC;MACZ;IACJ;IACA,OAAOyI,CAAC,CAAC4C,IAAI;EACjB,CAAC;AACL;AACA5K,OAAO,CAACe,WAAW,GAAGA,WAAW;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASD,aAAa,CAAC+J,SAAS,EAAE;EAC9B,OAAO,UAAU3C,EAAE,EAAE;IACjB,IAAIwB,GAAG,GAAGxB,EAAE,CAACE,MAAM;IACnB,KAAK,IAAIG,CAAC,GAAGmB,GAAG,GAAG,CAAC,EAAEnB,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;MAC/B,IAAIsC,SAAS,CAAC3C,EAAE,CAACK,CAAC,CAAC,CAAC,EAAE;QAClB,OAAOP,CAAC,CAACvB,IAAI,CAAC8B,CAAC,CAAC;MACpB;IACJ;IACA,OAAOP,CAAC,CAAC4C,IAAI;EACjB,CAAC;AACL;AACA5K,OAAO,CAACc,aAAa,GAAGA,aAAa;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASD,QAAQ,CAAC0H,CAAC,EAAEe,CAAC,EAAE;EACpB,OAAO,UAAUpB,EAAE,EAAE;IAAE,OAAQK,CAAC,GAAG,CAAC,IAAIA,CAAC,GAAGL,EAAE,CAACE,MAAM,GAAGJ,CAAC,CAAC4C,IAAI,GAAG5C,CAAC,CAACvB,IAAI,CAACK,cAAc,CAACyB,CAAC,EAAEe,CAAC,EAAEpB,EAAE,CAAC,CAAC;EAAG,CAAC;AACzG;AACAlI,OAAO,CAACa,QAAQ,GAAGA,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASD,QAAQ,CAAC2H,CAAC,EAAEe,CAAC,EAAE;EACpB,OAAO,UAAUpB,EAAE,EAAE;IAAE,OAAQhG,YAAY,CAACqG,CAAC,EAAEL,EAAE,CAAC,GAAGF,CAAC,CAAC4C,IAAI,GAAG5C,CAAC,CAACvB,IAAI,CAACI,cAAc,CAAC0B,CAAC,EAAEe,CAAC,EAAEpB,EAAE,CAAC,CAAC;EAAG,CAAC;AACtG;AACAlI,OAAO,CAACY,QAAQ,GAAGA,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASD,QAAQ,CAAC4H,CAAC,EAAE;EACjB,OAAO,UAAUL,EAAE,EAAE;IAAE,OAAQhG,YAAY,CAACqG,CAAC,EAAEL,EAAE,CAAC,GAAGF,CAAC,CAAC4C,IAAI,GAAG5C,CAAC,CAACvB,IAAI,CAACG,cAAc,CAAC2B,CAAC,EAAEL,EAAE,CAAC,CAAC;EAAG,CAAC;AACnG;AACAlI,OAAO,CAACW,QAAQ,GAAGA,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASD,QAAQ,CAAC6H,CAAC,EAAE0B,CAAC,EAAE;EACpB,OAAO,UAAU/B,EAAE,EAAE;IAAE,OAAQhG,YAAY,CAACqG,CAAC,EAAEL,EAAE,CAAC,GAAGF,CAAC,CAAC4C,IAAI,GAAG5C,CAAC,CAACvB,IAAI,CAACI,cAAc,CAAC0B,CAAC,EAAE0B,CAAC,CAAC/B,EAAE,CAACK,CAAC,CAAC,CAAC,EAAEL,EAAE,CAAC,CAAC;EAAG,CAAC;AAC7G;AACAlI,OAAO,CAACU,QAAQ,GAAGA,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASD,OAAO,CAACyH,EAAE,EAAE;EACjB,IAAI9F,OAAO,CAAC8F,EAAE,CAAC,EAAE;IACb,OAAOA,EAAE;EACb;EACA,OAAOA,EAAE,CAACyC,KAAK,EAAE,CAAClK,OAAO,EAAE;AAC/B;AACAT,OAAO,CAACS,OAAO,GAAGA,OAAO;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASD,MAAM,CAAC0H,EAAE,EAAE;EAChB;EACA,IAAIc,CAAC,GAAG,EAAE;EACV,IAAIU,GAAG,GAAGxB,EAAE,CAACE,MAAM;EACnB,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGmB,GAAG,EAAEnB,CAAC,EAAE,EAAE;IAC1B,IAAIe,CAAC,GAAGpB,EAAE,CAACK,CAAC,CAAC;IACb,IAAIe,CAAC,CAAC2B,IAAI,KAAK,OAAO,EAAE;MACpBjC,CAAC,CAACkB,IAAI,CAACZ,CAAC,CAAC4B,KAAK,CAAC;IACnB;EACJ;EACA,OAAOlC,CAAC;AACZ;AACAhJ,OAAO,CAACQ,MAAM,GAAGA,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASD,KAAK,CAAC2H,EAAE,EAAE;EACf;EACA,IAAIc,CAAC,GAAG,EAAE;EACV,IAAIU,GAAG,GAAGxB,EAAE,CAACE,MAAM;EACnB,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGmB,GAAG,EAAEnB,CAAC,EAAE,EAAE;IAC1B,IAAIe,CAAC,GAAGpB,EAAE,CAACK,CAAC,CAAC;IACb,IAAIe,CAAC,CAAC2B,IAAI,KAAK,MAAM,EAAE;MACnBjC,CAAC,CAACkB,IAAI,CAACZ,CAAC,CAAC6B,IAAI,CAAC;IAClB;EACJ;EACA,OAAOnC,CAAC;AACZ;AACAhJ,OAAO,CAACO,KAAK,GAAGA,KAAK;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAID,IAAI,GAAG,UAAU0H,CAAC,EAAE;EAAE,OAAO,UAAUE,EAAE,EAAE;IAC3C,OAAOA,EAAE,CAACE,MAAM,IAAI,CAAC,GAAGF,EAAE,GAAGA,EAAE,CAACyC,KAAK,EAAE,CAACrK,IAAI,CAAC0H,CAAC,CAAC8B,OAAO,CAAC;EAC3D,CAAC;AAAE,CAAC;AACJ9J,OAAO,CAACM,IAAI,GAAGA,IAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASD,OAAO,CAAC+K,EAAE,EAAEC,EAAE,EAAEpB,CAAC,EAAE;EACxB;EACA,IAAIqB,EAAE,GAAG,EAAE;EACX,IAAI5B,GAAG,GAAGC,IAAI,CAACC,GAAG,CAACwB,EAAE,CAAChD,MAAM,EAAEiD,EAAE,CAACjD,MAAM,CAAC;EACxC,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGmB,GAAG,EAAEnB,CAAC,EAAE,EAAE;IAC1B+C,EAAE,CAAC/C,CAAC,CAAC,GAAG0B,CAAC,CAACmB,EAAE,CAAC7C,CAAC,CAAC,EAAE8C,EAAE,CAAC9C,CAAC,CAAC,CAAC;EAC3B;EACA,OAAO+C,EAAE;AACb;AACAtL,OAAO,CAACK,OAAO,GAAGA,OAAO;AACzB,SAASD,GAAG,CAAC8H,EAAE,EAAEqD,EAAE,EAAE;EACjB,IAAIA,EAAE,KAAKrM,SAAS,EAAE;IAClB,OAAO,UAAUqM,EAAE,EAAE;MAAE,OAAOnL,GAAG,CAACmL,EAAE,EAAErD,EAAE,CAAC;IAAE,CAAC;EAChD;EACA,OAAO7H,OAAO,CAAC6H,EAAE,EAAEqD,EAAE,EAAE,UAAUjC,CAAC,EAAEC,CAAC,EAAE;IAAE,OAAO,CAACD,CAAC,EAAEC,CAAC,CAAC;EAAE,CAAC,CAAC;AAC9D;AACAvJ,OAAO,CAACI,GAAG,GAAGA,GAAG;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASD,KAAK,CAAC+H,EAAE,EAAE;EACf;EACA,IAAIkD,EAAE,GAAG,EAAE;EACX;EACA,IAAIC,EAAE,GAAG,EAAE;EACX,KAAK,IAAI9C,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,EAAE,CAACE,MAAM,EAAEG,CAAC,EAAE,EAAE;IAChC6C,EAAE,CAAC7C,CAAC,CAAC,GAAGL,EAAE,CAACK,CAAC,CAAC,CAAC,CAAC,CAAC;IAChB8C,EAAE,CAAC9C,CAAC,CAAC,GAAGL,EAAE,CAACK,CAAC,CAAC,CAAC,CAAC,CAAC;EACpB;EACA,OAAO,CAAC6C,EAAE,EAAEC,EAAE,CAAC;AACnB;AACArL,OAAO,CAACG,KAAK,GAAGA,KAAK;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAID,YAAY,GAAG,UAAUsL,CAAC,EAAE;EAAE,OAAO,UAAUrC,EAAE,EAAE;IACnD;IACA,IAAIC,EAAE,GAAG,EAAE;IACX,KAAK,IAAIqC,EAAE,GAAG,CAAC,EAAEC,IAAI,GAAGvC,EAAE,EAAEsC,EAAE,GAAGC,IAAI,CAACtD,MAAM,EAAEqD,EAAE,EAAE,EAAE;MAChD,IAAI7C,CAAC,GAAG8C,IAAI,CAACD,EAAE,CAAC;MAChBrC,EAAE,CAACc,IAAI,CAACsB,CAAC,EAAE5C,CAAC,CAAC;IACjB;IACA,OAAOQ,EAAE;EACb,CAAC;AAAE,CAAC;AACJpJ,OAAO,CAACE,YAAY,GAAGA,YAAY;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASD,WAAW,CAACuL,CAAC,EAAE;EACpB,OAAO,UAAUtD,EAAE,EAAE;IACjB,IAAIE,MAAM,GAAGF,EAAE,CAACE,MAAM;IACtB,IAAIA,MAAM,KAAK,CAAC,EAAE;MACd,OAAOF,EAAE;IACb;IACA,OAAOlG,IAAI,CAACkG,EAAE,CAAC,CAAC,CAAC,EAAElI,OAAO,CAACE,YAAY,CAACsL,CAAC,CAAC,CAACtD,EAAE,CAACyC,KAAK,CAAC,CAAC,EAAEzC,EAAE,CAACE,MAAM,CAAC,CAAC,CAAC;EACvE,CAAC;AACL;AACApI,OAAO,CAACC,WAAW,GAAGA,WAAW;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASmG,MAAM,CAAC4D,CAAC,EAAE;EACf,OAAO,UAAU9B,EAAE,EAAE;IACjB,IAAIwB,GAAG,GAAGxB,EAAE,CAACE,MAAM;IACnB,IAAI4B,CAAC,KAAK,CAAC,IAAIN,GAAG,IAAI,CAAC,IAAIA,GAAG,KAAKC,IAAI,CAACgC,GAAG,CAAC3B,CAAC,CAAC,EAAE;MAC5C,OAAO9B,EAAE;IACb,CAAC,MACI,IAAI8B,CAAC,GAAG,CAAC,EAAE;MACZ,OAAO5D,MAAM,CAACsD,GAAG,GAAGM,CAAC,CAAC,CAAC9B,EAAE,CAAC;IAC9B,CAAC,MACI;MACD,OAAOA,EAAE,CAACyC,KAAK,CAAC,CAACX,CAAC,CAAC,CAACrB,MAAM,CAACT,EAAE,CAACyC,KAAK,CAAC,CAAC,EAAEjB,GAAG,GAAGM,CAAC,CAAC,CAAC;IACpD;EACJ,CAAC;AACL;AACAhK,OAAO,CAACoG,MAAM,GAAGA,MAAM;AACvB,SAASD,IAAI,CAAC8C,CAAC,EAAE;EACb,OAAO,UAAUK,CAAC,EAAEpB,EAAE,EAAE;IACpB,IAAIA,EAAE,KAAKhJ,SAAS,EAAE;MAClB,IAAI0M,OAAO,GAAGzF,IAAI,CAAC8C,CAAC,CAAC;MACrB,OAAO,UAAUf,EAAE,EAAE;QAAE,OAAO0D,OAAO,CAACtC,CAAC,EAAEpB,EAAE,CAAC;MAAE,CAAC;IACnD;IACA,IAAI2C,SAAS,GAAG,UAAUgB,OAAO,EAAE;MAAE,OAAO5C,CAAC,CAACC,MAAM,CAAC2C,OAAO,EAAEvC,CAAC,CAAC;IAAE,CAAC;IACnE,IAAIf,CAAC,GAAG,CAAC;IACT,IAAImB,GAAG,GAAGxB,EAAE,CAACE,MAAM;IACnB,OAAOG,CAAC,GAAGmB,GAAG,EAAEnB,CAAC,EAAE,EAAE;MACjB,IAAIsC,SAAS,CAAC3C,EAAE,CAACK,CAAC,CAAC,CAAC,EAAE;QAClB,OAAO,IAAI;MACf;IACJ;IACA,OAAO,KAAK;EAChB,CAAC;AACL;AACAvI,OAAO,CAACmG,IAAI,GAAGA,IAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASD,IAAI,CAAC+C,CAAC,EAAE;EACb,IAAI6C,KAAK,GAAG3F,IAAI,CAAC8C,CAAC,CAAC;EACnB,OAAO,UAAUf,EAAE,EAAE;IACjB,IAAIwB,GAAG,GAAGxB,EAAE,CAACE,MAAM;IACnB,IAAIsB,GAAG,IAAI,CAAC,EAAE;MACV,OAAOxB,EAAE;IACb;IACA;IACA,IAAIc,CAAC,GAAG,EAAE;IACV,IAAIT,CAAC,GAAG,CAAC;IACT,OAAOA,CAAC,GAAGmB,GAAG,EAAEnB,CAAC,EAAE,EAAE;MACjB,IAAIe,CAAC,GAAGpB,EAAE,CAACK,CAAC,CAAC;MACb,IAAI,CAACuD,KAAK,CAACxC,CAAC,EAAEN,CAAC,CAAC,EAAE;QACdA,CAAC,CAACkB,IAAI,CAACZ,CAAC,CAAC;MACb;IACJ;IACA,OAAOI,GAAG,KAAKV,CAAC,CAACZ,MAAM,GAAGF,EAAE,GAAGc,CAAC;EACpC,CAAC;AACL;AACAhJ,OAAO,CAACkG,IAAI,GAAGA,IAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASD,MAAM,CAAC8F,IAAI,EAAE;EAClB,IAAIC,CAAC,GAAG/D,KAAK,CAAClF,SAAS,EAAE;EACzB,OAAO/C,OAAO,CAACM,IAAI,CAACyL,IAAI,CAAC/H,MAAM,CAACgI,CAAC,CAACrD,MAAM,EAAEqD,CAAC,CAACrF,KAAK,CAAC,CAAC;AACvD;AACA3G,OAAO,CAACiG,MAAM,GAAGA,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAID,IAAI,GAAG,UAAUiE,CAAC,EAAE;EAAE,OAAO,UAAU/B,EAAE,EAAE;IAC3C;IACA,IAAItI,MAAM,GAAG,EAAE;IACf,IAAIqM,EAAE,GAAG/D,EAAE;IACX,OAAO/F,UAAU,CAAC8J,EAAE,CAAC,EAAE;MACnB,IAAIC,EAAE,GAAGjC,CAAC,CAACgC,EAAE,CAAC;QAAE1C,CAAC,GAAG2C,EAAE,CAAC,CAAC,CAAC;QAAEC,CAAC,GAAGD,EAAE,CAAC,CAAC,CAAC;MACpCtM,MAAM,CAACsK,IAAI,CAACX,CAAC,CAAC;MACd0C,EAAE,GAAGE,CAAC;IACV;IACA,OAAOvM,MAAM;EACjB,CAAC;AAAE,CAAC;AACJI,OAAO,CAACgG,IAAI,GAAGA,IAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASD,OAAO,CAACiE,CAAC,EAAE;EAChB,OAAO,UAAU9B,EAAE,EAAE;IAAE,OAAO,CAACA,EAAE,CAACyC,KAAK,CAAC,CAAC,EAAEX,CAAC,CAAC,EAAE9B,EAAE,CAACyC,KAAK,CAACX,CAAC,CAAC,CAAC;EAAE,CAAC;AAClE;AACAhK,OAAO,CAAC+F,OAAO,GAAGA,OAAO;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASD,QAAQ,CAACkE,CAAC,EAAE;EACjB,IAAIC,CAAC,GAAGjK,OAAO,CAACgG,IAAI,CAACD,OAAO,CAACiE,CAAC,CAAC,CAAC;EAChC,OAAO,UAAU9B,EAAE,EAAE;IAAE,OAAQA,EAAE,CAACE,MAAM,KAAK,CAAC,GAAGpI,OAAO,CAAC2G,KAAK,GAAGzE,YAAY,CAAC8H,CAAC,GAAG,CAAC,EAAE9B,EAAE,CAAC,GAAG,CAACA,EAAE,CAAC,GAAG+B,CAAC,CAAC/B,EAAE,CAAC;EAAG,CAAC;AAC/G;AACAlI,OAAO,CAAC8F,QAAQ,GAAGA,QAAQ;AAC3B,SAASD,aAAa,CAACuG,KAAK,EAAEnC,CAAC,EAAEoC,CAAC,EAAE;EAChC,IAAIA,CAAC,KAAK,KAAK,CAAC,EAAE;IAAEA,CAAC,GAAG,YAAY;MAAE,OAAO,IAAI;IAAE,CAAC;EAAE;EACtD,IAAIC,EAAE,GAAG,UAAUC,KAAK,EAAEH,KAAK,EAAE;IAC7B,IAAIA,KAAK,CAAChE,MAAM,KAAK,CAAC,EAAE;MACpB,OAAOiE,CAAC,CAACG,KAAK,CAAC,KAAK,CAAC,EAAED,KAAK,CAAC,GAAG,CAACtC,CAAC,CAACuC,KAAK,CAAC,KAAK,CAAC,EAAED,KAAK,CAAC,CAAC,GAAGvM,OAAO,CAAC2G,KAAK;IAC5E,CAAC,MACI;MACD,OAAO8F,MAAM,CAACL,KAAK,CAAC,CAAC,CAAC,EAAE,UAAUxD,CAAC,EAAE;QAAE,OAAO0D,EAAE,CAACvK,IAAI,CAACwK,KAAK,EAAE3D,CAAC,CAAC,EAAEwD,KAAK,CAACzB,KAAK,CAAC,CAAC,CAAC,CAAC;MAAE,CAAC,CAAC;IACxF;EACJ,CAAC;EACD,OAAO2B,EAAE,CAACtM,OAAO,CAAC2G,KAAK,EAAEyF,KAAK,CAAC;AACnC;AACApM,OAAO,CAAC6F,aAAa,GAAGA,aAAa;AACrC,SAASD,KAAK,CAACqD,CAAC,EAAE;EACd,IAAIyD,KAAK,GAAGvG,IAAI,CAAC8C,CAAC,CAAC;EACnB,OAAO,UAAUE,EAAE,EAAEC,EAAE,EAAE;IACrB,IAAIA,EAAE,KAAKlK,SAAS,EAAE;MAClB,IAAIyN,QAAQ,GAAG/G,KAAK,CAACqD,CAAC,CAAC;MACvB,OAAO,UAAUG,EAAE,EAAE;QAAE,OAAOuD,QAAQ,CAACvD,EAAE,EAAED,EAAE,CAAC;MAAE,CAAC;IACrD;IACA,OAAOR,MAAM,CAACQ,EAAE,EAAEC,EAAE,CAACxE,MAAM,CAAC,UAAU0E,CAAC,EAAE;MAAE,OAAO,CAACoD,KAAK,CAACpD,CAAC,EAAEH,EAAE,CAAC;IAAE,CAAC,CAAC,CAAC;EACxE,CAAC;AACL;AACAnJ,OAAO,CAAC4F,KAAK,GAAGA,KAAK;AACrB,SAASD,YAAY,CAACsD,CAAC,EAAE;EACrB,IAAIyD,KAAK,GAAGvG,IAAI,CAAC8C,CAAC,CAAC;EACnB,OAAO,UAAUE,EAAE,EAAEC,EAAE,EAAE;IACrB,IAAIA,EAAE,KAAKlK,SAAS,EAAE;MAClB,IAAI0N,eAAe,GAAGjH,YAAY,CAACsD,CAAC,CAAC;MACrC,OAAO,UAAUG,EAAE,EAAE;QAAE,OAAOwD,eAAe,CAACxD,EAAE,EAAED,EAAE,CAAC;MAAE,CAAC;IAC5D;IACA,OAAOA,EAAE,CAACvE,MAAM,CAAC,UAAU0E,CAAC,EAAE;MAAE,OAAOoD,KAAK,CAACpD,CAAC,EAAEF,EAAE,CAAC;IAAE,CAAC,CAAC;EAC3D,CAAC;AACL;AACApJ,OAAO,CAAC2F,YAAY,GAAGA,YAAY;AACnC,SAASD,UAAU,CAACuD,CAAC,EAAE;EACnB,IAAIyD,KAAK,GAAGvG,IAAI,CAAC8C,CAAC,CAAC;EACnB,OAAO,UAAUE,EAAE,EAAEC,EAAE,EAAE;IACrB,IAAIA,EAAE,KAAKlK,SAAS,EAAE;MAClB,IAAI2N,aAAa,GAAGnH,UAAU,CAACuD,CAAC,CAAC;MACjC,OAAO,UAAUG,EAAE,EAAE;QAAE,OAAOyD,aAAa,CAACzD,EAAE,EAAED,EAAE,CAAC;MAAE,CAAC;IAC1D;IACA,OAAOA,EAAE,CAACvE,MAAM,CAAC,UAAU0E,CAAC,EAAE;MAAE,OAAO,CAACoD,KAAK,CAACpD,CAAC,EAAEF,EAAE,CAAC;IAAE,CAAC,CAAC;EAC5D,CAAC;AACL;AACApJ,OAAO,CAAC0F,UAAU,GAAGA,UAAU;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,IAAID,EAAE,GAAG,UAAU6D,CAAC,EAAE;EAAE,OAAO,CAACA,CAAC,CAAC;AAAE,CAAC;AACrCtJ,OAAO,CAACyF,EAAE,GAAGA,EAAE;AACf;AACA;AACA;AACA;AACA,IAAID,IAAI,GAAG,YAAY;EAAE,OAAOxF,OAAO,CAAC2G,KAAK;AAAE,CAAC;AAChD3G,OAAO,CAACwF,IAAI,GAAGA,IAAI;AACnB;AACA;AACA;AACA,IAAIsH,IAAI,GAAG,UAAU1B,EAAE,EAAEnB,CAAC,EAAE;EAAE,OAAOnC,UAAU,CAACiF,IAAI,CAAC3B,EAAE,EAAEpL,OAAO,CAAC+E,GAAG,CAACkF,CAAC,CAAC,CAAC;AAAE,CAAC;AAC3E,IAAI+C,aAAa,GAAG,UAAU5B,EAAE,EAAEnB,CAAC,EAAE;EAAE,OAAOnC,UAAU,CAACiF,IAAI,CAAC3B,EAAE,EAAEpL,OAAO,CAAC8E,YAAY,CAACmF,CAAC,CAAC,CAAC;AAAE,CAAC;AAC7F,IAAIgD,GAAG,GAAG,UAAUC,GAAG,EAAE9B,EAAE,EAAE;EAAE,OAAOtD,UAAU,CAACiF,IAAI,CAACG,GAAG,EAAElN,OAAO,CAACqF,EAAE,CAAC+F,EAAE,CAAC,CAAC;AAAE,CAAC;AAC7E,IAAIqB,MAAM,GAAG,UAAUU,EAAE,EAAElD,CAAC,EAAE;EAC1B,OAAOnC,UAAU,CAACiF,IAAI,CAACI,EAAE,EAAEnN,OAAO,CAACkF,KAAK,CAAC+E,CAAC,CAAC,CAAC;AAChD,CAAC;AACD,IAAImD,OAAO,GAAG,UAAUhC,EAAE,EAAEP,SAAS,EAAE;EAAE,OAAO/C,UAAU,CAACiF,IAAI,CAAC3B,EAAE,EAAEpL,OAAO,CAAC4E,MAAM,CAACiG,SAAS,CAAC,CAAC;AAAE,CAAC;AACjG,IAAIwC,UAAU,GAAG,UAAUjC,EAAE,EAAEnB,CAAC,EAAE;EAAE,OAAOnC,UAAU,CAACiF,IAAI,CAAC3B,EAAE,EAAEpL,OAAO,CAAC0E,SAAS,CAACuF,CAAC,CAAC,CAAC;AAAE,CAAC;AACvF,IAAIqD,mBAAmB,GAAG,UAAUlC,EAAE,EAAEmC,kBAAkB,EAAE;EAAE,OAAOzF,UAAU,CAACiF,IAAI,CAAC3B,EAAE,EAAEpL,OAAO,CAACuE,kBAAkB,CAACgJ,kBAAkB,CAAC,CAAC;AAAE,CAAC;AAC3I,IAAIC,UAAU,GAAG,UAAUpC,EAAE,EAAEP,SAAS,EAAE;EAAE,OAAO/C,UAAU,CAACiF,IAAI,CAAC3B,EAAE,EAAEpL,OAAO,CAACwE,SAAS,CAACqG,SAAS,CAAC,CAAC;AAAE,CAAC;AACvG,IAAI4C,aAAa,GAAG,UAAUrC,EAAE,EAAEnB,CAAC,EAAE;EAAE,OAAOnC,UAAU,CAACiF,IAAI,CAAC3B,EAAE,EAAEpL,OAAO,CAACsE,YAAY,CAAC2F,CAAC,CAAC,CAAC;AAAE,CAAC;AAC7F,IAAIyD,sBAAsB,GAAG,UAAUtC,EAAE,EAAEnB,CAAC,EAAE;EAAE,OAAOnC,UAAU,CAACiF,IAAI,CAAC3B,EAAE,EAAEpL,OAAO,CAACqE,qBAAqB,CAAC4F,CAAC,CAAC,CAAC;AAAE,CAAC;AAC/G,IAAI0D,IAAI,GAAG,UAAUvC,EAAE,EAAEwC,IAAI,EAAE;EAAE,OAAO9F,UAAU,CAACiF,IAAI,CAAC3B,EAAE,EAAEpL,OAAO,CAACsF,GAAG,CAACsI,IAAI,CAAC,CAAC;AAAE,CAAC;AACjF,IAAIC,OAAO,GAAG,UAAUzC,EAAE,EAAE7B,CAAC,EAAEU,CAAC,EAAE;EAAE,OAAOnC,UAAU,CAACiF,IAAI,CAAC3B,EAAE,EAAEpL,OAAO,CAACgE,MAAM,CAACuF,CAAC,EAAEU,CAAC,CAAC,CAAC;AAAE,CAAC;AACvF,IAAI6D,QAAQ,GAAG,UAAU9B,CAAC,EAAE;EACxB,IAAI+B,QAAQ,GAAG/N,OAAO,CAAC+D,OAAO,CAACiI,CAAC,CAAC;EACjC,OAAO,UAAUZ,EAAE,EAAEnB,CAAC,EAAE;IAAE,OAAOnC,UAAU,CAACiF,IAAI,CAAC3B,EAAE,EAAE2C,QAAQ,CAAC9D,CAAC,CAAC,CAAC;EAAE,CAAC;AACxE,CAAC;AACD,IAAI+D,YAAY,GAAG,UAAU5C,EAAE,EAAE7B,CAAC,EAAEU,CAAC,EAAE;EAAE,OAAOnC,UAAU,CAACiF,IAAI,CAAC3B,EAAE,EAAEpL,OAAO,CAAC6D,WAAW,CAAC0F,CAAC,EAAEU,CAAC,CAAC,CAAC;AAAE,CAAC;AACjG,IAAIgE,gBAAgB,GAAG,UAAU7C,EAAE,EAAE7B,CAAC,EAAEU,CAAC,EAAE;EACvC,IAAI9B,CAAC,GAAGiD,EAAE,CAAChD,MAAM;EACjB,IAAIY,CAAC,GAAGO,CAAC;EACT,KAAK,IAAIhB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,CAAC,EAAEI,CAAC,EAAE,EAAE;IACxBS,CAAC,GAAGiB,CAAC,CAAC1B,CAAC,EAAES,CAAC,EAAEoC,EAAE,CAAC7C,CAAC,CAAC,CAAC;EACtB;EACA,OAAOS,CAAC;AACZ,CAAC;AACD,IAAIkF,iBAAiB,GAAG,UAAUlC,CAAC,EAAE;EAAE,OAAO,UAAUZ,EAAE,EAAEnB,CAAC,EAAE;IAC3D,OAAOmB,EAAE,CAACpH,MAAM,CAAC,UAAUuF,CAAC,EAAED,CAAC,EAAEf,CAAC,EAAE;MAAE,OAAOyD,CAAC,CAACrD,MAAM,CAACY,CAAC,EAAEU,CAAC,CAAC1B,CAAC,EAAEe,CAAC,CAAC,CAAC;IAAE,CAAC,EAAE0C,CAAC,CAACrF,KAAK,CAAC;EAClF,CAAC;AAAE,CAAC;AACJ,IAAIwH,qBAAqB,GAAG,UAAU/C,EAAE,EAAE7B,CAAC,EAAEU,CAAC,EAAE;EAC5C,OAAOnC,UAAU,CAACiF,IAAI,CAAC3B,EAAE,EAAEpL,OAAO,CAAC4D,oBAAoB,CAAC2F,CAAC,EAAEU,CAAC,CAAC,CAAC;AAClE,CAAC;AACD,IAAImE,mBAAmB,GAAG,UAAUhD,EAAE,EAAEnB,CAAC,EAAE;EACvC,OAAOnC,UAAU,CAACiF,IAAI,CAAC3B,EAAE,EAAEpL,OAAO,CAAC2E,kBAAkB,CAACsF,CAAC,CAAC,CAAC;AAC7D,CAAC;AACD,IAAIoE,gBAAgB,GAAG,UAAUjD,EAAE,EAAEmC,kBAAkB,EAAE;EAAE,OAAOzF,UAAU,CAACiF,IAAI,CAAC3B,EAAE,EAAEpL,OAAO,CAACoE,eAAe,CAACmJ,kBAAkB,CAAC,CAAC;AAAE,CAAC;AACrI,IAAIe,OAAO,GAAG,UAAUlD,EAAE,EAAEnB,CAAC,EAAE;EAAE,OAAOnC,UAAU,CAACiF,IAAI,CAAC3B,EAAE,EAAEpL,OAAO,CAACmE,MAAM,CAAC8F,CAAC,CAAC,CAAC;AAAE,CAAC;AACjF,IAAIsE,SAAS,GAAG,UAAUC,CAAC,EAAE;EACzB,IAAIC,SAAS,GAAGzO,OAAO,CAAC2D,QAAQ,CAAC6K,CAAC,CAAC;EACnC,OAAO,UAAUE,EAAE,EAAEzE,CAAC,EAAE;IAAE,OAAOnC,UAAU,CAACiF,IAAI,CAAC2B,EAAE,EAAED,SAAS,CAACxE,CAAC,CAAC,CAAC;EAAE,CAAC;AACzE,CAAC;AACD;AACA,IAAI0E,kBAAkB,GAAG,UAAUH,CAAC,EAAE;EAClC,IAAII,kBAAkB,GAAG5O,OAAO,CAACyD,iBAAiB,CAAC+K,CAAC,CAAC;EACrD,OAAO,UAAUE,EAAE,EAAEzE,CAAC,EAAE;IAAE,OAAOnC,UAAU,CAACiF,IAAI,CAAC2B,EAAE,EAAEE,kBAAkB,CAAC3E,CAAC,CAAC,CAAC;EAAE,CAAC;AAClF,CAAC;AACD;AACA,IAAI4E,OAAO,GAAG,UAAUL,CAAC,EAAE;EACvB,IAAIM,OAAO,GAAG9O,OAAO,CAACwD,MAAM,CAACgL,CAAC,CAAC;EAC/B,OAAO,UAAUpD,EAAE,EAAEnB,CAAC,EAAE;IAAE,OAAOnC,UAAU,CAACiF,IAAI,CAAC3B,EAAE,EAAE0D,OAAO,CAAC7E,CAAC,CAAC,CAAC;EAAE,CAAC;AACvE,CAAC;AACD;AACA,IAAI8E,KAAK,GAAG,UAAUP,CAAC,EAAE;EACrB,IAAIQ,KAAK,GAAGhP,OAAO,CAACuD,IAAI,CAACiL,CAAC,CAAC;EAC3B,OAAO,UAAUpD,EAAE,EAAEnB,CAAC,EAAE;IAAE,OAAOnC,UAAU,CAACiF,IAAI,CAAC3B,EAAE,EAAE4D,KAAK,CAAC/E,CAAC,CAAC,CAAC;EAAE,CAAC;AACrE,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI1E,IAAI,GAAG,UAAUqI,IAAI,EAAE;EAAE,OAAO,UAAUxC,EAAE,EAAE;IAAE,OAAOzC,MAAM,CAACyC,EAAE,EAAEwC,IAAI,EAAE,CAAC;EAAE,CAAC;AAAE,CAAC;AACnF5N,OAAO,CAACuF,IAAI,GAAGA,IAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACAvF,OAAO,CAACsF,GAAG,GAAGtF,OAAO,CAACuF,IAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,IAAIF,EAAE,GAAG,UAAU+F,EAAE,EAAE;EACnB,OAAOpL,OAAO,CAACkF,KAAK,CAAC,UAAU+E,CAAC,EAAE;IAAE,OAAOnC,UAAU,CAACiF,IAAI,CAAC3B,EAAE,EAAEpL,OAAO,CAAC+E,GAAG,CAACkF,CAAC,CAAC,CAAC;EAAE,CAAC,CAAC;AACtF,CAAC;AACDjK,OAAO,CAACqF,EAAE,GAAGA,EAAE;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAID,OAAO,GAAG,UAAUiG,EAAE,EAAE;EACxB,OAAOvD,UAAU,CAACmH,IAAI,CAACjP,OAAO,CAAC+E,GAAG,CAAC,UAAUuE,CAAC,EAAE;IAAE,OAAO,YAAY;MAAE,OAAOA,CAAC;IAAE,CAAC;EAAE,CAAC,CAAC,EAAEtJ,OAAO,CAACqF,EAAE,CAACgG,EAAE,CAAC,CAAC;AAC3G,CAAC;AACDrL,OAAO,CAACoF,OAAO,GAAGA,OAAO;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAID,QAAQ,GAAG,UAAUkG,EAAE,EAAE;EACzB,OAAOvD,UAAU,CAACmH,IAAI,CAACjP,OAAO,CAAC+E,GAAG,CAAC,YAAY;IAAE,OAAO,UAAUwE,CAAC,EAAE;MAAE,OAAOA,CAAC;IAAE,CAAC;EAAE,CAAC,CAAC,EAAEvJ,OAAO,CAACqF,EAAE,CAACgG,EAAE,CAAC,CAAC;AAC3G,CAAC;AACDrL,OAAO,CAACmF,QAAQ,GAAGA,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,IAAID,KAAK,GAAG,UAAU+E,CAAC,EAAE;EAAE,OAAO,UAAUkD,EAAE,EAAE;IAC5C,OAAOrF,UAAU,CAACiF,IAAI,CAACI,EAAE,EAAEnN,OAAO,CAACiF,cAAc,CAAC,UAAUiK,CAAC,EAAE5F,CAAC,EAAE;MAAE,OAAOW,CAAC,CAACX,CAAC,CAAC;IAAE,CAAC,CAAC,CAAC;EACxF,CAAC;AAAE,CAAC;AACJtJ,OAAO,CAACkF,KAAK,GAAGA,KAAK;AACrB;AACA;AACA;AACA,IAAID,cAAc,GAAG,UAAUgF,CAAC,EAAE;EAAE,OAAO,UAAUkD,EAAE,EAAE;IACrD,IAAIgC,MAAM,GAAG,CAAC;IACd,IAAIhH,CAAC,GAAGgF,EAAE,CAAC/E,MAAM;IACjB,IAAIgH,IAAI,GAAG,IAAI9G,KAAK,CAACH,CAAC,CAAC;IACvB,KAAK,IAAII,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,CAAC,EAAEI,CAAC,EAAE,EAAE;MACxB,IAAIiD,CAAC,GAAG2B,EAAE,CAAC5E,CAAC,CAAC;MACb,IAAIgC,GAAG,GAAGN,CAAC,CAAC1B,CAAC,EAAEiD,CAAC,CAAC;MACjB2D,MAAM,IAAI5E,GAAG,CAACnC,MAAM;MACpBgH,IAAI,CAAC7G,CAAC,CAAC,GAAGgC,GAAG;IACjB;IACA,IAAI8E,GAAG,GAAG/G,KAAK,CAAC6G,MAAM,CAAC;IACvB,IAAIhF,KAAK,GAAG,CAAC;IACb,KAAK,IAAI5B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,CAAC,EAAEI,CAAC,EAAE,EAAE;MACxB,IAAIgC,GAAG,GAAG6E,IAAI,CAAC7G,CAAC,CAAC;MACjB,IAAI+G,GAAG,GAAG/E,GAAG,CAACnC,MAAM;MACpB,KAAK,IAAIoC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG8E,GAAG,EAAE9E,CAAC,EAAE,EAAE;QAC1B6E,GAAG,CAAC7E,CAAC,GAAGL,KAAK,CAAC,GAAGI,GAAG,CAACC,CAAC,CAAC;MAC3B;MACAL,KAAK,IAAImF,GAAG;IAChB;IACA,OAAOD,GAAG;EACd,CAAC;AAAE,CAAC;AACJrP,OAAO,CAACiF,cAAc,GAAGA,cAAc;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAID,UAAU,GAAG,UAAUiF,CAAC,EAAE;EAC1B,OAAOjK,OAAO,CAACkF,KAAK,CAAC,UAAUoE,CAAC,EAAE;IAC9B,OAAOxB,UAAU,CAACiF,IAAI,CAAC9C,CAAC,CAACX,CAAC,CAAC,EAAEtJ,OAAO,CAAC+E,GAAG,CAAC,YAAY;MAAE,OAAOuE,CAAC;IAAE,CAAC,CAAC,CAAC;EACxE,CAAC,CAAC;AACN,CAAC;AACDtJ,OAAO,CAACgF,UAAU,GAAGA,UAAU;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAID,GAAG,GAAG,UAAUkF,CAAC,EAAE;EAAE,OAAO,UAAUmB,EAAE,EAAE;IAC1C,OAAOA,EAAE,CAACrG,GAAG,CAAC,UAAUuE,CAAC,EAAE;MAAE,OAAOW,CAAC,CAACX,CAAC,CAAC;IAAE,CAAC,CAAC;EAChD,CAAC;AAAE,CAAC;AACJtJ,OAAO,CAAC+E,GAAG,GAAGA,GAAG;AACjB;AACA;AACA;AACA;AACA,IAAID,YAAY,GAAG,UAAUmF,CAAC,EAAE;EAAE,OAAO,UAAUmB,EAAE,EAAE;IAAE,OAAOA,EAAE,CAACrG,GAAG,CAAC,UAAUuE,CAAC,EAAEf,CAAC,EAAE;MAAE,OAAO0B,CAAC,CAAC1B,CAAC,EAAEe,CAAC,CAAC;IAAE,CAAC,CAAC;EAAE,CAAC;AAAE,CAAC;AACjHtJ,OAAO,CAAC8E,YAAY,GAAGA,YAAY;AACnC;AACA;AACA;AACA;AACA,IAAID,QAAQ,GAAG,UAAUuG,EAAE,EAAE;EACzB;EACA,IAAID,IAAI,GAAG,EAAE;EACb;EACA,IAAID,KAAK,GAAG,EAAE;EACd,KAAK,IAAIO,EAAE,GAAG,CAAC,EAAE8D,IAAI,GAAGnE,EAAE,EAAEK,EAAE,GAAG8D,IAAI,CAACnH,MAAM,EAAEqD,EAAE,EAAE,EAAE;IAChD,IAAID,CAAC,GAAG+D,IAAI,CAAC9D,EAAE,CAAC;IAChB,IAAID,CAAC,CAACP,IAAI,KAAK,MAAM,EAAE;MACnBE,IAAI,CAACjB,IAAI,CAACsB,CAAC,CAACL,IAAI,CAAC;IACrB,CAAC,MACI;MACDD,KAAK,CAAChB,IAAI,CAACsB,CAAC,CAACN,KAAK,CAAC;IACvB;EACJ;EACA,OAAO;IACHC,IAAI,EAAEA,IAAI;IACVD,KAAK,EAAEA;EACX,CAAC;AACL,CAAC;AACDlL,OAAO,CAAC6E,QAAQ,GAAGA,QAAQ;AAC3B;AACA;AACA;AACA;AACA,IAAID,MAAM,GAAG,UAAUiG,SAAS,EAAE;EAAE,OAAO,UAAUO,EAAE,EAAE;IAAE,OAAOA,EAAE,CAACxG,MAAM,CAACiG,SAAS,CAAC;EAAE,CAAC;AAAE,CAAC;AAC5F7K,OAAO,CAAC4E,MAAM,GAAGA,MAAM;AACvB;AACA;AACA;AACA;AACA,IAAID,kBAAkB,GAAG,UAAUsF,CAAC,EAAE;EAAE,OAAO,UAAUmB,EAAE,EAAE;IACzD;IACA,IAAIxL,MAAM,GAAG,EAAE;IACf,KAAK,IAAI2I,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG6C,EAAE,CAAChD,MAAM,EAAEG,CAAC,EAAE,EAAE;MAChC,IAAIiH,OAAO,GAAGvF,CAAC,CAAC1B,CAAC,EAAE6C,EAAE,CAAC7C,CAAC,CAAC,CAAC;MACzB,IAAIP,CAAC,CAACgD,MAAM,CAACwE,OAAO,CAAC,EAAE;QACnB5P,MAAM,CAACsK,IAAI,CAACsF,OAAO,CAAChQ,KAAK,CAAC;MAC9B;IACJ;IACA,OAAOI,MAAM;EACjB,CAAC;AAAE,CAAC;AACJI,OAAO,CAAC2E,kBAAkB,GAAGA,kBAAkB;AAC/C;AACA;AACA;AACA;AACA,IAAID,SAAS,GAAG,UAAUuF,CAAC,EAAE;EACzB,OAAOjK,OAAO,CAAC2E,kBAAkB,CAAC,UAAUuK,CAAC,EAAE5F,CAAC,EAAE;IAAE,OAAOW,CAAC,CAACX,CAAC,CAAC;EAAE,CAAC,CAAC;AACvE,CAAC;AACDtJ,OAAO,CAAC0E,SAAS,GAAGA,SAAS;AAC7B;AACA;AACA;AACA;AACA1E,OAAO,CAACyE,OAAO,GACf;AACAzE,OAAO,CAAC0E,SAAS,CAACoD,UAAU,CAAC2H,QAAQ,CAAC;AACtC;AACA;AACA;AACA;AACA,IAAIjL,SAAS,GAAG,UAAUqG,SAAS,EAAE;EACjC,OAAO7K,OAAO,CAACuE,kBAAkB,CAAC,UAAU2K,CAAC,EAAE5F,CAAC,EAAE;IAAE,OAAOuB,SAAS,CAACvB,CAAC,CAAC;EAAE,CAAC,CAAC;AAC/E,CAAC;AACDtJ,OAAO,CAACwE,SAAS,GAAGA,SAAS;AAC7B;AACA;AACA;AACA;AACA,IAAID,kBAAkB,GAAG,UAAUgJ,kBAAkB,EAAE;EAAE,OAAO,UAAUnC,EAAE,EAAE;IAC1E;IACA,IAAID,IAAI,GAAG,EAAE;IACb;IACA,IAAID,KAAK,GAAG,EAAE;IACd,KAAK,IAAI3C,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG6C,EAAE,CAAChD,MAAM,EAAEG,CAAC,EAAE,EAAE;MAChC,IAAIe,CAAC,GAAG8B,EAAE,CAAC7C,CAAC,CAAC;MACb,IAAIgF,kBAAkB,CAAChF,CAAC,EAAEe,CAAC,CAAC,EAAE;QAC1B4B,KAAK,CAAChB,IAAI,CAACZ,CAAC,CAAC;MACjB,CAAC,MACI;QACD6B,IAAI,CAACjB,IAAI,CAACZ,CAAC,CAAC;MAChB;IACJ;IACA,OAAO;MACH6B,IAAI,EAAEA,IAAI;MACVD,KAAK,EAAEA;IACX,CAAC;EACL,CAAC;AAAE,CAAC;AACJlL,OAAO,CAACuE,kBAAkB,GAAGA,kBAAkB;AAC/C;AACA;AACA;AACA;AACA,IAAID,YAAY,GAAG,UAAU2F,CAAC,EAAE;EAC5B,OAAOjK,OAAO,CAACqE,qBAAqB,CAAC,UAAU6K,CAAC,EAAE5F,CAAC,EAAE;IAAE,OAAOW,CAAC,CAACX,CAAC,CAAC;EAAE,CAAC,CAAC;AAC1E,CAAC;AACDtJ,OAAO,CAACsE,YAAY,GAAGA,YAAY;AACnC;AACA;AACA;AACA;AACA,IAAID,qBAAqB,GAAG,UAAU4F,CAAC,EAAE;EAAE,OAAO,UAAUmB,EAAE,EAAE;IAC5D;IACA,IAAID,IAAI,GAAG,EAAE;IACb;IACA,IAAID,KAAK,GAAG,EAAE;IACd,KAAK,IAAI3C,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG6C,EAAE,CAAChD,MAAM,EAAEG,CAAC,EAAE,EAAE;MAChC,IAAIiD,CAAC,GAAGvB,CAAC,CAAC1B,CAAC,EAAE6C,EAAE,CAAC7C,CAAC,CAAC,CAAC;MACnB,IAAIiD,CAAC,CAACP,IAAI,KAAK,MAAM,EAAE;QACnBE,IAAI,CAACjB,IAAI,CAACsB,CAAC,CAACL,IAAI,CAAC;MACrB,CAAC,MACI;QACDD,KAAK,CAAChB,IAAI,CAACsB,CAAC,CAACN,KAAK,CAAC;MACvB;IACJ;IACA,OAAO;MACHC,IAAI,EAAEA,IAAI;MACVD,KAAK,EAAEA;IACX,CAAC;EACL,CAAC;AAAE,CAAC;AACJlL,OAAO,CAACqE,qBAAqB,GAAGA,qBAAqB;AACrD;AACA;AACA;AACA;AACA,IAAID,eAAe,GAAG,UAAUmJ,kBAAkB,EAAE;EAAE,OAAO,UAAUnC,EAAE,EAAE;IACvE,OAAOA,EAAE,CAACxG,MAAM,CAAC,UAAU0E,CAAC,EAAEf,CAAC,EAAE;MAAE,OAAOgF,kBAAkB,CAAChF,CAAC,EAAEe,CAAC,CAAC;IAAE,CAAC,CAAC;EAC1E,CAAC;AAAE,CAAC;AACJtJ,OAAO,CAACoE,eAAe,GAAGA,eAAe;AACzC;AACA;AACA;AACA;AACA,IAAID,MAAM,GAAG,UAAU8F,CAAC,EAAE;EAAE,OAAO,UAAUyF,EAAE,EAAE;IAAE,OAAOA,EAAE,CAAC3K,GAAG,CAAC,UAAUmK,CAAC,EAAE3G,CAAC,EAAEL,EAAE,EAAE;MAAE,OAAO+B,CAAC,CAAC/B,EAAE,CAACyC,KAAK,CAACpC,CAAC,CAAC,CAAC;IAAE,CAAC,CAAC;EAAE,CAAC;AAAE,CAAC;AACtHvI,OAAO,CAACmE,MAAM,GAAGA,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACAnE,OAAO,CAACkE,SAAS,GACjB;AACAlE,OAAO,CAACmE,MAAM,CAAC2D,UAAU,CAAC2H,QAAQ,CAAC;AACnC;AACA;AACA;AACA;AACA,IAAIxL,gBAAgB,GAAG,UAAU+H,CAAC,EAAE;EAChC,IAAI2D,iBAAiB,GAAGzB,iBAAiB,CAAClC,CAAC,CAAC;EAC5C,OAAO,UAAU/B,CAAC,EAAE;IAAE,OAAO,UAAUmB,EAAE,EAAE;MAAE,OAAOuE,iBAAiB,CAACvE,EAAE,EAAEnB,CAAC,CAAC;IAAE,CAAC;EAAE,CAAC;AACtF,CAAC;AACDjK,OAAO,CAACiE,gBAAgB,GAAGA,gBAAgB;AAC3C;AACA;AACA;AACA;AACA,IAAID,MAAM,GAAG,UAAUuF,CAAC,EAAEU,CAAC,EAAE;EACzB,OAAOjK,OAAO,CAAC8D,eAAe,CAACyF,CAAC,EAAE,UAAU2F,CAAC,EAAE3F,CAAC,EAAED,CAAC,EAAE;IAAE,OAAOW,CAAC,CAACV,CAAC,EAAED,CAAC,CAAC;EAAE,CAAC,CAAC;AAC7E,CAAC;AACDtJ,OAAO,CAACgE,MAAM,GAAGA,MAAM;AACvB;AACA;AACA;AACA;AACA,IAAID,OAAO,GAAG,UAAUiI,CAAC,EAAE;EACvB,IAAI2D,iBAAiB,GAAG3P,OAAO,CAACiE,gBAAgB,CAAC+H,CAAC,CAAC;EACnD,OAAO,UAAU/B,CAAC,EAAE;IAAE,OAAO0F,iBAAiB,CAAC,UAAUT,CAAC,EAAE5F,CAAC,EAAE;MAAE,OAAOW,CAAC,CAACX,CAAC,CAAC;IAAE,CAAC,CAAC;EAAE,CAAC;AACvF,CAAC;AACDtJ,OAAO,CAAC+D,OAAO,GAAGA,OAAO;AACzB;AACA;AACA;AACA;AACA,IAAID,eAAe,GAAG,UAAUyF,CAAC,EAAEU,CAAC,EAAE;EAAE,OAAO,UAAUmB,EAAE,EAAE;IAAE,OAAO6C,gBAAgB,CAAC7C,EAAE,EAAE7B,CAAC,EAAEU,CAAC,CAAC;EAAE,CAAC;AAAE,CAAC;AACtGjK,OAAO,CAAC8D,eAAe,GAAGA,eAAe;AACzC;AACA;AACA;AACA;AACA,IAAID,WAAW,GAAG,UAAU0F,CAAC,EAAEU,CAAC,EAAE;EAC9B,OAAOjK,OAAO,CAAC4D,oBAAoB,CAAC2F,CAAC,EAAE,UAAU2F,CAAC,EAAE5F,CAAC,EAAEC,CAAC,EAAE;IAAE,OAAOU,CAAC,CAACX,CAAC,EAAEC,CAAC,CAAC;EAAE,CAAC,CAAC;AAClF,CAAC;AACDvJ,OAAO,CAAC6D,WAAW,GAAGA,WAAW;AACjC;AACA;AACA;AACA;AACA,IAAID,oBAAoB,GAAG,UAAU2F,CAAC,EAAEU,CAAC,EAAE;EAAE,OAAO,UAAUmB,EAAE,EAAE;IAAE,OAAOA,EAAE,CAACvH,WAAW,CAAC,UAAU0F,CAAC,EAAED,CAAC,EAAEf,CAAC,EAAE;MAAE,OAAO0B,CAAC,CAAC1B,CAAC,EAAEe,CAAC,EAAEC,CAAC,CAAC;IAAE,CAAC,EAAEA,CAAC,CAAC;EAAE,CAAC;AAAE,CAAC;AAC7IvJ,OAAO,CAAC4D,oBAAoB,GAAGA,oBAAoB;AACnD;AACA;AACA;AACA;AACA;AACA,IAAID,QAAQ,GAAG,UAAU6K,CAAC,EAAE;EACxB,IAAII,kBAAkB,GAAG5O,OAAO,CAACyD,iBAAiB,CAAC+K,CAAC,CAAC;EACrD,OAAO,UAAUvE,CAAC,EAAE;IAAE,OAAO2E,kBAAkB,CAAC,UAAUM,CAAC,EAAE5F,CAAC,EAAE;MAAE,OAAOW,CAAC,CAACX,CAAC,CAAC;IAAE,CAAC,CAAC;EAAE,CAAC;AACxF,CAAC;AACDtJ,OAAO,CAAC2D,QAAQ,GAAGA,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA,IAAID,QAAQ,GAAG,UAAU8K,CAAC,EAAE;EAAE,OAAO,UAAUE,EAAE,EAAE;IAC/C,OAAOb,OAAO,CAACa,EAAE,EAAEF,CAAC,CAAC/I,EAAE,CAACzF,OAAO,CAACwF,IAAI,EAAE,CAAC,EAAE,UAAUoK,GAAG,EAAExE,EAAE,EAAE;MACxD,OAAOoD,CAAC,CAACnJ,EAAE,CAACmJ,CAAC,CAACzJ,GAAG,CAAC6K,GAAG,EAAE,UAAU1H,EAAE,EAAE;QAAE,OAAO,UAAUoB,CAAC,EAAE;UAAE,OAAOvH,IAAI,CAACmG,EAAE,EAAEoB,CAAC,CAAC;QAAE,CAAC;MAAE,CAAC,CAAC,EAAE8B,EAAE,CAAC;IAC/F,CAAC,CAAC;EACN,CAAC;AAAE,CAAC;AACJpL,OAAO,CAAC0D,QAAQ,GAAGA,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA,IAAID,iBAAiB,GAAG,UAAU+K,CAAC,EAAE;EAAE,OAAO,UAAUvE,CAAC,EAAE;IACvD,OAAOjK,OAAO,CAAC8D,eAAe,CAAC0K,CAAC,CAAC/I,EAAE,CAACzF,OAAO,CAACwF,IAAI,EAAE,CAAC,EAAE,UAAU+C,CAAC,EAAEsH,GAAG,EAAEvG,CAAC,EAAE;MACtE,OAAOkF,CAAC,CAACnJ,EAAE,CAACmJ,CAAC,CAACzJ,GAAG,CAAC8K,GAAG,EAAE,UAAUtE,EAAE,EAAE;QAAE,OAAO,UAAUhC,CAAC,EAAE;UAAE,OAAOxH,IAAI,CAACwJ,EAAE,EAAEhC,CAAC,CAAC;QAAE,CAAC;MAAE,CAAC,CAAC,EAAEU,CAAC,CAAC1B,CAAC,EAAEe,CAAC,CAAC,CAAC;IACpG,CAAC,CAAC;EACN,CAAC;AAAE,CAAC;AACJtJ,OAAO,CAACyD,iBAAiB,GAAGA,iBAAiB;AAC7C;AACA;AACA;AACA;AACA,IAAID,MAAM,GAAG,UAAUgL,CAAC,EAAE;EACtB,IAAIC,SAAS,GAAGzO,OAAO,CAAC2D,QAAQ,CAAC6K,CAAC,CAAC;EACnC,OAAO,UAAUvE,CAAC,EAAE;IAAE,OAAO,UAAUmB,EAAE,EAAE;MAAE,OAAOoD,CAAC,CAACzJ,GAAG,CAAC+C,UAAU,CAACiF,IAAI,CAAC3B,EAAE,EAAEqD,SAAS,CAACxE,CAAC,CAAC,CAAC,EAAEjK,OAAO,CAACyE,OAAO,CAAC;IAAE,CAAC;EAAE,CAAC;AACvH,CAAC;AACDzE,OAAO,CAACwD,MAAM,GAAGA,MAAM;AACvB;AACA;AACA;AACA;AACA,IAAID,IAAI,GAAG,UAAUiL,CAAC,EAAE;EACpB,IAAIC,SAAS,GAAGzO,OAAO,CAAC2D,QAAQ,CAAC6K,CAAC,CAAC;EACnC,OAAO,UAAUvE,CAAC,EAAE;IAAE,OAAO,UAAUmB,EAAE,EAAE;MAAE,OAAOoD,CAAC,CAACzJ,GAAG,CAAC+C,UAAU,CAACiF,IAAI,CAAC3B,EAAE,EAAEqD,SAAS,CAACxE,CAAC,CAAC,CAAC,EAAEjK,OAAO,CAAC6E,QAAQ,CAAC;IAAE,CAAC;EAAE,CAAC;AACxH,CAAC;AACD7E,OAAO,CAACuD,IAAI,GAAGA,IAAI;AACnB;AACA;AACA;AACA;AACA,IAAID,MAAM,GAAG,UAAUiG,CAAC,EAAEU,CAAC,EAAE;EACzB;EACA,IAAI6F,GAAG,GAAG,EAAE;EACZ,IAAIC,EAAE,GAAGxG,CAAC;EACV,OAAO,IAAI,EAAE;IACT,IAAIyG,EAAE,GAAG/F,CAAC,CAAC8F,EAAE,CAAC;IACd,IAAI/H,CAAC,CAACgD,MAAM,CAACgF,EAAE,CAAC,EAAE;MACd,IAAI9D,EAAE,GAAG8D,EAAE,CAACxQ,KAAK;QAAE8J,CAAC,GAAG4C,EAAE,CAAC,CAAC,CAAC;QAAE+D,GAAG,GAAG/D,EAAE,CAAC,CAAC,CAAC;MACzC4D,GAAG,CAAC5F,IAAI,CAACZ,CAAC,CAAC;MACXyG,EAAE,GAAGE,GAAG;IACZ,CAAC,MACI;MACD;IACJ;EACJ;EACA,OAAOH,GAAG;AACd,CAAC;AACD9P,OAAO,CAACsD,MAAM,GAAGA,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACAtD,OAAO,CAACqD,GAAG,GAAG,eAAe;AAC7B;AACA;AACA;AACA;AACArD,OAAO,CAACoD,OAAO,GAAG;EACdC,GAAG,EAAErD,OAAO,CAACqD,GAAG;EAChB0B,GAAG,EAAE+H;AACT,CAAC;AACD;AACA;AACA;AACA;AACA9M,OAAO,CAACmD,gBAAgB,GAAG;EACvBE,GAAG,EAAErD,OAAO,CAACqD,GAAG;EAChB0B,GAAG,EAAE+H,IAAI;EACThI,YAAY,EAAEkI;AAClB,CAAC;AACD;AACA;AACA;AACA;AACAhN,OAAO,CAAC6H,WAAW,GAAG;EAClBxE,GAAG,EAAErD,OAAO,CAACqD,GAAG;EAChB0B,GAAG,EAAE+H,IAAI;EACTzH,EAAE,EAAE4H,GAAG;EACPxH,EAAE,EAAEzF,OAAO,CAACyF;AAChB,CAAC;AACD;AACA;AACA;AACA;AACAzF,OAAO,CAAC4H,KAAK,GAAG;EACZvE,GAAG,EAAErD,OAAO,CAACqD,GAAG;EAChB0B,GAAG,EAAE+H,IAAI;EACTzH,EAAE,EAAE4H,GAAG;EACPxH,EAAE,EAAEzF,OAAO,CAACyF,EAAE;EACdP,KAAK,EAAEuH;AACX,CAAC;AACD;AACA;AACA;AACA;AACAzM,OAAO,CAAC2H,UAAU,GAAG;EACjBtE,GAAG,EAAErD,OAAO,CAACqD,GAAG;EAChBC,MAAM,EAAEtD,OAAO,CAACsD;AACpB,CAAC;AACD;AACA;AACA;AACA;AACAtD,OAAO,CAAC0H,GAAG,GAAG;EACVrE,GAAG,EAAErD,OAAO,CAACqD,GAAG;EAChB0B,GAAG,EAAE+H,IAAI;EACTxH,GAAG,EAAEqI;AACT,CAAC;AACD;AACA;AACA;AACA;AACA3N,OAAO,CAACyH,WAAW,GAAG;EAClBpE,GAAG,EAAErD,OAAO,CAACqD,GAAG;EAChB0B,GAAG,EAAE+H,IAAI;EACTzH,EAAE,EAAE4H,GAAG;EACPxH,EAAE,EAAEzF,OAAO,CAACyF,EAAE;EACdH,GAAG,EAAEqI,IAAI;EACTnI,IAAI,EAAExF,OAAO,CAACwF;AAClB,CAAC;AACD;AACA;AACA;AACA;AACAxF,OAAO,CAACwH,MAAM,GAAG;EACbnE,GAAG,EAAErD,OAAO,CAACqD,GAAG;EAChB0B,GAAG,EAAE+H,IAAI;EACT3I,MAAM,EAAEmK;AACZ,CAAC;AACD;AACA;AACA;AACA;AACAtO,OAAO,CAACuH,WAAW,GAAG;EAClBlE,GAAG,EAAErD,OAAO,CAACqD,GAAG;EAChBoB,OAAO,EAAEzE,OAAO,CAACyE,OAAO;EACxBI,QAAQ,EAAE7E,OAAO,CAAC6E;AACtB,CAAC;AACD;AACA;AACA;AACA;AACA7E,OAAO,CAACsH,UAAU,GAAG;EACjBjE,GAAG,EAAErD,OAAO,CAACqD,GAAG;EAChB0B,GAAG,EAAE+H,IAAI;EACTrI,OAAO,EAAEzE,OAAO,CAACyE,OAAO;EACxBI,QAAQ,EAAE7E,OAAO,CAAC6E,QAAQ;EAC1BD,MAAM,EAAEwI,OAAO;EACf1I,SAAS,EAAE2I,UAAU;EACrB7I,SAAS,EAAEgJ,UAAU;EACrBlJ,YAAY,EAAEmJ;AAClB,CAAC;AACD;AACA;AACA;AACA;AACAzN,OAAO,CAACqH,mBAAmB,GAAG;EAC1BhE,GAAG,EAAErD,OAAO,CAACqD,GAAG;EAChB0B,GAAG,EAAE+H,IAAI;EACThI,YAAY,EAAEkI,aAAa;EAC3BvI,OAAO,EAAEzE,OAAO,CAACyE,OAAO;EACxBI,QAAQ,EAAE7E,OAAO,CAAC6E,QAAQ;EAC1BD,MAAM,EAAEwI,OAAO;EACf1I,SAAS,EAAE2I,UAAU;EACrB7I,SAAS,EAAEgJ,UAAU;EACrBlJ,YAAY,EAAEmJ,aAAa;EAC3BpJ,qBAAqB,EAAEqJ,sBAAsB;EAC7CnJ,kBAAkB,EAAE+I,mBAAmB;EACvC3I,kBAAkB,EAAEyJ,mBAAmB;EACvChK,eAAe,EAAEiK;AACrB,CAAC;AACD;AACA;AACA;AACA;AACArO,OAAO,CAACoH,QAAQ,GAAG;EACf/D,GAAG,EAAErD,OAAO,CAACqD,GAAG;EAChBW,MAAM,EAAE6J,OAAO;EACf9J,OAAO,EAAE+J,QAAQ;EACjBjK,WAAW,EAAEmK;AACjB,CAAC;AACD;AACA;AACA;AACA;AACAhO,OAAO,CAACmH,iBAAiB,GAAG;EACxB9D,GAAG,EAAErD,OAAO,CAACqD,GAAG;EAChBW,MAAM,EAAE6J,OAAO;EACf9J,OAAO,EAAE+J,QAAQ;EACjBjK,WAAW,EAAEmK,YAAY;EACzBlK,eAAe,EAAEmK,gBAAgB;EACjChK,gBAAgB,EAAEiK,iBAAiB;EACnCtK,oBAAoB,EAAEuK;AAC1B,CAAC;AACD;AACA;AACA;AACA;AACAnO,OAAO,CAACkH,WAAW,GAAG;EAClB7D,GAAG,EAAErD,OAAO,CAACqD,GAAG;EAChB0B,GAAG,EAAE+H,IAAI;EACT9I,MAAM,EAAE6J,OAAO;EACf9J,OAAO,EAAE+J,QAAQ;EACjBjK,WAAW,EAAEmK,YAAY;EACzBrK,QAAQ,EAAE4K,SAAS;EACnB7K,QAAQ,EAAE1D,OAAO,CAAC0D;AACtB,CAAC;AACD;AACA;AACA;AACA;AACA1D,OAAO,CAACiH,oBAAoB,GAAG;EAC3B5D,GAAG,EAAErD,OAAO,CAACqD,GAAG;EAChB0B,GAAG,EAAE+H,IAAI;EACThI,YAAY,EAAEkI,aAAa;EAC3BhJ,MAAM,EAAE6J,OAAO;EACf9J,OAAO,EAAE+J,QAAQ;EACjBjK,WAAW,EAAEmK,YAAY;EACzBlK,eAAe,EAAEmK,gBAAgB;EACjChK,gBAAgB,EAAEiK,iBAAiB;EACnCtK,oBAAoB,EAAEuK,qBAAqB;EAC3CxK,QAAQ,EAAE4K,SAAS;EACnB7K,QAAQ,EAAE1D,OAAO,CAAC0D,QAAQ;EAC1BD,iBAAiB,EAAEkL;AACvB,CAAC;AACD;AACA;AACA;AACA;AACA3O,OAAO,CAACgH,UAAU,GAAG;EACjB3D,GAAG,EAAErD,OAAO,CAACqD,GAAG;EAChB0B,GAAG,EAAE+H,IAAI;EACTrI,OAAO,EAAEzE,OAAO,CAACyE,OAAO;EACxBI,QAAQ,EAAE7E,OAAO,CAAC6E,QAAQ;EAC1BD,MAAM,EAAEwI,OAAO;EACf1I,SAAS,EAAE2I,UAAU;EACrB7I,SAAS,EAAEgJ,UAAU;EACrBlJ,YAAY,EAAEmJ,aAAa;EAC3BzJ,MAAM,EAAE6J,OAAO;EACf9J,OAAO,EAAE+J,QAAQ;EACjBjK,WAAW,EAAEmK,YAAY;EACzBrK,QAAQ,EAAE4K,SAAS;EACnB7K,QAAQ,EAAE1D,OAAO,CAAC0D,QAAQ;EAC1BF,MAAM,EAAEqL,OAAO;EACftL,IAAI,EAAEwL;AACV,CAAC;AACD;AACA;AACA;AACA;AACA;AACA/O,OAAO,CAAC+G,aAAa,GAAG;EACpB1D,GAAG,EAAErD,OAAO,CAACqD,GAAG;EAChBoB,OAAO,EAAEzE,OAAO,CAACyE,OAAO;EACxBI,QAAQ,EAAE7E,OAAO,CAAC6E,QAAQ;EAC1BE,GAAG,EAAE+H,IAAI;EACTzH,EAAE,EAAE4H,GAAG;EACPxH,EAAE,EAAEzF,OAAO,CAACyF,EAAE;EACdP,KAAK,EAAEuH,MAAM;EACb7H,MAAM,EAAEwI,OAAO;EACf1I,SAAS,EAAE2I,UAAU;EACrB7I,SAAS,EAAEgJ,UAAU;EACrBlJ,YAAY,EAAEmJ,aAAa;EAC3B3I,YAAY,EAAEkI,aAAa;EAC3B3I,qBAAqB,EAAEqJ,sBAAsB;EAC7CnJ,kBAAkB,EAAE+I,mBAAmB;EACvC3I,kBAAkB,EAAEyJ,mBAAmB;EACvChK,eAAe,EAAEiK,gBAAgB;EACjC/I,GAAG,EAAEqI,IAAI;EACTnI,IAAI,EAAExF,OAAO,CAACwF,IAAI;EAClBlC,MAAM,EAAEtD,OAAO,CAACsD,MAAM;EACtBU,MAAM,EAAE6J,OAAO;EACf9J,OAAO,EAAE+J,QAAQ;EACjBjK,WAAW,EAAEmK,YAAY;EACzBrK,QAAQ,EAAE4K,SAAS;EACnB7K,QAAQ,EAAE1D,OAAO,CAAC0D,QAAQ;EAC1BI,eAAe,EAAEmK,gBAAgB;EACjChK,gBAAgB,EAAEiK,iBAAiB;EACnCtK,oBAAoB,EAAEuK,qBAAqB;EAC3C1K,iBAAiB,EAAEkL,kBAAkB;EACrCxK,MAAM,EAAEmK,OAAO;EACf9K,MAAM,EAAEqL,OAAO;EACftL,IAAI,EAAEwL;AACV,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASjI,cAAc,CAACyB,CAAC,EAAEe,CAAC,EAAEpB,EAAE,EAAE;EAC9B,IAAIiB,EAAE,GAAGjB,EAAE,CAACyC,KAAK,EAAE;EACnBxB,EAAE,CAAC+G,MAAM,CAAC3H,CAAC,EAAE,CAAC,EAAEe,CAAC,CAAC;EAClB,OAAOH,EAAE;AACb;AACAnJ,OAAO,CAAC8G,cAAc,GAAGA,cAAc;AACvC;AACA;AACA;AACA;AACA,SAASD,cAAc,CAAC0B,CAAC,EAAEe,CAAC,EAAEpB,EAAE,EAAE;EAC9B,IAAIA,EAAE,CAACK,CAAC,CAAC,KAAKe,CAAC,EAAE;IACb,OAAOpB,EAAE;EACb,CAAC,MACI;IACD,IAAIiB,EAAE,GAAGjB,EAAE,CAACyC,KAAK,EAAE;IACnBxB,EAAE,CAACZ,CAAC,CAAC,GAAGe,CAAC;IACT,OAAOH,EAAE;EACb;AACJ;AACAnJ,OAAO,CAAC6G,cAAc,GAAGA,cAAc;AACvC;AACA;AACA;AACA;AACA,SAASD,cAAc,CAAC2B,CAAC,EAAEL,EAAE,EAAE;EAC3B,IAAIiB,EAAE,GAAGjB,EAAE,CAACyC,KAAK,EAAE;EACnBxB,EAAE,CAAC+G,MAAM,CAAC3H,CAAC,EAAE,CAAC,CAAC;EACf,OAAOY,EAAE;AACb;AACAnJ,OAAO,CAAC4G,cAAc,GAAGA,cAAc;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA5G,OAAO,CAAC2G,KAAK,GAAG,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAID,KAAK,GAAG,UAAUmE,SAAS,EAAE;EAAE,OAAO,UAAU3C,EAAE,EAAE;IAAE,OAAOA,EAAE,CAACxB,KAAK,CAACmE,SAAS,CAAC;EAAE,CAAC;AAAE,CAAC;AAC1F7K,OAAO,CAAC0G,KAAK,GAAGA,KAAK;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAID,IAAI,GAAG,UAAUoE,SAAS,EAAE;EAAE,OAAO,UAAU3C,EAAE,EAAE;IAAE,OAAOA,EAAE,CAACzB,IAAI,CAACoE,SAAS,CAAC;EAAE,CAAC;AAAE,CAAC;AACxF7K,OAAO,CAACyG,IAAI,GAAGA,IAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACAzG,OAAO,CAACwG,EAAE,GACV;AACAxG,OAAO,CAACyF,EAAE,CAAC,CAAC,CAAC,CAAC;AACd;AACA;AACA;AACA,IAAIc,MAAM,GAAG,UAAU4J,IAAI,EAAE;EACzB,OAAOnQ,OAAO,CAAC+E,GAAG,CAAC+C,UAAU,CAACsI,OAAO,CAACD,IAAI,CAAC,CAAC;AAChD,CAAC;AACDnQ,OAAO,CAACuG,MAAM,GAAGA,MAAM;AACvB;AACA;AACA;AACA,IAAID,IAAI,GAAG,UAAU6J,IAAI,EAAElG,CAAC,EAAE;EAC1B,OAAOjK,OAAO,CAACkF,KAAK,CAAC,UAAUoE,CAAC,EAAE;IAC9B,OAAOxB,UAAU,CAACiF,IAAI,CAAC9C,CAAC,CAACX,CAAC,CAAC,EAAEtJ,OAAO,CAAC+E,GAAG,CAAC,UAAUwE,CAAC,EAAE;MAAE,OAAOzB,UAAU,CAACuI,KAAK,CAAC/G,CAAC,EAAE6G,IAAI,EAAE5G,CAAC,CAAC;IAAE,CAAC,CAAC,CAAC;EACpG,CAAC,CAAC;AACN,CAAC;AACDvJ,OAAO,CAACsG,IAAI,GAAGA,IAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,IAAID,GAAG,GAAG,UAAU8J,IAAI,EAAE9E,EAAE,EAAE;EAC1B,OAAOvD,UAAU,CAACmH,IAAI,CAACjP,OAAO,CAAC+E,GAAG,CAAC,UAAUuE,CAAC,EAAE;IAAE,OAAO,UAAUC,CAAC,EAAE;MAAE,OAAOzB,UAAU,CAACuI,KAAK,CAAC/G,CAAC,EAAE6G,IAAI,EAAE5G,CAAC,CAAC;IAAE,CAAC;EAAE,CAAC,CAAC,EAAEvJ,OAAO,CAACqF,EAAE,CAACgG,EAAE,CAAC,CAAC;AACvI,CAAC;AACDrL,OAAO,CAACqG,GAAG,GAAGA,GAAG"},"metadata":{},"sourceType":"script"}