{"ast":null,"code":"export function getEnv(name) {\n  let defaultValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n  const value = process.env[name];\n  if (value !== undefined) {\n    return value;\n  }\n  if (defaultValue !== undefined) {\n    return defaultValue;\n  }\n  throw new Error(`Environment variable '${name}' not set`);\n}\nexport function requireEnvironmentVariable(key) {\n  const value = getEnv(key);\n  if (!value) {\n    throw new Error(`Please ensure a value exists for ${key}`);\n  }\n  return value;\n}","map":{"version":3,"names":["getEnv","name","defaultValue","undefined","value","process","env","Error","requireEnvironmentVariable","key"],"sources":["/Users/arthurfrancis/Documents/repo/imx-reactjs-integration-example/src/libs/utils.ts"],"sourcesContent":["export function getEnv(\n  name: string,\n  defaultValue: string | undefined = undefined,\n): string {\n  const value = process.env[name];\n\n  if (value !== undefined) {\n    return value;\n  }\n  if (defaultValue !== undefined) {\n    return defaultValue;\n  }\n  throw new Error(`Environment variable '${name}' not set`);\n}\n\nexport function requireEnvironmentVariable(key: string): string {\n  const value = getEnv(key);\n  if (!value) {\n    throw new Error(`Please ensure a value exists for ${key}`);\n  }\n  return value;\n}\n"],"mappings":"AAAA,OAAO,SAASA,MAAM,CACpBC,IAAY,EAEJ;EAAA,IADRC,YAAgC,uEAAGC,SAAS;EAE5C,MAAMC,KAAK,GAAGC,OAAO,CAACC,GAAG,CAACL,IAAI,CAAC;EAE/B,IAAIG,KAAK,KAAKD,SAAS,EAAE;IACvB,OAAOC,KAAK;EACd;EACA,IAAIF,YAAY,KAAKC,SAAS,EAAE;IAC9B,OAAOD,YAAY;EACrB;EACA,MAAM,IAAIK,KAAK,CAAE,yBAAwBN,IAAK,WAAU,CAAC;AAC3D;AAEA,OAAO,SAASO,0BAA0B,CAACC,GAAW,EAAU;EAC9D,MAAML,KAAK,GAAGJ,MAAM,CAACS,GAAG,CAAC;EACzB,IAAI,CAACL,KAAK,EAAE;IACV,MAAM,IAAIG,KAAK,CAAE,oCAAmCE,GAAI,EAAC,CAAC;EAC5D;EACA,OAAOL,KAAK;AACd"},"metadata":{},"sourceType":"module"}