{"ast":null,"code":"'use strict';\n\n// Gets all non-builtin properties up the prototype chain\nconst getAllProperties = object => {\n  const properties = new Set();\n  do {\n    for (const key of Reflect.ownKeys(object)) {\n      properties.add([object, key]);\n    }\n  } while ((object = Reflect.getPrototypeOf(object)) && object !== Object.prototype);\n  return properties;\n};\nmodule.exports = function (self) {\n  let {\n    include,\n    exclude\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const filter = key => {\n    const match = pattern => typeof pattern === 'string' ? key === pattern : pattern.test(key);\n    if (include) {\n      return include.some(match);\n    }\n    if (exclude) {\n      return !exclude.some(match);\n    }\n    return true;\n  };\n  for (const [object, key] of getAllProperties(self.constructor.prototype)) {\n    if (key === 'constructor' || !filter(key)) {\n      continue;\n    }\n    const descriptor = Reflect.getOwnPropertyDescriptor(object, key);\n    if (descriptor && typeof descriptor.value === 'function') {\n      self[key] = self[key].bind(self);\n    }\n  }\n  return self;\n};","map":{"version":3,"names":["getAllProperties","object","properties","Set","key","Reflect","ownKeys","add","getPrototypeOf","Object","prototype","module","exports","self","include","exclude","filter","match","pattern","test","some","constructor","descriptor","getOwnPropertyDescriptor","value","bind"],"sources":["/Users/arthurfrancis/Documents/repo/imx-reactjs-integration-example/node_modules/auto-bind/index.js"],"sourcesContent":["'use strict';\n\n// Gets all non-builtin properties up the prototype chain\nconst getAllProperties = object => {\n\tconst properties = new Set();\n\n\tdo {\n\t\tfor (const key of Reflect.ownKeys(object)) {\n\t\t\tproperties.add([object, key]);\n\t\t}\n\t} while ((object = Reflect.getPrototypeOf(object)) && object !== Object.prototype);\n\n\treturn properties;\n};\n\nmodule.exports = (self, {include, exclude} = {}) => {\n\tconst filter = key => {\n\t\tconst match = pattern => typeof pattern === 'string' ? key === pattern : pattern.test(key);\n\n\t\tif (include) {\n\t\t\treturn include.some(match);\n\t\t}\n\n\t\tif (exclude) {\n\t\t\treturn !exclude.some(match);\n\t\t}\n\n\t\treturn true;\n\t};\n\n\tfor (const [object, key] of getAllProperties(self.constructor.prototype)) {\n\t\tif (key === 'constructor' || !filter(key)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst descriptor = Reflect.getOwnPropertyDescriptor(object, key);\n\t\tif (descriptor && typeof descriptor.value === 'function') {\n\t\t\tself[key] = self[key].bind(self);\n\t\t}\n\t}\n\n\treturn self;\n};\n"],"mappings":"AAAA,YAAY;;AAEZ;AACA,MAAMA,gBAAgB,GAAGC,MAAM,IAAI;EAClC,MAAMC,UAAU,GAAG,IAAIC,GAAG,EAAE;EAE5B,GAAG;IACF,KAAK,MAAMC,GAAG,IAAIC,OAAO,CAACC,OAAO,CAACL,MAAM,CAAC,EAAE;MAC1CC,UAAU,CAACK,GAAG,CAAC,CAACN,MAAM,EAAEG,GAAG,CAAC,CAAC;IAC9B;EACD,CAAC,QAAQ,CAACH,MAAM,GAAGI,OAAO,CAACG,cAAc,CAACP,MAAM,CAAC,KAAKA,MAAM,KAAKQ,MAAM,CAACC,SAAS;EAEjF,OAAOR,UAAU;AAClB,CAAC;AAEDS,MAAM,CAACC,OAAO,GAAG,UAACC,IAAI,EAA8B;EAAA,IAA5B;IAACC,OAAO;IAAEC;EAAO,CAAC,uEAAG,CAAC,CAAC;EAC9C,MAAMC,MAAM,GAAGZ,GAAG,IAAI;IACrB,MAAMa,KAAK,GAAGC,OAAO,IAAI,OAAOA,OAAO,KAAK,QAAQ,GAAGd,GAAG,KAAKc,OAAO,GAAGA,OAAO,CAACC,IAAI,CAACf,GAAG,CAAC;IAE1F,IAAIU,OAAO,EAAE;MACZ,OAAOA,OAAO,CAACM,IAAI,CAACH,KAAK,CAAC;IAC3B;IAEA,IAAIF,OAAO,EAAE;MACZ,OAAO,CAACA,OAAO,CAACK,IAAI,CAACH,KAAK,CAAC;IAC5B;IAEA,OAAO,IAAI;EACZ,CAAC;EAED,KAAK,MAAM,CAAChB,MAAM,EAAEG,GAAG,CAAC,IAAIJ,gBAAgB,CAACa,IAAI,CAACQ,WAAW,CAACX,SAAS,CAAC,EAAE;IACzE,IAAIN,GAAG,KAAK,aAAa,IAAI,CAACY,MAAM,CAACZ,GAAG,CAAC,EAAE;MAC1C;IACD;IAEA,MAAMkB,UAAU,GAAGjB,OAAO,CAACkB,wBAAwB,CAACtB,MAAM,EAAEG,GAAG,CAAC;IAChE,IAAIkB,UAAU,IAAI,OAAOA,UAAU,CAACE,KAAK,KAAK,UAAU,EAAE;MACzDX,IAAI,CAACT,GAAG,CAAC,GAAGS,IAAI,CAACT,GAAG,CAAC,CAACqB,IAAI,CAACZ,IAAI,CAAC;IACjC;EACD;EAEA,OAAOA,IAAI;AACZ,CAAC"},"metadata":{},"sourceType":"script"}