{"ast":null,"code":"/**\n * Returns a UInt8 (0-255) which equals the given bits.\n *\n * @example\n * byte.write([0,0,1,0,1,0,1,0]) => 42\n *\n * @param {Array} byte 8 bits\n * @return {Number} 8-bit unsigned integer\n */\nexport default (function (byte) {\n  if (!Array.isArray(byte) || byte.length !== 8) throw new RangeError('invalid array length');\n  var data = 0;\n  for (var i = 0; i < 8; i++) if (byte[7 - i]) data |= 1 << i;\n  return data;\n});","map":{"version":3,"names":["byte","Array","isArray","length","RangeError","data","i"],"sources":["/Users/arthurfrancis/Documents/repo/imx-reactjs-integration-example/node_modules/bitwise/esm/byte/write.js"],"sourcesContent":["/**\n * Returns a UInt8 (0-255) which equals the given bits.\n *\n * @example\n * byte.write([0,0,1,0,1,0,1,0]) => 42\n *\n * @param {Array} byte 8 bits\n * @return {Number} 8-bit unsigned integer\n */\nexport default (function (byte) {\n    if (!Array.isArray(byte) || byte.length !== 8)\n        throw new RangeError('invalid array length');\n    var data = 0;\n    for (var i = 0; i < 8; i++)\n        if (byte[7 - i])\n            data |= 1 << i;\n    return data;\n});\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,UAAUA,IAAI,EAAE;EAC5B,IAAI,CAACC,KAAK,CAACC,OAAO,CAACF,IAAI,CAAC,IAAIA,IAAI,CAACG,MAAM,KAAK,CAAC,EACzC,MAAM,IAAIC,UAAU,CAAC,sBAAsB,CAAC;EAChD,IAAIC,IAAI,GAAG,CAAC;EACZ,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EACtB,IAAIN,IAAI,CAAC,CAAC,GAAGM,CAAC,CAAC,EACXD,IAAI,IAAI,CAAC,IAAIC,CAAC;EACtB,OAAOD,IAAI;AACf,CAAC"},"metadata":{},"sourceType":"module"}