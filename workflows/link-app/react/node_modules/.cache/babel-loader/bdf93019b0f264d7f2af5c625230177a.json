{"ast":null,"code":"import buffer from 'buffer';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\n/* global Reflect, Promise */\n\nvar extendStatics = function (d, b) {\n  extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n  };\n  return extendStatics(d, b);\n};\nfunction __extends(d, b) {\n  extendStatics(d, b);\n  function __() {\n    this.constructor = d;\n  }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\nvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\nfunction createCommonjsModule(fn, module) {\n  return module = {\n    exports: {}\n  }, fn(module, module.exports), module.exports;\n}\nvar bn = createCommonjsModule(function (module) {\n  (function (module, exports) {\n    // Utils\n    function assert(val, msg) {\n      if (!val) throw new Error(msg || 'Assertion failed');\n    }\n\n    // Could use `inherits` module, but don't want to move from single file\n    // architecture yet.\n    function inherits(ctor, superCtor) {\n      ctor.super_ = superCtor;\n      var TempCtor = function () {};\n      TempCtor.prototype = superCtor.prototype;\n      ctor.prototype = new TempCtor();\n      ctor.prototype.constructor = ctor;\n    }\n\n    // BN\n\n    function BN(number, base, endian) {\n      if (BN.isBN(number)) {\n        return number;\n      }\n      this.negative = 0;\n      this.words = null;\n      this.length = 0;\n\n      // Reduction context\n      this.red = null;\n      if (number !== null) {\n        if (base === 'le' || base === 'be') {\n          endian = base;\n          base = 10;\n        }\n        this._init(number || 0, base || 10, endian || 'be');\n      }\n    }\n    if (typeof module === 'object') {\n      module.exports = BN;\n    } else {\n      exports.BN = BN;\n    }\n    BN.BN = BN;\n    BN.wordSize = 26;\n    var Buffer;\n    try {\n      Buffer = buffer.Buffer;\n    } catch (e) {}\n    BN.isBN = function isBN(num) {\n      if (num instanceof BN) {\n        return true;\n      }\n      return num !== null && typeof num === 'object' && num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n    };\n    BN.max = function max(left, right) {\n      if (left.cmp(right) > 0) return left;\n      return right;\n    };\n    BN.min = function min(left, right) {\n      if (left.cmp(right) < 0) return left;\n      return right;\n    };\n    BN.prototype._init = function init(number, base, endian) {\n      if (typeof number === 'number') {\n        return this._initNumber(number, base, endian);\n      }\n      if (typeof number === 'object') {\n        return this._initArray(number, base, endian);\n      }\n      if (base === 'hex') {\n        base = 16;\n      }\n      assert(base === (base | 0) && base >= 2 && base <= 36);\n      number = number.toString().replace(/\\s+/g, '');\n      var start = 0;\n      if (number[0] === '-') {\n        start++;\n      }\n      if (base === 16) {\n        this._parseHex(number, start);\n      } else {\n        this._parseBase(number, base, start);\n      }\n      if (number[0] === '-') {\n        this.negative = 1;\n      }\n      this._strip();\n      if (endian !== 'le') return;\n      this._initArray(this.toArray(), base, endian);\n    };\n    BN.prototype._initNumber = function _initNumber(number, base, endian) {\n      if (number < 0) {\n        this.negative = 1;\n        number = -number;\n      }\n      if (number < 0x4000000) {\n        this.words = [number & 0x3ffffff];\n        this.length = 1;\n      } else if (number < 0x10000000000000) {\n        this.words = [number & 0x3ffffff, number / 0x4000000 & 0x3ffffff];\n        this.length = 2;\n      } else {\n        assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n        this.words = [number & 0x3ffffff, number / 0x4000000 & 0x3ffffff, 1];\n        this.length = 3;\n      }\n      if (endian !== 'le') return;\n\n      // Reverse the bytes\n      this._initArray(this.toArray(), base, endian);\n    };\n    BN.prototype._initArray = function _initArray(number, base, endian) {\n      // Perhaps a Uint8Array\n      assert(typeof number.length === 'number');\n      if (number.length <= 0) {\n        this.words = [0];\n        this.length = 1;\n        return this;\n      }\n      this.length = Math.ceil(number.length / 3);\n      this.words = new Array(this.length);\n      for (var i = 0; i < this.length; i++) {\n        this.words[i] = 0;\n      }\n      var j, w;\n      var off = 0;\n      if (endian === 'be') {\n        for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n          w = number[i] | number[i - 1] << 8 | number[i - 2] << 16;\n          this.words[j] |= w << off & 0x3ffffff;\n          this.words[j + 1] = w >>> 26 - off & 0x3ffffff;\n          off += 24;\n          if (off >= 26) {\n            off -= 26;\n            j++;\n          }\n        }\n      } else if (endian === 'le') {\n        for (i = 0, j = 0; i < number.length; i += 3) {\n          w = number[i] | number[i + 1] << 8 | number[i + 2] << 16;\n          this.words[j] |= w << off & 0x3ffffff;\n          this.words[j + 1] = w >>> 26 - off & 0x3ffffff;\n          off += 24;\n          if (off >= 26) {\n            off -= 26;\n            j++;\n          }\n        }\n      }\n      return this._strip();\n    };\n    function parseHex(str, start, end) {\n      var r = 0;\n      var len = Math.min(str.length, end);\n      var z = 0;\n      for (var i = start; i < len; i++) {\n        var c = str.charCodeAt(i) - 48;\n        r <<= 4;\n        var b;\n\n        // 'a' - 'f'\n        if (c >= 49 && c <= 54) {\n          b = c - 49 + 0xa;\n\n          // 'A' - 'F'\n        } else if (c >= 17 && c <= 22) {\n          b = c - 17 + 0xa;\n\n          // '0' - '9'\n        } else {\n          b = c;\n        }\n        r |= b;\n        z |= b;\n      }\n      assert(!(z & 0xf0), 'Invalid character in ' + str);\n      return r;\n    }\n    BN.prototype._parseHex = function _parseHex(number, start) {\n      // Create possibly bigger array to ensure that it fits the number\n      this.length = Math.ceil((number.length - start) / 6);\n      this.words = new Array(this.length);\n      for (var i = 0; i < this.length; i++) {\n        this.words[i] = 0;\n      }\n      var j, w;\n      // Scan 24-bit chunks and add them to the number\n      var off = 0;\n      for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n        w = parseHex(number, i, i + 6);\n        this.words[j] |= w << off & 0x3ffffff;\n        // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n        this.words[j + 1] |= w >>> 26 - off & 0x3fffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n      if (i + 6 !== start) {\n        w = parseHex(number, start, i + 6);\n        this.words[j] |= w << off & 0x3ffffff;\n        this.words[j + 1] |= w >>> 26 - off & 0x3fffff;\n      }\n      this._strip();\n    };\n    function parseBase(str, start, end, mul) {\n      var r = 0;\n      var b = 0;\n      var len = Math.min(str.length, end);\n      for (var i = start; i < len; i++) {\n        var c = str.charCodeAt(i) - 48;\n        r *= mul;\n\n        // 'a'\n        if (c >= 49) {\n          b = c - 49 + 0xa;\n\n          // 'A'\n        } else if (c >= 17) {\n          b = c - 17 + 0xa;\n\n          // '0' - '9'\n        } else {\n          b = c;\n        }\n        assert(c >= 0 && b < mul, 'Invalid character');\n        r += b;\n      }\n      return r;\n    }\n    BN.prototype._parseBase = function _parseBase(number, base, start) {\n      // Initialize as zero\n      this.words = [0];\n      this.length = 1;\n\n      // Find length of limb in base\n      for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n        limbLen++;\n      }\n      limbLen--;\n      limbPow = limbPow / base | 0;\n      var total = number.length - start;\n      var mod = total % limbLen;\n      var end = Math.min(total, total - mod) + start;\n      var word = 0;\n      for (var i = start; i < end; i += limbLen) {\n        word = parseBase(number, i, i + limbLen, base);\n        this.imuln(limbPow);\n        if (this.words[0] + word < 0x4000000) {\n          this.words[0] += word;\n        } else {\n          this._iaddn(word);\n        }\n      }\n      if (mod !== 0) {\n        var pow = 1;\n        word = parseBase(number, i, number.length, base);\n        for (i = 0; i < mod; i++) {\n          pow *= base;\n        }\n        this.imuln(pow);\n        if (this.words[0] + word < 0x4000000) {\n          this.words[0] += word;\n        } else {\n          this._iaddn(word);\n        }\n      }\n    };\n    BN.prototype.copy = function copy(dest) {\n      dest.words = new Array(this.length);\n      for (var i = 0; i < this.length; i++) {\n        dest.words[i] = this.words[i];\n      }\n      dest.length = this.length;\n      dest.negative = this.negative;\n      dest.red = this.red;\n    };\n    function move(dest, src) {\n      dest.words = src.words;\n      dest.length = src.length;\n      dest.negative = src.negative;\n      dest.red = src.red;\n    }\n    BN.prototype._move = function _move(dest) {\n      move(dest, this);\n    };\n    BN.prototype.clone = function clone() {\n      var r = new BN(null);\n      this.copy(r);\n      return r;\n    };\n    BN.prototype._expand = function _expand(size) {\n      while (this.length < size) {\n        this.words[this.length++] = 0;\n      }\n      return this;\n    };\n\n    // Remove leading `0` from `this`\n    BN.prototype._strip = function strip() {\n      while (this.length > 1 && this.words[this.length - 1] === 0) {\n        this.length--;\n      }\n      return this._normSign();\n    };\n    BN.prototype._normSign = function _normSign() {\n      // -0 = 0\n      if (this.length === 1 && this.words[0] === 0) {\n        this.negative = 0;\n      }\n      return this;\n    };\n\n    // Check Symbol.for because not everywhere where Symbol defined\n    // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n    if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } else {\n      BN.prototype.inspect = inspect;\n    }\n    function inspect() {\n      return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n    }\n\n    /*\n     var zeros = [];\n    var groupSizes = [];\n    var groupBases = [];\n     var s = '';\n    var i = -1;\n    while (++i < BN.wordSize) {\n      zeros[i] = s;\n      s += '0';\n    }\n    groupSizes[0] = 0;\n    groupSizes[1] = 0;\n    groupBases[0] = 0;\n    groupBases[1] = 0;\n    var base = 2 - 1;\n    while (++base < 36 + 1) {\n      var groupSize = 0;\n      var groupBase = 1;\n      while (groupBase < (1 << BN.wordSize) / base) {\n        groupBase *= base;\n        groupSize += 1;\n      }\n      groupSizes[base] = groupSize;\n      groupBases[base] = groupBase;\n    }\n     */\n\n    var zeros = ['', '0', '00', '000', '0000', '00000', '000000', '0000000', '00000000', '000000000', '0000000000', '00000000000', '000000000000', '0000000000000', '00000000000000', '000000000000000', '0000000000000000', '00000000000000000', '000000000000000000', '0000000000000000000', '00000000000000000000', '000000000000000000000', '0000000000000000000000', '00000000000000000000000', '000000000000000000000000', '0000000000000000000000000'];\n    var groupSizes = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5];\n    var groupBases = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];\n    BN.prototype.toString = function toString(base, padding) {\n      base = base || 10;\n      padding = padding | 0 || 1;\n      var out;\n      if (base === 16 || base === 'hex') {\n        out = '';\n        var off = 0;\n        var carry = 0;\n        for (var i = 0; i < this.length; i++) {\n          var w = this.words[i];\n          var word = ((w << off | carry) & 0xffffff).toString(16);\n          carry = w >>> 24 - off & 0xffffff;\n          if (carry !== 0 || i !== this.length - 1) {\n            out = zeros[6 - word.length] + word + out;\n          } else {\n            out = word + out;\n          }\n          off += 2;\n          if (off >= 26) {\n            off -= 26;\n            i--;\n          }\n        }\n        if (carry !== 0) {\n          out = carry.toString(16) + out;\n        }\n        while (out.length % padding !== 0) {\n          out = '0' + out;\n        }\n        if (this.negative !== 0) {\n          out = '-' + out;\n        }\n        return out;\n      }\n      if (base === (base | 0) && base >= 2 && base <= 36) {\n        // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n        var groupSize = groupSizes[base];\n        // var groupBase = Math.pow(base, groupSize);\n        var groupBase = groupBases[base];\n        out = '';\n        var c = this.clone();\n        c.negative = 0;\n        while (!c.isZero()) {\n          var r = c.modrn(groupBase).toString(base);\n          c = c.idivn(groupBase);\n          if (!c.isZero()) {\n            out = zeros[groupSize - r.length] + r + out;\n          } else {\n            out = r + out;\n          }\n        }\n        if (this.isZero()) {\n          out = '0' + out;\n        }\n        while (out.length % padding !== 0) {\n          out = '0' + out;\n        }\n        if (this.negative !== 0) {\n          out = '-' + out;\n        }\n        return out;\n      }\n      assert(false, 'Base should be between 2 and 36');\n    };\n    BN.prototype.toNumber = function toNumber() {\n      var ret = this.words[0];\n      if (this.length === 2) {\n        ret += this.words[1] * 0x4000000;\n      } else if (this.length === 3 && this.words[2] === 0x01) {\n        // NOTE: at this stage it is known that the top bit is set\n        ret += 0x10000000000000 + this.words[1] * 0x4000000;\n      } else if (this.length > 2) {\n        assert(false, 'Number can only safely store up to 53 bits');\n      }\n      return this.negative !== 0 ? -ret : ret;\n    };\n    BN.prototype.toJSON = function toJSON() {\n      return this.toString(16, 2);\n    };\n    if (Buffer) {\n      BN.prototype.toBuffer = function toBuffer(endian, length) {\n        return this.toArrayLike(Buffer, endian, length);\n      };\n    }\n    BN.prototype.toArray = function toArray(endian, length) {\n      return this.toArrayLike(Array, endian, length);\n    };\n    var allocate = function allocate(ArrayType, size) {\n      if (ArrayType.allocUnsafe) {\n        return ArrayType.allocUnsafe(size);\n      }\n      return new ArrayType(size);\n    };\n    BN.prototype.toArrayLike = function toArrayLike(ArrayType, endian, length) {\n      this._strip();\n      var byteLength = this.byteLength();\n      var reqLength = length || Math.max(1, byteLength);\n      assert(byteLength <= reqLength, 'byte array longer than desired length');\n      assert(reqLength > 0, 'Requested array length <= 0');\n      var res = allocate(ArrayType, reqLength);\n      var postfix = endian === 'le' ? 'LE' : 'BE';\n      this['_toArrayLike' + postfix](res, byteLength);\n      return res;\n    };\n    BN.prototype._toArrayLikeLE = function _toArrayLikeLE(res, byteLength) {\n      var position = 0;\n      var carry = 0;\n      for (var i = 0, shift = 0; i < this.length; i++) {\n        var word = this.words[i] << shift | carry;\n        res[position++] = word & 0xff;\n        if (position < res.length) {\n          res[position++] = word >> 8 & 0xff;\n        }\n        if (position < res.length) {\n          res[position++] = word >> 16 & 0xff;\n        }\n        if (shift === 6) {\n          if (position < res.length) {\n            res[position++] = word >> 24 & 0xff;\n          }\n          carry = 0;\n          shift = 0;\n        } else {\n          carry = word >>> 24;\n          shift += 2;\n        }\n      }\n      if (position < res.length) {\n        res[position++] = carry;\n        while (position < res.length) {\n          res[position++] = 0;\n        }\n      }\n    };\n    BN.prototype._toArrayLikeBE = function _toArrayLikeBE(res, byteLength) {\n      var position = res.length - 1;\n      var carry = 0;\n      for (var i = 0, shift = 0; i < this.length; i++) {\n        var word = this.words[i] << shift | carry;\n        res[position--] = word & 0xff;\n        if (position >= 0) {\n          res[position--] = word >> 8 & 0xff;\n        }\n        if (position >= 0) {\n          res[position--] = word >> 16 & 0xff;\n        }\n        if (shift === 6) {\n          if (position >= 0) {\n            res[position--] = word >> 24 & 0xff;\n          }\n          carry = 0;\n          shift = 0;\n        } else {\n          carry = word >>> 24;\n          shift += 2;\n        }\n      }\n      if (position >= 0) {\n        res[position--] = carry;\n        while (position >= 0) {\n          res[position--] = 0;\n        }\n      }\n    };\n    if (Math.clz32) {\n      BN.prototype._countBits = function _countBits(w) {\n        return 32 - Math.clz32(w);\n      };\n    } else {\n      BN.prototype._countBits = function _countBits(w) {\n        var t = w;\n        var r = 0;\n        if (t >= 0x1000) {\n          r += 13;\n          t >>>= 13;\n        }\n        if (t >= 0x40) {\n          r += 7;\n          t >>>= 7;\n        }\n        if (t >= 0x8) {\n          r += 4;\n          t >>>= 4;\n        }\n        if (t >= 0x02) {\n          r += 2;\n          t >>>= 2;\n        }\n        return r + t;\n      };\n    }\n    BN.prototype._zeroBits = function _zeroBits(w) {\n      // Short-cut\n      if (w === 0) return 26;\n      var t = w;\n      var r = 0;\n      if ((t & 0x1fff) === 0) {\n        r += 13;\n        t >>>= 13;\n      }\n      if ((t & 0x7f) === 0) {\n        r += 7;\n        t >>>= 7;\n      }\n      if ((t & 0xf) === 0) {\n        r += 4;\n        t >>>= 4;\n      }\n      if ((t & 0x3) === 0) {\n        r += 2;\n        t >>>= 2;\n      }\n      if ((t & 0x1) === 0) {\n        r++;\n      }\n      return r;\n    };\n\n    // Return number of used bits in a BN\n    BN.prototype.bitLength = function bitLength() {\n      var w = this.words[this.length - 1];\n      var hi = this._countBits(w);\n      return (this.length - 1) * 26 + hi;\n    };\n    function toBitArray(num) {\n      var w = new Array(num.bitLength());\n      for (var bit = 0; bit < w.length; bit++) {\n        var off = bit / 26 | 0;\n        var wbit = bit % 26;\n        w[bit] = num.words[off] >>> wbit & 0x01;\n      }\n      return w;\n    }\n\n    // Number of trailing zero bits\n    BN.prototype.zeroBits = function zeroBits() {\n      if (this.isZero()) return 0;\n      var r = 0;\n      for (var i = 0; i < this.length; i++) {\n        var b = this._zeroBits(this.words[i]);\n        r += b;\n        if (b !== 26) break;\n      }\n      return r;\n    };\n    BN.prototype.byteLength = function byteLength() {\n      return Math.ceil(this.bitLength() / 8);\n    };\n    BN.prototype.toTwos = function toTwos(width) {\n      if (this.negative !== 0) {\n        return this.abs().inotn(width).iaddn(1);\n      }\n      return this.clone();\n    };\n    BN.prototype.fromTwos = function fromTwos(width) {\n      if (this.testn(width - 1)) {\n        return this.notn(width).iaddn(1).ineg();\n      }\n      return this.clone();\n    };\n    BN.prototype.isNeg = function isNeg() {\n      return this.negative !== 0;\n    };\n\n    // Return negative clone of `this`\n    BN.prototype.neg = function neg() {\n      return this.clone().ineg();\n    };\n    BN.prototype.ineg = function ineg() {\n      if (!this.isZero()) {\n        this.negative ^= 1;\n      }\n      return this;\n    };\n\n    // Or `num` with `this` in-place\n    BN.prototype.iuor = function iuor(num) {\n      while (this.length < num.length) {\n        this.words[this.length++] = 0;\n      }\n      for (var i = 0; i < num.length; i++) {\n        this.words[i] = this.words[i] | num.words[i];\n      }\n      return this._strip();\n    };\n    BN.prototype.ior = function ior(num) {\n      assert((this.negative | num.negative) === 0);\n      return this.iuor(num);\n    };\n\n    // Or `num` with `this`\n    BN.prototype.or = function or(num) {\n      if (this.length > num.length) return this.clone().ior(num);\n      return num.clone().ior(this);\n    };\n    BN.prototype.uor = function uor(num) {\n      if (this.length > num.length) return this.clone().iuor(num);\n      return num.clone().iuor(this);\n    };\n\n    // And `num` with `this` in-place\n    BN.prototype.iuand = function iuand(num) {\n      // b = min-length(num, this)\n      var b;\n      if (this.length > num.length) {\n        b = num;\n      } else {\n        b = this;\n      }\n      for (var i = 0; i < b.length; i++) {\n        this.words[i] = this.words[i] & num.words[i];\n      }\n      this.length = b.length;\n      return this._strip();\n    };\n    BN.prototype.iand = function iand(num) {\n      assert((this.negative | num.negative) === 0);\n      return this.iuand(num);\n    };\n\n    // And `num` with `this`\n    BN.prototype.and = function and(num) {\n      if (this.length > num.length) return this.clone().iand(num);\n      return num.clone().iand(this);\n    };\n    BN.prototype.uand = function uand(num) {\n      if (this.length > num.length) return this.clone().iuand(num);\n      return num.clone().iuand(this);\n    };\n\n    // Xor `num` with `this` in-place\n    BN.prototype.iuxor = function iuxor(num) {\n      // a.length > b.length\n      var a;\n      var b;\n      if (this.length > num.length) {\n        a = this;\n        b = num;\n      } else {\n        a = num;\n        b = this;\n      }\n      for (var i = 0; i < b.length; i++) {\n        this.words[i] = a.words[i] ^ b.words[i];\n      }\n      if (this !== a) {\n        for (; i < a.length; i++) {\n          this.words[i] = a.words[i];\n        }\n      }\n      this.length = a.length;\n      return this._strip();\n    };\n    BN.prototype.ixor = function ixor(num) {\n      assert((this.negative | num.negative) === 0);\n      return this.iuxor(num);\n    };\n\n    // Xor `num` with `this`\n    BN.prototype.xor = function xor(num) {\n      if (this.length > num.length) return this.clone().ixor(num);\n      return num.clone().ixor(this);\n    };\n    BN.prototype.uxor = function uxor(num) {\n      if (this.length > num.length) return this.clone().iuxor(num);\n      return num.clone().iuxor(this);\n    };\n\n    // Not ``this`` with ``width`` bitwidth\n    BN.prototype.inotn = function inotn(width) {\n      assert(typeof width === 'number' && width >= 0);\n      var bytesNeeded = Math.ceil(width / 26) | 0;\n      var bitsLeft = width % 26;\n\n      // Extend the buffer with leading zeroes\n      this._expand(bytesNeeded);\n      if (bitsLeft > 0) {\n        bytesNeeded--;\n      }\n\n      // Handle complete words\n      for (var i = 0; i < bytesNeeded; i++) {\n        this.words[i] = ~this.words[i] & 0x3ffffff;\n      }\n\n      // Handle the residue\n      if (bitsLeft > 0) {\n        this.words[i] = ~this.words[i] & 0x3ffffff >> 26 - bitsLeft;\n      }\n\n      // And remove leading zeroes\n      return this._strip();\n    };\n    BN.prototype.notn = function notn(width) {\n      return this.clone().inotn(width);\n    };\n\n    // Set `bit` of `this`\n    BN.prototype.setn = function setn(bit, val) {\n      assert(typeof bit === 'number' && bit >= 0);\n      var off = bit / 26 | 0;\n      var wbit = bit % 26;\n      this._expand(off + 1);\n      if (val) {\n        this.words[off] = this.words[off] | 1 << wbit;\n      } else {\n        this.words[off] = this.words[off] & ~(1 << wbit);\n      }\n      return this._strip();\n    };\n\n    // Add `num` to `this` in-place\n    BN.prototype.iadd = function iadd(num) {\n      var r;\n\n      // negative + positive\n      if (this.negative !== 0 && num.negative === 0) {\n        this.negative = 0;\n        r = this.isub(num);\n        this.negative ^= 1;\n        return this._normSign();\n\n        // positive + negative\n      } else if (this.negative === 0 && num.negative !== 0) {\n        num.negative = 0;\n        r = this.isub(num);\n        num.negative = 1;\n        return r._normSign();\n      }\n\n      // a.length > b.length\n      var a, b;\n      if (this.length > num.length) {\n        a = this;\n        b = num;\n      } else {\n        a = num;\n        b = this;\n      }\n      var carry = 0;\n      for (var i = 0; i < b.length; i++) {\n        r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n        this.words[i] = r & 0x3ffffff;\n        carry = r >>> 26;\n      }\n      for (; carry !== 0 && i < a.length; i++) {\n        r = (a.words[i] | 0) + carry;\n        this.words[i] = r & 0x3ffffff;\n        carry = r >>> 26;\n      }\n      this.length = a.length;\n      if (carry !== 0) {\n        this.words[this.length] = carry;\n        this.length++;\n        // Copy the rest of the words\n      } else if (a !== this) {\n        for (; i < a.length; i++) {\n          this.words[i] = a.words[i];\n        }\n      }\n      return this;\n    };\n\n    // Add `num` to `this`\n    BN.prototype.add = function add(num) {\n      var res;\n      if (num.negative !== 0 && this.negative === 0) {\n        num.negative = 0;\n        res = this.sub(num);\n        num.negative ^= 1;\n        return res;\n      } else if (num.negative === 0 && this.negative !== 0) {\n        this.negative = 0;\n        res = num.sub(this);\n        this.negative = 1;\n        return res;\n      }\n      if (this.length > num.length) return this.clone().iadd(num);\n      return num.clone().iadd(this);\n    };\n\n    // Subtract `num` from `this` in-place\n    BN.prototype.isub = function isub(num) {\n      // this - (-num) = this + num\n      if (num.negative !== 0) {\n        num.negative = 0;\n        var r = this.iadd(num);\n        num.negative = 1;\n        return r._normSign();\n\n        // -this - num = -(this + num)\n      } else if (this.negative !== 0) {\n        this.negative = 0;\n        this.iadd(num);\n        this.negative = 1;\n        return this._normSign();\n      }\n\n      // At this point both numbers are positive\n      var cmp = this.cmp(num);\n\n      // Optimization - zeroify\n      if (cmp === 0) {\n        this.negative = 0;\n        this.length = 1;\n        this.words[0] = 0;\n        return this;\n      }\n\n      // a > b\n      var a, b;\n      if (cmp > 0) {\n        a = this;\n        b = num;\n      } else {\n        a = num;\n        b = this;\n      }\n      var carry = 0;\n      for (var i = 0; i < b.length; i++) {\n        r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n        carry = r >> 26;\n        this.words[i] = r & 0x3ffffff;\n      }\n      for (; carry !== 0 && i < a.length; i++) {\n        r = (a.words[i] | 0) + carry;\n        carry = r >> 26;\n        this.words[i] = r & 0x3ffffff;\n      }\n\n      // Copy rest of the words\n      if (carry === 0 && i < a.length && a !== this) {\n        for (; i < a.length; i++) {\n          this.words[i] = a.words[i];\n        }\n      }\n      this.length = Math.max(this.length, i);\n      if (a !== this) {\n        this.negative = 1;\n      }\n      return this._strip();\n    };\n\n    // Subtract `num` from `this`\n    BN.prototype.sub = function sub(num) {\n      return this.clone().isub(num);\n    };\n    function smallMulTo(self, num, out) {\n      out.negative = num.negative ^ self.negative;\n      var len = self.length + num.length | 0;\n      out.length = len;\n      len = len - 1 | 0;\n\n      // Peel one iteration (compiler can't do it, because of code complexity)\n      var a = self.words[0] | 0;\n      var b = num.words[0] | 0;\n      var r = a * b;\n      var lo = r & 0x3ffffff;\n      var carry = r / 0x4000000 | 0;\n      out.words[0] = lo;\n      for (var k = 1; k < len; k++) {\n        // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n        // note that ncarry could be >= 0x3ffffff\n        var ncarry = carry >>> 26;\n        var rword = carry & 0x3ffffff;\n        var maxJ = Math.min(k, num.length - 1);\n        for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n          var i = k - j | 0;\n          a = self.words[i] | 0;\n          b = num.words[j] | 0;\n          r = a * b + rword;\n          ncarry += r / 0x4000000 | 0;\n          rword = r & 0x3ffffff;\n        }\n        out.words[k] = rword | 0;\n        carry = ncarry | 0;\n      }\n      if (carry !== 0) {\n        out.words[k] = carry | 0;\n      } else {\n        out.length--;\n      }\n      return out._strip();\n    }\n\n    // TODO(indutny): it may be reasonable to omit it for users who don't need\n    // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n    // multiplication (like elliptic secp256k1).\n    var comb10MulTo = function comb10MulTo(self, num, out) {\n      var a = self.words;\n      var b = num.words;\n      var o = out.words;\n      var c = 0;\n      var lo;\n      var mid;\n      var hi;\n      var a0 = a[0] | 0;\n      var al0 = a0 & 0x1fff;\n      var ah0 = a0 >>> 13;\n      var a1 = a[1] | 0;\n      var al1 = a1 & 0x1fff;\n      var ah1 = a1 >>> 13;\n      var a2 = a[2] | 0;\n      var al2 = a2 & 0x1fff;\n      var ah2 = a2 >>> 13;\n      var a3 = a[3] | 0;\n      var al3 = a3 & 0x1fff;\n      var ah3 = a3 >>> 13;\n      var a4 = a[4] | 0;\n      var al4 = a4 & 0x1fff;\n      var ah4 = a4 >>> 13;\n      var a5 = a[5] | 0;\n      var al5 = a5 & 0x1fff;\n      var ah5 = a5 >>> 13;\n      var a6 = a[6] | 0;\n      var al6 = a6 & 0x1fff;\n      var ah6 = a6 >>> 13;\n      var a7 = a[7] | 0;\n      var al7 = a7 & 0x1fff;\n      var ah7 = a7 >>> 13;\n      var a8 = a[8] | 0;\n      var al8 = a8 & 0x1fff;\n      var ah8 = a8 >>> 13;\n      var a9 = a[9] | 0;\n      var al9 = a9 & 0x1fff;\n      var ah9 = a9 >>> 13;\n      var b0 = b[0] | 0;\n      var bl0 = b0 & 0x1fff;\n      var bh0 = b0 >>> 13;\n      var b1 = b[1] | 0;\n      var bl1 = b1 & 0x1fff;\n      var bh1 = b1 >>> 13;\n      var b2 = b[2] | 0;\n      var bl2 = b2 & 0x1fff;\n      var bh2 = b2 >>> 13;\n      var b3 = b[3] | 0;\n      var bl3 = b3 & 0x1fff;\n      var bh3 = b3 >>> 13;\n      var b4 = b[4] | 0;\n      var bl4 = b4 & 0x1fff;\n      var bh4 = b4 >>> 13;\n      var b5 = b[5] | 0;\n      var bl5 = b5 & 0x1fff;\n      var bh5 = b5 >>> 13;\n      var b6 = b[6] | 0;\n      var bl6 = b6 & 0x1fff;\n      var bh6 = b6 >>> 13;\n      var b7 = b[7] | 0;\n      var bl7 = b7 & 0x1fff;\n      var bh7 = b7 >>> 13;\n      var b8 = b[8] | 0;\n      var bl8 = b8 & 0x1fff;\n      var bh8 = b8 >>> 13;\n      var b9 = b[9] | 0;\n      var bl9 = b9 & 0x1fff;\n      var bh9 = b9 >>> 13;\n      out.negative = self.negative ^ num.negative;\n      out.length = 19;\n      /* k = 0 */\n      lo = Math.imul(al0, bl0);\n      mid = Math.imul(al0, bh0);\n      mid = mid + Math.imul(ah0, bl0) | 0;\n      hi = Math.imul(ah0, bh0);\n      var w0 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w0 >>> 26) | 0;\n      w0 &= 0x3ffffff;\n      /* k = 1 */\n      lo = Math.imul(al1, bl0);\n      mid = Math.imul(al1, bh0);\n      mid = mid + Math.imul(ah1, bl0) | 0;\n      hi = Math.imul(ah1, bh0);\n      lo = lo + Math.imul(al0, bl1) | 0;\n      mid = mid + Math.imul(al0, bh1) | 0;\n      mid = mid + Math.imul(ah0, bl1) | 0;\n      hi = hi + Math.imul(ah0, bh1) | 0;\n      var w1 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w1 >>> 26) | 0;\n      w1 &= 0x3ffffff;\n      /* k = 2 */\n      lo = Math.imul(al2, bl0);\n      mid = Math.imul(al2, bh0);\n      mid = mid + Math.imul(ah2, bl0) | 0;\n      hi = Math.imul(ah2, bh0);\n      lo = lo + Math.imul(al1, bl1) | 0;\n      mid = mid + Math.imul(al1, bh1) | 0;\n      mid = mid + Math.imul(ah1, bl1) | 0;\n      hi = hi + Math.imul(ah1, bh1) | 0;\n      lo = lo + Math.imul(al0, bl2) | 0;\n      mid = mid + Math.imul(al0, bh2) | 0;\n      mid = mid + Math.imul(ah0, bl2) | 0;\n      hi = hi + Math.imul(ah0, bh2) | 0;\n      var w2 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w2 >>> 26) | 0;\n      w2 &= 0x3ffffff;\n      /* k = 3 */\n      lo = Math.imul(al3, bl0);\n      mid = Math.imul(al3, bh0);\n      mid = mid + Math.imul(ah3, bl0) | 0;\n      hi = Math.imul(ah3, bh0);\n      lo = lo + Math.imul(al2, bl1) | 0;\n      mid = mid + Math.imul(al2, bh1) | 0;\n      mid = mid + Math.imul(ah2, bl1) | 0;\n      hi = hi + Math.imul(ah2, bh1) | 0;\n      lo = lo + Math.imul(al1, bl2) | 0;\n      mid = mid + Math.imul(al1, bh2) | 0;\n      mid = mid + Math.imul(ah1, bl2) | 0;\n      hi = hi + Math.imul(ah1, bh2) | 0;\n      lo = lo + Math.imul(al0, bl3) | 0;\n      mid = mid + Math.imul(al0, bh3) | 0;\n      mid = mid + Math.imul(ah0, bl3) | 0;\n      hi = hi + Math.imul(ah0, bh3) | 0;\n      var w3 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w3 >>> 26) | 0;\n      w3 &= 0x3ffffff;\n      /* k = 4 */\n      lo = Math.imul(al4, bl0);\n      mid = Math.imul(al4, bh0);\n      mid = mid + Math.imul(ah4, bl0) | 0;\n      hi = Math.imul(ah4, bh0);\n      lo = lo + Math.imul(al3, bl1) | 0;\n      mid = mid + Math.imul(al3, bh1) | 0;\n      mid = mid + Math.imul(ah3, bl1) | 0;\n      hi = hi + Math.imul(ah3, bh1) | 0;\n      lo = lo + Math.imul(al2, bl2) | 0;\n      mid = mid + Math.imul(al2, bh2) | 0;\n      mid = mid + Math.imul(ah2, bl2) | 0;\n      hi = hi + Math.imul(ah2, bh2) | 0;\n      lo = lo + Math.imul(al1, bl3) | 0;\n      mid = mid + Math.imul(al1, bh3) | 0;\n      mid = mid + Math.imul(ah1, bl3) | 0;\n      hi = hi + Math.imul(ah1, bh3) | 0;\n      lo = lo + Math.imul(al0, bl4) | 0;\n      mid = mid + Math.imul(al0, bh4) | 0;\n      mid = mid + Math.imul(ah0, bl4) | 0;\n      hi = hi + Math.imul(ah0, bh4) | 0;\n      var w4 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w4 >>> 26) | 0;\n      w4 &= 0x3ffffff;\n      /* k = 5 */\n      lo = Math.imul(al5, bl0);\n      mid = Math.imul(al5, bh0);\n      mid = mid + Math.imul(ah5, bl0) | 0;\n      hi = Math.imul(ah5, bh0);\n      lo = lo + Math.imul(al4, bl1) | 0;\n      mid = mid + Math.imul(al4, bh1) | 0;\n      mid = mid + Math.imul(ah4, bl1) | 0;\n      hi = hi + Math.imul(ah4, bh1) | 0;\n      lo = lo + Math.imul(al3, bl2) | 0;\n      mid = mid + Math.imul(al3, bh2) | 0;\n      mid = mid + Math.imul(ah3, bl2) | 0;\n      hi = hi + Math.imul(ah3, bh2) | 0;\n      lo = lo + Math.imul(al2, bl3) | 0;\n      mid = mid + Math.imul(al2, bh3) | 0;\n      mid = mid + Math.imul(ah2, bl3) | 0;\n      hi = hi + Math.imul(ah2, bh3) | 0;\n      lo = lo + Math.imul(al1, bl4) | 0;\n      mid = mid + Math.imul(al1, bh4) | 0;\n      mid = mid + Math.imul(ah1, bl4) | 0;\n      hi = hi + Math.imul(ah1, bh4) | 0;\n      lo = lo + Math.imul(al0, bl5) | 0;\n      mid = mid + Math.imul(al0, bh5) | 0;\n      mid = mid + Math.imul(ah0, bl5) | 0;\n      hi = hi + Math.imul(ah0, bh5) | 0;\n      var w5 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w5 >>> 26) | 0;\n      w5 &= 0x3ffffff;\n      /* k = 6 */\n      lo = Math.imul(al6, bl0);\n      mid = Math.imul(al6, bh0);\n      mid = mid + Math.imul(ah6, bl0) | 0;\n      hi = Math.imul(ah6, bh0);\n      lo = lo + Math.imul(al5, bl1) | 0;\n      mid = mid + Math.imul(al5, bh1) | 0;\n      mid = mid + Math.imul(ah5, bl1) | 0;\n      hi = hi + Math.imul(ah5, bh1) | 0;\n      lo = lo + Math.imul(al4, bl2) | 0;\n      mid = mid + Math.imul(al4, bh2) | 0;\n      mid = mid + Math.imul(ah4, bl2) | 0;\n      hi = hi + Math.imul(ah4, bh2) | 0;\n      lo = lo + Math.imul(al3, bl3) | 0;\n      mid = mid + Math.imul(al3, bh3) | 0;\n      mid = mid + Math.imul(ah3, bl3) | 0;\n      hi = hi + Math.imul(ah3, bh3) | 0;\n      lo = lo + Math.imul(al2, bl4) | 0;\n      mid = mid + Math.imul(al2, bh4) | 0;\n      mid = mid + Math.imul(ah2, bl4) | 0;\n      hi = hi + Math.imul(ah2, bh4) | 0;\n      lo = lo + Math.imul(al1, bl5) | 0;\n      mid = mid + Math.imul(al1, bh5) | 0;\n      mid = mid + Math.imul(ah1, bl5) | 0;\n      hi = hi + Math.imul(ah1, bh5) | 0;\n      lo = lo + Math.imul(al0, bl6) | 0;\n      mid = mid + Math.imul(al0, bh6) | 0;\n      mid = mid + Math.imul(ah0, bl6) | 0;\n      hi = hi + Math.imul(ah0, bh6) | 0;\n      var w6 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w6 >>> 26) | 0;\n      w6 &= 0x3ffffff;\n      /* k = 7 */\n      lo = Math.imul(al7, bl0);\n      mid = Math.imul(al7, bh0);\n      mid = mid + Math.imul(ah7, bl0) | 0;\n      hi = Math.imul(ah7, bh0);\n      lo = lo + Math.imul(al6, bl1) | 0;\n      mid = mid + Math.imul(al6, bh1) | 0;\n      mid = mid + Math.imul(ah6, bl1) | 0;\n      hi = hi + Math.imul(ah6, bh1) | 0;\n      lo = lo + Math.imul(al5, bl2) | 0;\n      mid = mid + Math.imul(al5, bh2) | 0;\n      mid = mid + Math.imul(ah5, bl2) | 0;\n      hi = hi + Math.imul(ah5, bh2) | 0;\n      lo = lo + Math.imul(al4, bl3) | 0;\n      mid = mid + Math.imul(al4, bh3) | 0;\n      mid = mid + Math.imul(ah4, bl3) | 0;\n      hi = hi + Math.imul(ah4, bh3) | 0;\n      lo = lo + Math.imul(al3, bl4) | 0;\n      mid = mid + Math.imul(al3, bh4) | 0;\n      mid = mid + Math.imul(ah3, bl4) | 0;\n      hi = hi + Math.imul(ah3, bh4) | 0;\n      lo = lo + Math.imul(al2, bl5) | 0;\n      mid = mid + Math.imul(al2, bh5) | 0;\n      mid = mid + Math.imul(ah2, bl5) | 0;\n      hi = hi + Math.imul(ah2, bh5) | 0;\n      lo = lo + Math.imul(al1, bl6) | 0;\n      mid = mid + Math.imul(al1, bh6) | 0;\n      mid = mid + Math.imul(ah1, bl6) | 0;\n      hi = hi + Math.imul(ah1, bh6) | 0;\n      lo = lo + Math.imul(al0, bl7) | 0;\n      mid = mid + Math.imul(al0, bh7) | 0;\n      mid = mid + Math.imul(ah0, bl7) | 0;\n      hi = hi + Math.imul(ah0, bh7) | 0;\n      var w7 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w7 >>> 26) | 0;\n      w7 &= 0x3ffffff;\n      /* k = 8 */\n      lo = Math.imul(al8, bl0);\n      mid = Math.imul(al8, bh0);\n      mid = mid + Math.imul(ah8, bl0) | 0;\n      hi = Math.imul(ah8, bh0);\n      lo = lo + Math.imul(al7, bl1) | 0;\n      mid = mid + Math.imul(al7, bh1) | 0;\n      mid = mid + Math.imul(ah7, bl1) | 0;\n      hi = hi + Math.imul(ah7, bh1) | 0;\n      lo = lo + Math.imul(al6, bl2) | 0;\n      mid = mid + Math.imul(al6, bh2) | 0;\n      mid = mid + Math.imul(ah6, bl2) | 0;\n      hi = hi + Math.imul(ah6, bh2) | 0;\n      lo = lo + Math.imul(al5, bl3) | 0;\n      mid = mid + Math.imul(al5, bh3) | 0;\n      mid = mid + Math.imul(ah5, bl3) | 0;\n      hi = hi + Math.imul(ah5, bh3) | 0;\n      lo = lo + Math.imul(al4, bl4) | 0;\n      mid = mid + Math.imul(al4, bh4) | 0;\n      mid = mid + Math.imul(ah4, bl4) | 0;\n      hi = hi + Math.imul(ah4, bh4) | 0;\n      lo = lo + Math.imul(al3, bl5) | 0;\n      mid = mid + Math.imul(al3, bh5) | 0;\n      mid = mid + Math.imul(ah3, bl5) | 0;\n      hi = hi + Math.imul(ah3, bh5) | 0;\n      lo = lo + Math.imul(al2, bl6) | 0;\n      mid = mid + Math.imul(al2, bh6) | 0;\n      mid = mid + Math.imul(ah2, bl6) | 0;\n      hi = hi + Math.imul(ah2, bh6) | 0;\n      lo = lo + Math.imul(al1, bl7) | 0;\n      mid = mid + Math.imul(al1, bh7) | 0;\n      mid = mid + Math.imul(ah1, bl7) | 0;\n      hi = hi + Math.imul(ah1, bh7) | 0;\n      lo = lo + Math.imul(al0, bl8) | 0;\n      mid = mid + Math.imul(al0, bh8) | 0;\n      mid = mid + Math.imul(ah0, bl8) | 0;\n      hi = hi + Math.imul(ah0, bh8) | 0;\n      var w8 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w8 >>> 26) | 0;\n      w8 &= 0x3ffffff;\n      /* k = 9 */\n      lo = Math.imul(al9, bl0);\n      mid = Math.imul(al9, bh0);\n      mid = mid + Math.imul(ah9, bl0) | 0;\n      hi = Math.imul(ah9, bh0);\n      lo = lo + Math.imul(al8, bl1) | 0;\n      mid = mid + Math.imul(al8, bh1) | 0;\n      mid = mid + Math.imul(ah8, bl1) | 0;\n      hi = hi + Math.imul(ah8, bh1) | 0;\n      lo = lo + Math.imul(al7, bl2) | 0;\n      mid = mid + Math.imul(al7, bh2) | 0;\n      mid = mid + Math.imul(ah7, bl2) | 0;\n      hi = hi + Math.imul(ah7, bh2) | 0;\n      lo = lo + Math.imul(al6, bl3) | 0;\n      mid = mid + Math.imul(al6, bh3) | 0;\n      mid = mid + Math.imul(ah6, bl3) | 0;\n      hi = hi + Math.imul(ah6, bh3) | 0;\n      lo = lo + Math.imul(al5, bl4) | 0;\n      mid = mid + Math.imul(al5, bh4) | 0;\n      mid = mid + Math.imul(ah5, bl4) | 0;\n      hi = hi + Math.imul(ah5, bh4) | 0;\n      lo = lo + Math.imul(al4, bl5) | 0;\n      mid = mid + Math.imul(al4, bh5) | 0;\n      mid = mid + Math.imul(ah4, bl5) | 0;\n      hi = hi + Math.imul(ah4, bh5) | 0;\n      lo = lo + Math.imul(al3, bl6) | 0;\n      mid = mid + Math.imul(al3, bh6) | 0;\n      mid = mid + Math.imul(ah3, bl6) | 0;\n      hi = hi + Math.imul(ah3, bh6) | 0;\n      lo = lo + Math.imul(al2, bl7) | 0;\n      mid = mid + Math.imul(al2, bh7) | 0;\n      mid = mid + Math.imul(ah2, bl7) | 0;\n      hi = hi + Math.imul(ah2, bh7) | 0;\n      lo = lo + Math.imul(al1, bl8) | 0;\n      mid = mid + Math.imul(al1, bh8) | 0;\n      mid = mid + Math.imul(ah1, bl8) | 0;\n      hi = hi + Math.imul(ah1, bh8) | 0;\n      lo = lo + Math.imul(al0, bl9) | 0;\n      mid = mid + Math.imul(al0, bh9) | 0;\n      mid = mid + Math.imul(ah0, bl9) | 0;\n      hi = hi + Math.imul(ah0, bh9) | 0;\n      var w9 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w9 >>> 26) | 0;\n      w9 &= 0x3ffffff;\n      /* k = 10 */\n      lo = Math.imul(al9, bl1);\n      mid = Math.imul(al9, bh1);\n      mid = mid + Math.imul(ah9, bl1) | 0;\n      hi = Math.imul(ah9, bh1);\n      lo = lo + Math.imul(al8, bl2) | 0;\n      mid = mid + Math.imul(al8, bh2) | 0;\n      mid = mid + Math.imul(ah8, bl2) | 0;\n      hi = hi + Math.imul(ah8, bh2) | 0;\n      lo = lo + Math.imul(al7, bl3) | 0;\n      mid = mid + Math.imul(al7, bh3) | 0;\n      mid = mid + Math.imul(ah7, bl3) | 0;\n      hi = hi + Math.imul(ah7, bh3) | 0;\n      lo = lo + Math.imul(al6, bl4) | 0;\n      mid = mid + Math.imul(al6, bh4) | 0;\n      mid = mid + Math.imul(ah6, bl4) | 0;\n      hi = hi + Math.imul(ah6, bh4) | 0;\n      lo = lo + Math.imul(al5, bl5) | 0;\n      mid = mid + Math.imul(al5, bh5) | 0;\n      mid = mid + Math.imul(ah5, bl5) | 0;\n      hi = hi + Math.imul(ah5, bh5) | 0;\n      lo = lo + Math.imul(al4, bl6) | 0;\n      mid = mid + Math.imul(al4, bh6) | 0;\n      mid = mid + Math.imul(ah4, bl6) | 0;\n      hi = hi + Math.imul(ah4, bh6) | 0;\n      lo = lo + Math.imul(al3, bl7) | 0;\n      mid = mid + Math.imul(al3, bh7) | 0;\n      mid = mid + Math.imul(ah3, bl7) | 0;\n      hi = hi + Math.imul(ah3, bh7) | 0;\n      lo = lo + Math.imul(al2, bl8) | 0;\n      mid = mid + Math.imul(al2, bh8) | 0;\n      mid = mid + Math.imul(ah2, bl8) | 0;\n      hi = hi + Math.imul(ah2, bh8) | 0;\n      lo = lo + Math.imul(al1, bl9) | 0;\n      mid = mid + Math.imul(al1, bh9) | 0;\n      mid = mid + Math.imul(ah1, bl9) | 0;\n      hi = hi + Math.imul(ah1, bh9) | 0;\n      var w10 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w10 >>> 26) | 0;\n      w10 &= 0x3ffffff;\n      /* k = 11 */\n      lo = Math.imul(al9, bl2);\n      mid = Math.imul(al9, bh2);\n      mid = mid + Math.imul(ah9, bl2) | 0;\n      hi = Math.imul(ah9, bh2);\n      lo = lo + Math.imul(al8, bl3) | 0;\n      mid = mid + Math.imul(al8, bh3) | 0;\n      mid = mid + Math.imul(ah8, bl3) | 0;\n      hi = hi + Math.imul(ah8, bh3) | 0;\n      lo = lo + Math.imul(al7, bl4) | 0;\n      mid = mid + Math.imul(al7, bh4) | 0;\n      mid = mid + Math.imul(ah7, bl4) | 0;\n      hi = hi + Math.imul(ah7, bh4) | 0;\n      lo = lo + Math.imul(al6, bl5) | 0;\n      mid = mid + Math.imul(al6, bh5) | 0;\n      mid = mid + Math.imul(ah6, bl5) | 0;\n      hi = hi + Math.imul(ah6, bh5) | 0;\n      lo = lo + Math.imul(al5, bl6) | 0;\n      mid = mid + Math.imul(al5, bh6) | 0;\n      mid = mid + Math.imul(ah5, bl6) | 0;\n      hi = hi + Math.imul(ah5, bh6) | 0;\n      lo = lo + Math.imul(al4, bl7) | 0;\n      mid = mid + Math.imul(al4, bh7) | 0;\n      mid = mid + Math.imul(ah4, bl7) | 0;\n      hi = hi + Math.imul(ah4, bh7) | 0;\n      lo = lo + Math.imul(al3, bl8) | 0;\n      mid = mid + Math.imul(al3, bh8) | 0;\n      mid = mid + Math.imul(ah3, bl8) | 0;\n      hi = hi + Math.imul(ah3, bh8) | 0;\n      lo = lo + Math.imul(al2, bl9) | 0;\n      mid = mid + Math.imul(al2, bh9) | 0;\n      mid = mid + Math.imul(ah2, bl9) | 0;\n      hi = hi + Math.imul(ah2, bh9) | 0;\n      var w11 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w11 >>> 26) | 0;\n      w11 &= 0x3ffffff;\n      /* k = 12 */\n      lo = Math.imul(al9, bl3);\n      mid = Math.imul(al9, bh3);\n      mid = mid + Math.imul(ah9, bl3) | 0;\n      hi = Math.imul(ah9, bh3);\n      lo = lo + Math.imul(al8, bl4) | 0;\n      mid = mid + Math.imul(al8, bh4) | 0;\n      mid = mid + Math.imul(ah8, bl4) | 0;\n      hi = hi + Math.imul(ah8, bh4) | 0;\n      lo = lo + Math.imul(al7, bl5) | 0;\n      mid = mid + Math.imul(al7, bh5) | 0;\n      mid = mid + Math.imul(ah7, bl5) | 0;\n      hi = hi + Math.imul(ah7, bh5) | 0;\n      lo = lo + Math.imul(al6, bl6) | 0;\n      mid = mid + Math.imul(al6, bh6) | 0;\n      mid = mid + Math.imul(ah6, bl6) | 0;\n      hi = hi + Math.imul(ah6, bh6) | 0;\n      lo = lo + Math.imul(al5, bl7) | 0;\n      mid = mid + Math.imul(al5, bh7) | 0;\n      mid = mid + Math.imul(ah5, bl7) | 0;\n      hi = hi + Math.imul(ah5, bh7) | 0;\n      lo = lo + Math.imul(al4, bl8) | 0;\n      mid = mid + Math.imul(al4, bh8) | 0;\n      mid = mid + Math.imul(ah4, bl8) | 0;\n      hi = hi + Math.imul(ah4, bh8) | 0;\n      lo = lo + Math.imul(al3, bl9) | 0;\n      mid = mid + Math.imul(al3, bh9) | 0;\n      mid = mid + Math.imul(ah3, bl9) | 0;\n      hi = hi + Math.imul(ah3, bh9) | 0;\n      var w12 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w12 >>> 26) | 0;\n      w12 &= 0x3ffffff;\n      /* k = 13 */\n      lo = Math.imul(al9, bl4);\n      mid = Math.imul(al9, bh4);\n      mid = mid + Math.imul(ah9, bl4) | 0;\n      hi = Math.imul(ah9, bh4);\n      lo = lo + Math.imul(al8, bl5) | 0;\n      mid = mid + Math.imul(al8, bh5) | 0;\n      mid = mid + Math.imul(ah8, bl5) | 0;\n      hi = hi + Math.imul(ah8, bh5) | 0;\n      lo = lo + Math.imul(al7, bl6) | 0;\n      mid = mid + Math.imul(al7, bh6) | 0;\n      mid = mid + Math.imul(ah7, bl6) | 0;\n      hi = hi + Math.imul(ah7, bh6) | 0;\n      lo = lo + Math.imul(al6, bl7) | 0;\n      mid = mid + Math.imul(al6, bh7) | 0;\n      mid = mid + Math.imul(ah6, bl7) | 0;\n      hi = hi + Math.imul(ah6, bh7) | 0;\n      lo = lo + Math.imul(al5, bl8) | 0;\n      mid = mid + Math.imul(al5, bh8) | 0;\n      mid = mid + Math.imul(ah5, bl8) | 0;\n      hi = hi + Math.imul(ah5, bh8) | 0;\n      lo = lo + Math.imul(al4, bl9) | 0;\n      mid = mid + Math.imul(al4, bh9) | 0;\n      mid = mid + Math.imul(ah4, bl9) | 0;\n      hi = hi + Math.imul(ah4, bh9) | 0;\n      var w13 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w13 >>> 26) | 0;\n      w13 &= 0x3ffffff;\n      /* k = 14 */\n      lo = Math.imul(al9, bl5);\n      mid = Math.imul(al9, bh5);\n      mid = mid + Math.imul(ah9, bl5) | 0;\n      hi = Math.imul(ah9, bh5);\n      lo = lo + Math.imul(al8, bl6) | 0;\n      mid = mid + Math.imul(al8, bh6) | 0;\n      mid = mid + Math.imul(ah8, bl6) | 0;\n      hi = hi + Math.imul(ah8, bh6) | 0;\n      lo = lo + Math.imul(al7, bl7) | 0;\n      mid = mid + Math.imul(al7, bh7) | 0;\n      mid = mid + Math.imul(ah7, bl7) | 0;\n      hi = hi + Math.imul(ah7, bh7) | 0;\n      lo = lo + Math.imul(al6, bl8) | 0;\n      mid = mid + Math.imul(al6, bh8) | 0;\n      mid = mid + Math.imul(ah6, bl8) | 0;\n      hi = hi + Math.imul(ah6, bh8) | 0;\n      lo = lo + Math.imul(al5, bl9) | 0;\n      mid = mid + Math.imul(al5, bh9) | 0;\n      mid = mid + Math.imul(ah5, bl9) | 0;\n      hi = hi + Math.imul(ah5, bh9) | 0;\n      var w14 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w14 >>> 26) | 0;\n      w14 &= 0x3ffffff;\n      /* k = 15 */\n      lo = Math.imul(al9, bl6);\n      mid = Math.imul(al9, bh6);\n      mid = mid + Math.imul(ah9, bl6) | 0;\n      hi = Math.imul(ah9, bh6);\n      lo = lo + Math.imul(al8, bl7) | 0;\n      mid = mid + Math.imul(al8, bh7) | 0;\n      mid = mid + Math.imul(ah8, bl7) | 0;\n      hi = hi + Math.imul(ah8, bh7) | 0;\n      lo = lo + Math.imul(al7, bl8) | 0;\n      mid = mid + Math.imul(al7, bh8) | 0;\n      mid = mid + Math.imul(ah7, bl8) | 0;\n      hi = hi + Math.imul(ah7, bh8) | 0;\n      lo = lo + Math.imul(al6, bl9) | 0;\n      mid = mid + Math.imul(al6, bh9) | 0;\n      mid = mid + Math.imul(ah6, bl9) | 0;\n      hi = hi + Math.imul(ah6, bh9) | 0;\n      var w15 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w15 >>> 26) | 0;\n      w15 &= 0x3ffffff;\n      /* k = 16 */\n      lo = Math.imul(al9, bl7);\n      mid = Math.imul(al9, bh7);\n      mid = mid + Math.imul(ah9, bl7) | 0;\n      hi = Math.imul(ah9, bh7);\n      lo = lo + Math.imul(al8, bl8) | 0;\n      mid = mid + Math.imul(al8, bh8) | 0;\n      mid = mid + Math.imul(ah8, bl8) | 0;\n      hi = hi + Math.imul(ah8, bh8) | 0;\n      lo = lo + Math.imul(al7, bl9) | 0;\n      mid = mid + Math.imul(al7, bh9) | 0;\n      mid = mid + Math.imul(ah7, bl9) | 0;\n      hi = hi + Math.imul(ah7, bh9) | 0;\n      var w16 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w16 >>> 26) | 0;\n      w16 &= 0x3ffffff;\n      /* k = 17 */\n      lo = Math.imul(al9, bl8);\n      mid = Math.imul(al9, bh8);\n      mid = mid + Math.imul(ah9, bl8) | 0;\n      hi = Math.imul(ah9, bh8);\n      lo = lo + Math.imul(al8, bl9) | 0;\n      mid = mid + Math.imul(al8, bh9) | 0;\n      mid = mid + Math.imul(ah8, bl9) | 0;\n      hi = hi + Math.imul(ah8, bh9) | 0;\n      var w17 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w17 >>> 26) | 0;\n      w17 &= 0x3ffffff;\n      /* k = 18 */\n      lo = Math.imul(al9, bl9);\n      mid = Math.imul(al9, bh9);\n      mid = mid + Math.imul(ah9, bl9) | 0;\n      hi = Math.imul(ah9, bh9);\n      var w18 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w18 >>> 26) | 0;\n      w18 &= 0x3ffffff;\n      o[0] = w0;\n      o[1] = w1;\n      o[2] = w2;\n      o[3] = w3;\n      o[4] = w4;\n      o[5] = w5;\n      o[6] = w6;\n      o[7] = w7;\n      o[8] = w8;\n      o[9] = w9;\n      o[10] = w10;\n      o[11] = w11;\n      o[12] = w12;\n      o[13] = w13;\n      o[14] = w14;\n      o[15] = w15;\n      o[16] = w16;\n      o[17] = w17;\n      o[18] = w18;\n      if (c !== 0) {\n        o[19] = c;\n        out.length++;\n      }\n      return out;\n    };\n\n    // Polyfill comb\n    if (!Math.imul) {\n      comb10MulTo = smallMulTo;\n    }\n    function bigMulTo(self, num, out) {\n      out.negative = num.negative ^ self.negative;\n      out.length = self.length + num.length;\n      var carry = 0;\n      var hncarry = 0;\n      for (var k = 0; k < out.length - 1; k++) {\n        // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n        // note that ncarry could be >= 0x3ffffff\n        var ncarry = hncarry;\n        hncarry = 0;\n        var rword = carry & 0x3ffffff;\n        var maxJ = Math.min(k, num.length - 1);\n        for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n          var i = k - j;\n          var a = self.words[i] | 0;\n          var b = num.words[j] | 0;\n          var r = a * b;\n          var lo = r & 0x3ffffff;\n          ncarry = ncarry + (r / 0x4000000 | 0) | 0;\n          lo = lo + rword | 0;\n          rword = lo & 0x3ffffff;\n          ncarry = ncarry + (lo >>> 26) | 0;\n          hncarry += ncarry >>> 26;\n          ncarry &= 0x3ffffff;\n        }\n        out.words[k] = rword;\n        carry = ncarry;\n        ncarry = hncarry;\n      }\n      if (carry !== 0) {\n        out.words[k] = carry;\n      } else {\n        out.length--;\n      }\n      return out._strip();\n    }\n    function jumboMulTo(self, num, out) {\n      // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n      // var fftm = new FFTM();\n      // return fftm.mulp(self, num, out);\n      return bigMulTo(self, num, out);\n    }\n    BN.prototype.mulTo = function mulTo(num, out) {\n      var res;\n      var len = this.length + num.length;\n      if (this.length === 10 && num.length === 10) {\n        res = comb10MulTo(this, num, out);\n      } else if (len < 63) {\n        res = smallMulTo(this, num, out);\n      } else if (len < 1024) {\n        res = bigMulTo(this, num, out);\n      } else {\n        res = jumboMulTo(this, num, out);\n      }\n      return res;\n    };\n\n    // Multiply `this` by `num`\n    BN.prototype.mul = function mul(num) {\n      var out = new BN(null);\n      out.words = new Array(this.length + num.length);\n      return this.mulTo(num, out);\n    };\n\n    // Multiply employing FFT\n    BN.prototype.mulf = function mulf(num) {\n      var out = new BN(null);\n      out.words = new Array(this.length + num.length);\n      return jumboMulTo(this, num, out);\n    };\n\n    // In-place Multiplication\n    BN.prototype.imul = function imul(num) {\n      return this.clone().mulTo(num, this);\n    };\n    BN.prototype.imuln = function imuln(num) {\n      var isNegNum = num < 0;\n      if (isNegNum) num = -num;\n      assert(typeof num === 'number');\n      assert(num < 0x4000000);\n\n      // Carry\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = (this.words[i] | 0) * num;\n        var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n        carry >>= 26;\n        carry += w / 0x4000000 | 0;\n        // NOTE: lo is 27bit maximum\n        carry += lo >>> 26;\n        this.words[i] = lo & 0x3ffffff;\n      }\n      if (carry !== 0) {\n        this.words[i] = carry;\n        this.length++;\n      }\n      return isNegNum ? this.ineg() : this;\n    };\n    BN.prototype.muln = function muln(num) {\n      return this.clone().imuln(num);\n    };\n\n    // `this` * `this`\n    BN.prototype.sqr = function sqr() {\n      return this.mul(this);\n    };\n\n    // `this` * `this` in-place\n    BN.prototype.isqr = function isqr() {\n      return this.imul(this.clone());\n    };\n\n    // Math.pow(`this`, `num`)\n    BN.prototype.pow = function pow(num) {\n      var w = toBitArray(num);\n      if (w.length === 0) return new BN(1);\n\n      // Skip leading zeroes\n      var res = this;\n      for (var i = 0; i < w.length; i++, res = res.sqr()) {\n        if (w[i] !== 0) break;\n      }\n      if (++i < w.length) {\n        for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n          if (w[i] === 0) continue;\n          res = res.mul(q);\n        }\n      }\n      return res;\n    };\n\n    // Shift-left in-place\n    BN.prototype.iushln = function iushln(bits) {\n      assert(typeof bits === 'number' && bits >= 0);\n      var r = bits % 26;\n      var s = (bits - r) / 26;\n      var carryMask = 0x3ffffff >>> 26 - r << 26 - r;\n      var i;\n      if (r !== 0) {\n        var carry = 0;\n        for (i = 0; i < this.length; i++) {\n          var newCarry = this.words[i] & carryMask;\n          var c = (this.words[i] | 0) - newCarry << r;\n          this.words[i] = c | carry;\n          carry = newCarry >>> 26 - r;\n        }\n        if (carry) {\n          this.words[i] = carry;\n          this.length++;\n        }\n      }\n      if (s !== 0) {\n        for (i = this.length - 1; i >= 0; i--) {\n          this.words[i + s] = this.words[i];\n        }\n        for (i = 0; i < s; i++) {\n          this.words[i] = 0;\n        }\n        this.length += s;\n      }\n      return this._strip();\n    };\n    BN.prototype.ishln = function ishln(bits) {\n      // TODO(indutny): implement me\n      assert(this.negative === 0);\n      return this.iushln(bits);\n    };\n\n    // Shift-right in-place\n    // NOTE: `hint` is a lowest bit before trailing zeroes\n    // NOTE: if `extended` is present - it will be filled with destroyed bits\n    BN.prototype.iushrn = function iushrn(bits, hint, extended) {\n      assert(typeof bits === 'number' && bits >= 0);\n      var h;\n      if (hint) {\n        h = (hint - hint % 26) / 26;\n      } else {\n        h = 0;\n      }\n      var r = bits % 26;\n      var s = Math.min((bits - r) / 26, this.length);\n      var mask = 0x3ffffff ^ 0x3ffffff >>> r << r;\n      var maskedWords = extended;\n      h -= s;\n      h = Math.max(0, h);\n\n      // Extended mode, copy masked part\n      if (maskedWords) {\n        for (var i = 0; i < s; i++) {\n          maskedWords.words[i] = this.words[i];\n        }\n        maskedWords.length = s;\n      }\n      if (s === 0) ;else if (this.length > s) {\n        this.length -= s;\n        for (i = 0; i < this.length; i++) {\n          this.words[i] = this.words[i + s];\n        }\n      } else {\n        this.words[0] = 0;\n        this.length = 1;\n      }\n      var carry = 0;\n      for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n        var word = this.words[i] | 0;\n        this.words[i] = carry << 26 - r | word >>> r;\n        carry = word & mask;\n      }\n\n      // Push carried bits as a mask\n      if (maskedWords && carry !== 0) {\n        maskedWords.words[maskedWords.length++] = carry;\n      }\n      if (this.length === 0) {\n        this.words[0] = 0;\n        this.length = 1;\n      }\n      return this._strip();\n    };\n    BN.prototype.ishrn = function ishrn(bits, hint, extended) {\n      // TODO(indutny): implement me\n      assert(this.negative === 0);\n      return this.iushrn(bits, hint, extended);\n    };\n\n    // Shift-left\n    BN.prototype.shln = function shln(bits) {\n      return this.clone().ishln(bits);\n    };\n    BN.prototype.ushln = function ushln(bits) {\n      return this.clone().iushln(bits);\n    };\n\n    // Shift-right\n    BN.prototype.shrn = function shrn(bits) {\n      return this.clone().ishrn(bits);\n    };\n    BN.prototype.ushrn = function ushrn(bits) {\n      return this.clone().iushrn(bits);\n    };\n\n    // Test if n bit is set\n    BN.prototype.testn = function testn(bit) {\n      assert(typeof bit === 'number' && bit >= 0);\n      var r = bit % 26;\n      var s = (bit - r) / 26;\n      var q = 1 << r;\n\n      // Fast case: bit is much higher than all existing words\n      if (this.length <= s) return false;\n\n      // Check bit and return\n      var w = this.words[s];\n      return !!(w & q);\n    };\n\n    // Return only lowers bits of number (in-place)\n    BN.prototype.imaskn = function imaskn(bits) {\n      assert(typeof bits === 'number' && bits >= 0);\n      var r = bits % 26;\n      var s = (bits - r) / 26;\n      assert(this.negative === 0, 'imaskn works only with positive numbers');\n      if (this.length <= s) {\n        return this;\n      }\n      if (r !== 0) {\n        s++;\n      }\n      this.length = Math.min(s, this.length);\n      if (r !== 0) {\n        var mask = 0x3ffffff ^ 0x3ffffff >>> r << r;\n        this.words[this.length - 1] &= mask;\n      }\n      return this._strip();\n    };\n\n    // Return only lowers bits of number\n    BN.prototype.maskn = function maskn(bits) {\n      return this.clone().imaskn(bits);\n    };\n\n    // Add plain number `num` to `this`\n    BN.prototype.iaddn = function iaddn(num) {\n      assert(typeof num === 'number');\n      assert(num < 0x4000000);\n      if (num < 0) return this.isubn(-num);\n\n      // Possible sign change\n      if (this.negative !== 0) {\n        if (this.length === 1 && (this.words[0] | 0) <= num) {\n          this.words[0] = num - (this.words[0] | 0);\n          this.negative = 0;\n          return this;\n        }\n        this.negative = 0;\n        this.isubn(num);\n        this.negative = 1;\n        return this;\n      }\n\n      // Add without checks\n      return this._iaddn(num);\n    };\n    BN.prototype._iaddn = function _iaddn(num) {\n      this.words[0] += num;\n\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n        this.words[i] -= 0x4000000;\n        if (i === this.length - 1) {\n          this.words[i + 1] = 1;\n        } else {\n          this.words[i + 1]++;\n        }\n      }\n      this.length = Math.max(this.length, i + 1);\n      return this;\n    };\n\n    // Subtract plain number `num` from `this`\n    BN.prototype.isubn = function isubn(num) {\n      assert(typeof num === 'number');\n      assert(num < 0x4000000);\n      if (num < 0) return this.iaddn(-num);\n      if (this.negative !== 0) {\n        this.negative = 0;\n        this.iaddn(num);\n        this.negative = 1;\n        return this;\n      }\n      this.words[0] -= num;\n      if (this.length === 1 && this.words[0] < 0) {\n        this.words[0] = -this.words[0];\n        this.negative = 1;\n      } else {\n        // Carry\n        for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n          this.words[i] += 0x4000000;\n          this.words[i + 1] -= 1;\n        }\n      }\n      return this._strip();\n    };\n    BN.prototype.addn = function addn(num) {\n      return this.clone().iaddn(num);\n    };\n    BN.prototype.subn = function subn(num) {\n      return this.clone().isubn(num);\n    };\n    BN.prototype.iabs = function iabs() {\n      this.negative = 0;\n      return this;\n    };\n    BN.prototype.abs = function abs() {\n      return this.clone().iabs();\n    };\n    BN.prototype._ishlnsubmul = function _ishlnsubmul(num, mul, shift) {\n      var len = num.length + shift;\n      var i;\n      this._expand(len);\n      var w;\n      var carry = 0;\n      for (i = 0; i < num.length; i++) {\n        w = (this.words[i + shift] | 0) + carry;\n        var right = (num.words[i] | 0) * mul;\n        w -= right & 0x3ffffff;\n        carry = (w >> 26) - (right / 0x4000000 | 0);\n        this.words[i + shift] = w & 0x3ffffff;\n      }\n      for (; i < this.length - shift; i++) {\n        w = (this.words[i + shift] | 0) + carry;\n        carry = w >> 26;\n        this.words[i + shift] = w & 0x3ffffff;\n      }\n      if (carry === 0) return this._strip();\n\n      // Subtraction overflow\n      assert(carry === -1);\n      carry = 0;\n      for (i = 0; i < this.length; i++) {\n        w = -(this.words[i] | 0) + carry;\n        carry = w >> 26;\n        this.words[i] = w & 0x3ffffff;\n      }\n      this.negative = 1;\n      return this._strip();\n    };\n    BN.prototype._wordDiv = function _wordDiv(num, mode) {\n      var shift = this.length - num.length;\n      var a = this.clone();\n      var b = num;\n\n      // Normalize\n      var bhi = b.words[b.length - 1] | 0;\n      var bhiBits = this._countBits(bhi);\n      shift = 26 - bhiBits;\n      if (shift !== 0) {\n        b = b.ushln(shift);\n        a.iushln(shift);\n        bhi = b.words[b.length - 1] | 0;\n      }\n\n      // Initialize quotient\n      var m = a.length - b.length;\n      var q;\n      if (mode !== 'mod') {\n        q = new BN(null);\n        q.length = m + 1;\n        q.words = new Array(q.length);\n        for (var i = 0; i < q.length; i++) {\n          q.words[i] = 0;\n        }\n      }\n      var diff = a.clone()._ishlnsubmul(b, 1, m);\n      if (diff.negative === 0) {\n        a = diff;\n        if (q) {\n          q.words[m] = 1;\n        }\n      }\n      for (var j = m - 1; j >= 0; j--) {\n        var qj = (a.words[b.length + j] | 0) * 0x4000000 + (a.words[b.length + j - 1] | 0);\n\n        // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n        // (0x7ffffff)\n        qj = Math.min(qj / bhi | 0, 0x3ffffff);\n        a._ishlnsubmul(b, qj, j);\n        while (a.negative !== 0) {\n          qj--;\n          a.negative = 0;\n          a._ishlnsubmul(b, 1, j);\n          if (!a.isZero()) {\n            a.negative ^= 1;\n          }\n        }\n        if (q) {\n          q.words[j] = qj;\n        }\n      }\n      if (q) {\n        q._strip();\n      }\n      a._strip();\n\n      // Denormalize\n      if (mode !== 'div' && shift !== 0) {\n        a.iushrn(shift);\n      }\n      return {\n        div: q || null,\n        mod: a\n      };\n    };\n\n    // NOTE: 1) `mode` can be set to `mod` to request mod only,\n    //       to `div` to request div only, or be absent to\n    //       request both div & mod\n    //       2) `positive` is true if unsigned mod is requested\n    BN.prototype.divmod = function divmod(num, mode, positive) {\n      assert(!num.isZero());\n      if (this.isZero()) {\n        return {\n          div: new BN(0),\n          mod: new BN(0)\n        };\n      }\n      var div, mod, res;\n      if (this.negative !== 0 && num.negative === 0) {\n        res = this.neg().divmod(num, mode);\n        if (mode !== 'mod') {\n          div = res.div.neg();\n        }\n        if (mode !== 'div') {\n          mod = res.mod.neg();\n          if (positive && mod.negative !== 0) {\n            mod.iadd(num);\n          }\n        }\n        return {\n          div: div,\n          mod: mod\n        };\n      }\n      if (this.negative === 0 && num.negative !== 0) {\n        res = this.divmod(num.neg(), mode);\n        if (mode !== 'mod') {\n          div = res.div.neg();\n        }\n        return {\n          div: div,\n          mod: res.mod\n        };\n      }\n      if ((this.negative & num.negative) !== 0) {\n        res = this.neg().divmod(num.neg(), mode);\n        if (mode !== 'div') {\n          mod = res.mod.neg();\n          if (positive && mod.negative !== 0) {\n            mod.isub(num);\n          }\n        }\n        return {\n          div: res.div,\n          mod: mod\n        };\n      }\n\n      // Both numbers are positive at this point\n\n      // Strip both numbers to approximate shift value\n      if (num.length > this.length || this.cmp(num) < 0) {\n        return {\n          div: new BN(0),\n          mod: this\n        };\n      }\n\n      // Very short reduction\n      if (num.length === 1) {\n        if (mode === 'div') {\n          return {\n            div: this.divn(num.words[0]),\n            mod: null\n          };\n        }\n        if (mode === 'mod') {\n          return {\n            div: null,\n            mod: new BN(this.modrn(num.words[0]))\n          };\n        }\n        return {\n          div: this.divn(num.words[0]),\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n      return this._wordDiv(num, mode);\n    };\n\n    // Find `this` / `num`\n    BN.prototype.div = function div(num) {\n      return this.divmod(num, 'div', false).div;\n    };\n\n    // Find `this` % `num`\n    BN.prototype.mod = function mod(num) {\n      return this.divmod(num, 'mod', false).mod;\n    };\n    BN.prototype.umod = function umod(num) {\n      return this.divmod(num, 'mod', true).mod;\n    };\n\n    // Find Round(`this` / `num`)\n    BN.prototype.divRound = function divRound(num) {\n      var dm = this.divmod(num);\n\n      // Fast case - exact division\n      if (dm.mod.isZero()) return dm.div;\n      var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n      var half = num.ushrn(1);\n      var r2 = num.andln(1);\n      var cmp = mod.cmp(half);\n\n      // Round down\n      if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n      // Round up\n      return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n    };\n    BN.prototype.modrn = function modrn(num) {\n      var isNegNum = num < 0;\n      if (isNegNum) num = -num;\n      assert(num <= 0x3ffffff);\n      var p = (1 << 26) % num;\n      var acc = 0;\n      for (var i = this.length - 1; i >= 0; i--) {\n        acc = (p * acc + (this.words[i] | 0)) % num;\n      }\n      return isNegNum ? -acc : acc;\n    };\n\n    // WARNING: DEPRECATED\n    BN.prototype.modn = function modn(num) {\n      return this.modrn(num);\n    };\n\n    // In-place division by number\n    BN.prototype.idivn = function idivn(num) {\n      var isNegNum = num < 0;\n      if (isNegNum) num = -num;\n      assert(num <= 0x3ffffff);\n      var carry = 0;\n      for (var i = this.length - 1; i >= 0; i--) {\n        var w = (this.words[i] | 0) + carry * 0x4000000;\n        this.words[i] = w / num | 0;\n        carry = w % num;\n      }\n      this._strip();\n      return isNegNum ? this.ineg() : this;\n    };\n    BN.prototype.divn = function divn(num) {\n      return this.clone().idivn(num);\n    };\n    BN.prototype.egcd = function egcd(p) {\n      assert(p.negative === 0);\n      assert(!p.isZero());\n      var x = this;\n      var y = p.clone();\n      if (x.negative !== 0) {\n        x = x.umod(p);\n      } else {\n        x = x.clone();\n      }\n\n      // A * x + B * y = x\n      var A = new BN(1);\n      var B = new BN(0);\n\n      // C * x + D * y = y\n      var C = new BN(0);\n      var D = new BN(1);\n      var g = 0;\n      while (x.isEven() && y.isEven()) {\n        x.iushrn(1);\n        y.iushrn(1);\n        ++g;\n      }\n      var yp = y.clone();\n      var xp = x.clone();\n      while (!x.isZero()) {\n        for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n        if (i > 0) {\n          x.iushrn(i);\n          while (i-- > 0) {\n            if (A.isOdd() || B.isOdd()) {\n              A.iadd(yp);\n              B.isub(xp);\n            }\n            A.iushrn(1);\n            B.iushrn(1);\n          }\n        }\n        for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n        if (j > 0) {\n          y.iushrn(j);\n          while (j-- > 0) {\n            if (C.isOdd() || D.isOdd()) {\n              C.iadd(yp);\n              D.isub(xp);\n            }\n            C.iushrn(1);\n            D.iushrn(1);\n          }\n        }\n        if (x.cmp(y) >= 0) {\n          x.isub(y);\n          A.isub(C);\n          B.isub(D);\n        } else {\n          y.isub(x);\n          C.isub(A);\n          D.isub(B);\n        }\n      }\n      return {\n        a: C,\n        b: D,\n        gcd: y.iushln(g)\n      };\n    };\n\n    // This is reduced incarnation of the binary EEA\n    // above, designated to invert members of the\n    // _prime_ fields F(p) at a maximal speed\n    BN.prototype._invmp = function _invmp(p) {\n      assert(p.negative === 0);\n      assert(!p.isZero());\n      var a = this;\n      var b = p.clone();\n      if (a.negative !== 0) {\n        a = a.umod(p);\n      } else {\n        a = a.clone();\n      }\n      var x1 = new BN(1);\n      var x2 = new BN(0);\n      var delta = b.clone();\n      while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n        for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n        if (i > 0) {\n          a.iushrn(i);\n          while (i-- > 0) {\n            if (x1.isOdd()) {\n              x1.iadd(delta);\n            }\n            x1.iushrn(1);\n          }\n        }\n        for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n        if (j > 0) {\n          b.iushrn(j);\n          while (j-- > 0) {\n            if (x2.isOdd()) {\n              x2.iadd(delta);\n            }\n            x2.iushrn(1);\n          }\n        }\n        if (a.cmp(b) >= 0) {\n          a.isub(b);\n          x1.isub(x2);\n        } else {\n          b.isub(a);\n          x2.isub(x1);\n        }\n      }\n      var res;\n      if (a.cmpn(1) === 0) {\n        res = x1;\n      } else {\n        res = x2;\n      }\n      if (res.cmpn(0) < 0) {\n        res.iadd(p);\n      }\n      return res;\n    };\n    BN.prototype.gcd = function gcd(num) {\n      if (this.isZero()) return num.abs();\n      if (num.isZero()) return this.abs();\n      var a = this.clone();\n      var b = num.clone();\n      a.negative = 0;\n      b.negative = 0;\n\n      // Remove common factor of two\n      for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n        a.iushrn(1);\n        b.iushrn(1);\n      }\n      do {\n        while (a.isEven()) {\n          a.iushrn(1);\n        }\n        while (b.isEven()) {\n          b.iushrn(1);\n        }\n        var r = a.cmp(b);\n        if (r < 0) {\n          // Swap `a` and `b` to make `a` always bigger than `b`\n          var t = a;\n          a = b;\n          b = t;\n        } else if (r === 0 || b.cmpn(1) === 0) {\n          break;\n        }\n        a.isub(b);\n      } while (true);\n      return b.iushln(shift);\n    };\n\n    // Invert number in the field F(num)\n    BN.prototype.invm = function invm(num) {\n      return this.egcd(num).a.umod(num);\n    };\n    BN.prototype.isEven = function isEven() {\n      return (this.words[0] & 1) === 0;\n    };\n    BN.prototype.isOdd = function isOdd() {\n      return (this.words[0] & 1) === 1;\n    };\n\n    // And first word and num\n    BN.prototype.andln = function andln(num) {\n      return this.words[0] & num;\n    };\n\n    // Increment at the bit position in-line\n    BN.prototype.bincn = function bincn(bit) {\n      assert(typeof bit === 'number');\n      var r = bit % 26;\n      var s = (bit - r) / 26;\n      var q = 1 << r;\n\n      // Fast case: bit is much higher than all existing words\n      if (this.length <= s) {\n        this._expand(s + 1);\n        this.words[s] |= q;\n        return this;\n      }\n\n      // Add bit and propagate, if needed\n      var carry = q;\n      for (var i = s; carry !== 0 && i < this.length; i++) {\n        var w = this.words[i] | 0;\n        w += carry;\n        carry = w >>> 26;\n        w &= 0x3ffffff;\n        this.words[i] = w;\n      }\n      if (carry !== 0) {\n        this.words[i] = carry;\n        this.length++;\n      }\n      return this;\n    };\n    BN.prototype.isZero = function isZero() {\n      return this.length === 1 && this.words[0] === 0;\n    };\n    BN.prototype.cmpn = function cmpn(num) {\n      var negative = num < 0;\n      if (this.negative !== 0 && !negative) return -1;\n      if (this.negative === 0 && negative) return 1;\n      this._strip();\n      var res;\n      if (this.length > 1) {\n        res = 1;\n      } else {\n        if (negative) {\n          num = -num;\n        }\n        assert(num <= 0x3ffffff, 'Number is too big');\n        var w = this.words[0] | 0;\n        res = w === num ? 0 : w < num ? -1 : 1;\n      }\n      if (this.negative !== 0) return -res | 0;\n      return res;\n    };\n\n    // Compare two numbers and return:\n    // 1 - if `this` > `num`\n    // 0 - if `this` == `num`\n    // -1 - if `this` < `num`\n    BN.prototype.cmp = function cmp(num) {\n      if (this.negative !== 0 && num.negative === 0) return -1;\n      if (this.negative === 0 && num.negative !== 0) return 1;\n      var res = this.ucmp(num);\n      if (this.negative !== 0) return -res | 0;\n      return res;\n    };\n\n    // Unsigned comparison\n    BN.prototype.ucmp = function ucmp(num) {\n      // At this point both numbers have the same sign\n      if (this.length > num.length) return 1;\n      if (this.length < num.length) return -1;\n      var res = 0;\n      for (var i = this.length - 1; i >= 0; i--) {\n        var a = this.words[i] | 0;\n        var b = num.words[i] | 0;\n        if (a === b) continue;\n        if (a < b) {\n          res = -1;\n        } else if (a > b) {\n          res = 1;\n        }\n        break;\n      }\n      return res;\n    };\n    BN.prototype.gtn = function gtn(num) {\n      return this.cmpn(num) === 1;\n    };\n    BN.prototype.gt = function gt(num) {\n      return this.cmp(num) === 1;\n    };\n    BN.prototype.gten = function gten(num) {\n      return this.cmpn(num) >= 0;\n    };\n    BN.prototype.gte = function gte(num) {\n      return this.cmp(num) >= 0;\n    };\n    BN.prototype.ltn = function ltn(num) {\n      return this.cmpn(num) === -1;\n    };\n    BN.prototype.lt = function lt(num) {\n      return this.cmp(num) === -1;\n    };\n    BN.prototype.lten = function lten(num) {\n      return this.cmpn(num) <= 0;\n    };\n    BN.prototype.lte = function lte(num) {\n      return this.cmp(num) <= 0;\n    };\n    BN.prototype.eqn = function eqn(num) {\n      return this.cmpn(num) === 0;\n    };\n    BN.prototype.eq = function eq(num) {\n      return this.cmp(num) === 0;\n    };\n\n    //\n    // A reduce context, could be using montgomery or something better, depending\n    // on the `m` itself.\n    //\n    BN.red = function red(num) {\n      return new Red(num);\n    };\n    BN.prototype.toRed = function toRed(ctx) {\n      assert(!this.red, 'Already a number in reduction context');\n      assert(this.negative === 0, 'red works only with positives');\n      return ctx.convertTo(this)._forceRed(ctx);\n    };\n    BN.prototype.fromRed = function fromRed() {\n      assert(this.red, 'fromRed works only with numbers in reduction context');\n      return this.red.convertFrom(this);\n    };\n    BN.prototype._forceRed = function _forceRed(ctx) {\n      this.red = ctx;\n      return this;\n    };\n    BN.prototype.forceRed = function forceRed(ctx) {\n      assert(!this.red, 'Already a number in reduction context');\n      return this._forceRed(ctx);\n    };\n    BN.prototype.redAdd = function redAdd(num) {\n      assert(this.red, 'redAdd works only with red numbers');\n      return this.red.add(this, num);\n    };\n    BN.prototype.redIAdd = function redIAdd(num) {\n      assert(this.red, 'redIAdd works only with red numbers');\n      return this.red.iadd(this, num);\n    };\n    BN.prototype.redSub = function redSub(num) {\n      assert(this.red, 'redSub works only with red numbers');\n      return this.red.sub(this, num);\n    };\n    BN.prototype.redISub = function redISub(num) {\n      assert(this.red, 'redISub works only with red numbers');\n      return this.red.isub(this, num);\n    };\n    BN.prototype.redShl = function redShl(num) {\n      assert(this.red, 'redShl works only with red numbers');\n      return this.red.shl(this, num);\n    };\n    BN.prototype.redMul = function redMul(num) {\n      assert(this.red, 'redMul works only with red numbers');\n      this.red._verify2(this, num);\n      return this.red.mul(this, num);\n    };\n    BN.prototype.redIMul = function redIMul(num) {\n      assert(this.red, 'redMul works only with red numbers');\n      this.red._verify2(this, num);\n      return this.red.imul(this, num);\n    };\n    BN.prototype.redSqr = function redSqr() {\n      assert(this.red, 'redSqr works only with red numbers');\n      this.red._verify1(this);\n      return this.red.sqr(this);\n    };\n    BN.prototype.redISqr = function redISqr() {\n      assert(this.red, 'redISqr works only with red numbers');\n      this.red._verify1(this);\n      return this.red.isqr(this);\n    };\n\n    // Square root over p\n    BN.prototype.redSqrt = function redSqrt() {\n      assert(this.red, 'redSqrt works only with red numbers');\n      this.red._verify1(this);\n      return this.red.sqrt(this);\n    };\n    BN.prototype.redInvm = function redInvm() {\n      assert(this.red, 'redInvm works only with red numbers');\n      this.red._verify1(this);\n      return this.red.invm(this);\n    };\n\n    // Return negative clone of `this` % `red modulo`\n    BN.prototype.redNeg = function redNeg() {\n      assert(this.red, 'redNeg works only with red numbers');\n      this.red._verify1(this);\n      return this.red.neg(this);\n    };\n    BN.prototype.redPow = function redPow(num) {\n      assert(this.red && !num.red, 'redPow(normalNum)');\n      this.red._verify1(this);\n      return this.red.pow(this, num);\n    };\n\n    // Prime numbers with efficient reduction\n    var primes = {\n      k256: null,\n      p224: null,\n      p192: null,\n      p25519: null\n    };\n\n    // Pseudo-Mersenne prime\n    function MPrime(name, p) {\n      // P = 2 ^ N - K\n      this.name = name;\n      this.p = new BN(p, 16);\n      this.n = this.p.bitLength();\n      this.k = new BN(1).iushln(this.n).isub(this.p);\n      this.tmp = this._tmp();\n    }\n    MPrime.prototype._tmp = function _tmp() {\n      var tmp = new BN(null);\n      tmp.words = new Array(Math.ceil(this.n / 13));\n      return tmp;\n    };\n    MPrime.prototype.ireduce = function ireduce(num) {\n      // Assumes that `num` is less than `P^2`\n      // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n      var r = num;\n      var rlen;\n      do {\n        this.split(r, this.tmp);\n        r = this.imulK(r);\n        r = r.iadd(this.tmp);\n        rlen = r.bitLength();\n      } while (rlen > this.n);\n      var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n      if (cmp === 0) {\n        r.words[0] = 0;\n        r.length = 1;\n      } else if (cmp > 0) {\n        r.isub(this.p);\n      } else {\n        if (r.strip !== undefined) {\n          // r is a BN v4 instance\n          r.strip();\n        } else {\n          // r is a BN v5 instance\n          r._strip();\n        }\n      }\n      return r;\n    };\n    MPrime.prototype.split = function split(input, out) {\n      input.iushrn(this.n, 0, out);\n    };\n    MPrime.prototype.imulK = function imulK(num) {\n      return num.imul(this.k);\n    };\n    function K256() {\n      MPrime.call(this, 'k256', 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n    }\n    inherits(K256, MPrime);\n    K256.prototype.split = function split(input, output) {\n      // 256 = 9 * 26 + 22\n      var mask = 0x3fffff;\n      var outLen = Math.min(input.length, 9);\n      for (var i = 0; i < outLen; i++) {\n        output.words[i] = input.words[i];\n      }\n      output.length = outLen;\n      if (input.length <= 9) {\n        input.words[0] = 0;\n        input.length = 1;\n        return;\n      }\n\n      // Shift by 9 limbs\n      var prev = input.words[9];\n      output.words[output.length++] = prev & mask;\n      for (i = 10; i < input.length; i++) {\n        var next = input.words[i] | 0;\n        input.words[i - 10] = (next & mask) << 4 | prev >>> 22;\n        prev = next;\n      }\n      prev >>>= 22;\n      input.words[i - 10] = prev;\n      if (prev === 0 && input.length > 10) {\n        input.length -= 10;\n      } else {\n        input.length -= 9;\n      }\n    };\n    K256.prototype.imulK = function imulK(num) {\n      // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n      num.words[num.length] = 0;\n      num.words[num.length + 1] = 0;\n      num.length += 2;\n\n      // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n      var lo = 0;\n      for (var i = 0; i < num.length; i++) {\n        var w = num.words[i] | 0;\n        lo += w * 0x3d1;\n        num.words[i] = lo & 0x3ffffff;\n        lo = w * 0x40 + (lo / 0x4000000 | 0);\n      }\n\n      // Fast length reduction\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n        if (num.words[num.length - 1] === 0) {\n          num.length--;\n        }\n      }\n      return num;\n    };\n    function P224() {\n      MPrime.call(this, 'p224', 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n    }\n    inherits(P224, MPrime);\n    function P192() {\n      MPrime.call(this, 'p192', 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n    }\n    inherits(P192, MPrime);\n    function P25519() {\n      // 2 ^ 255 - 19\n      MPrime.call(this, '25519', '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n    }\n    inherits(P25519, MPrime);\n    P25519.prototype.imulK = function imulK(num) {\n      // K = 0x13\n      var carry = 0;\n      for (var i = 0; i < num.length; i++) {\n        var hi = (num.words[i] | 0) * 0x13 + carry;\n        var lo = hi & 0x3ffffff;\n        hi >>>= 26;\n        num.words[i] = lo;\n        carry = hi;\n      }\n      if (carry !== 0) {\n        num.words[num.length++] = carry;\n      }\n      return num;\n    };\n\n    // Exported mostly for testing purposes, use plain name instead\n    BN._prime = function prime(name) {\n      // Cached version of prime\n      if (primes[name]) return primes[name];\n      var prime;\n      if (name === 'k256') {\n        prime = new K256();\n      } else if (name === 'p224') {\n        prime = new P224();\n      } else if (name === 'p192') {\n        prime = new P192();\n      } else if (name === 'p25519') {\n        prime = new P25519();\n      } else {\n        throw new Error('Unknown prime ' + name);\n      }\n      primes[name] = prime;\n      return prime;\n    };\n\n    //\n    // Base reduction engine\n    //\n    function Red(m) {\n      if (typeof m === 'string') {\n        var prime = BN._prime(m);\n        this.m = prime.p;\n        this.prime = prime;\n      } else {\n        assert(m.gtn(1), 'modulus must be greater than 1');\n        this.m = m;\n        this.prime = null;\n      }\n    }\n    Red.prototype._verify1 = function _verify1(a) {\n      assert(a.negative === 0, 'red works only with positives');\n      assert(a.red, 'red works only with red numbers');\n    };\n    Red.prototype._verify2 = function _verify2(a, b) {\n      assert((a.negative | b.negative) === 0, 'red works only with positives');\n      assert(a.red && a.red === b.red, 'red works only with red numbers');\n    };\n    Red.prototype.imod = function imod(a) {\n      if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n      move(a, a.umod(this.m)._forceRed(this));\n      return a;\n    };\n    Red.prototype.neg = function neg(a) {\n      if (a.isZero()) {\n        return a.clone();\n      }\n      return this.m.sub(a)._forceRed(this);\n    };\n    Red.prototype.add = function add(a, b) {\n      this._verify2(a, b);\n      var res = a.add(b);\n      if (res.cmp(this.m) >= 0) {\n        res.isub(this.m);\n      }\n      return res._forceRed(this);\n    };\n    Red.prototype.iadd = function iadd(a, b) {\n      this._verify2(a, b);\n      var res = a.iadd(b);\n      if (res.cmp(this.m) >= 0) {\n        res.isub(this.m);\n      }\n      return res;\n    };\n    Red.prototype.sub = function sub(a, b) {\n      this._verify2(a, b);\n      var res = a.sub(b);\n      if (res.cmpn(0) < 0) {\n        res.iadd(this.m);\n      }\n      return res._forceRed(this);\n    };\n    Red.prototype.isub = function isub(a, b) {\n      this._verify2(a, b);\n      var res = a.isub(b);\n      if (res.cmpn(0) < 0) {\n        res.iadd(this.m);\n      }\n      return res;\n    };\n    Red.prototype.shl = function shl(a, num) {\n      this._verify1(a);\n      return this.imod(a.ushln(num));\n    };\n    Red.prototype.imul = function imul(a, b) {\n      this._verify2(a, b);\n      return this.imod(a.imul(b));\n    };\n    Red.prototype.mul = function mul(a, b) {\n      this._verify2(a, b);\n      return this.imod(a.mul(b));\n    };\n    Red.prototype.isqr = function isqr(a) {\n      return this.imul(a, a.clone());\n    };\n    Red.prototype.sqr = function sqr(a) {\n      return this.mul(a, a);\n    };\n    Red.prototype.sqrt = function sqrt(a) {\n      if (a.isZero()) return a.clone();\n      var mod3 = this.m.andln(3);\n      assert(mod3 % 2 === 1);\n\n      // Fast case\n      if (mod3 === 3) {\n        var pow = this.m.add(new BN(1)).iushrn(2);\n        return this.pow(a, pow);\n      }\n\n      // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n      //\n      // Find Q and S, that Q * 2 ^ S = (P - 1)\n      var q = this.m.subn(1);\n      var s = 0;\n      while (!q.isZero() && q.andln(1) === 0) {\n        s++;\n        q.iushrn(1);\n      }\n      assert(!q.isZero());\n      var one = new BN(1).toRed(this);\n      var nOne = one.redNeg();\n\n      // Find quadratic non-residue\n      // NOTE: Max is such because of generalized Riemann hypothesis.\n      var lpow = this.m.subn(1).iushrn(1);\n      var z = this.m.bitLength();\n      z = new BN(2 * z * z).toRed(this);\n      while (this.pow(z, lpow).cmp(nOne) !== 0) {\n        z.redIAdd(nOne);\n      }\n      var c = this.pow(z, q);\n      var r = this.pow(a, q.addn(1).iushrn(1));\n      var t = this.pow(a, q);\n      var m = s;\n      while (t.cmp(one) !== 0) {\n        var tmp = t;\n        for (var i = 0; tmp.cmp(one) !== 0; i++) {\n          tmp = tmp.redSqr();\n        }\n        assert(i < m);\n        var b = this.pow(c, new BN(1).iushln(m - i - 1));\n        r = r.redMul(b);\n        c = b.redSqr();\n        t = t.redMul(c);\n        m = i;\n      }\n      return r;\n    };\n    Red.prototype.invm = function invm(a) {\n      var inv = a._invmp(this.m);\n      if (inv.negative !== 0) {\n        inv.negative = 0;\n        return this.imod(inv).redNeg();\n      } else {\n        return this.imod(inv);\n      }\n    };\n    Red.prototype.pow = function pow(a, num) {\n      if (num.isZero()) return new BN(1).toRed(this);\n      if (num.cmpn(1) === 0) return a.clone();\n      var windowSize = 4;\n      var wnd = new Array(1 << windowSize);\n      wnd[0] = new BN(1).toRed(this);\n      wnd[1] = a;\n      for (var i = 2; i < wnd.length; i++) {\n        wnd[i] = this.mul(wnd[i - 1], a);\n      }\n      var res = wnd[0];\n      var current = 0;\n      var currentLen = 0;\n      var start = num.bitLength() % 26;\n      if (start === 0) {\n        start = 26;\n      }\n      for (i = num.length - 1; i >= 0; i--) {\n        var word = num.words[i];\n        for (var j = start - 1; j >= 0; j--) {\n          var bit = word >> j & 1;\n          if (res !== wnd[0]) {\n            res = this.sqr(res);\n          }\n          if (bit === 0 && current === 0) {\n            currentLen = 0;\n            continue;\n          }\n          current <<= 1;\n          current |= bit;\n          currentLen++;\n          if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n          res = this.mul(res, wnd[current]);\n          currentLen = 0;\n          current = 0;\n        }\n        start = 26;\n      }\n      return res;\n    };\n    Red.prototype.convertTo = function convertTo(num) {\n      var r = num.umod(this.m);\n      return r === num ? r.clone() : r;\n    };\n    Red.prototype.convertFrom = function convertFrom(num) {\n      var res = num.clone();\n      res.red = null;\n      return res;\n    };\n\n    //\n    // Montgomery method engine\n    //\n\n    BN.mont = function mont(num) {\n      return new Mont(num);\n    };\n    function Mont(m) {\n      Red.call(this, m);\n      this.shift = this.m.bitLength();\n      if (this.shift % 26 !== 0) {\n        this.shift += 26 - this.shift % 26;\n      }\n      this.r = new BN(1).iushln(this.shift);\n      this.r2 = this.imod(this.r.sqr());\n      this.rinv = this.r._invmp(this.m);\n      this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n      this.minv = this.minv.umod(this.r);\n      this.minv = this.r.sub(this.minv);\n    }\n    inherits(Mont, Red);\n    Mont.prototype.convertTo = function convertTo(num) {\n      return this.imod(num.ushln(this.shift));\n    };\n    Mont.prototype.convertFrom = function convertFrom(num) {\n      var r = this.imod(num.mul(this.rinv));\n      r.red = null;\n      return r;\n    };\n    Mont.prototype.imul = function imul(a, b) {\n      if (a.isZero() || b.isZero()) {\n        a.words[0] = 0;\n        a.length = 1;\n        return a;\n      }\n      var t = a.imul(b);\n      var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n      var u = t.isub(c).iushrn(this.shift);\n      var res = u;\n      if (u.cmp(this.m) >= 0) {\n        res = u.isub(this.m);\n      } else if (u.cmpn(0) < 0) {\n        res = u.iadd(this.m);\n      }\n      return res._forceRed(this);\n    };\n    Mont.prototype.mul = function mul(a, b) {\n      if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n      var t = a.mul(b);\n      var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n      var u = t.isub(c).iushrn(this.shift);\n      var res = u;\n      if (u.cmp(this.m) >= 0) {\n        res = u.isub(this.m);\n      } else if (u.cmpn(0) < 0) {\n        res = u.iadd(this.m);\n      }\n      return res._forceRed(this);\n    };\n    Mont.prototype.invm = function invm(a) {\n      // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n      var res = this.imod(a._invmp(this.m).mul(this.r2));\n      return res._forceRed(this);\n    };\n  })(module, commonjsGlobal);\n});\nvar sha3 = createCommonjsModule(function (module) {\n  /**\n   * [js-sha3]{@link https://github.com/emn178/js-sha3}\n   *\n   * @version 0.8.0\n   * @author Chen, Yi-Cyuan [emn178@gmail.com]\n   * @copyright Chen, Yi-Cyuan 2015-2018\n   * @license MIT\n   */\n  /*jslint bitwise: true */\n  (function () {\n    var INPUT_ERROR = 'input is invalid type';\n    var FINALIZE_ERROR = 'finalize already called';\n    var WINDOW = typeof window === 'object';\n    var root = WINDOW ? window : {};\n    if (root.JS_SHA3_NO_WINDOW) {\n      WINDOW = false;\n    }\n    var WEB_WORKER = !WINDOW && typeof self === 'object';\n    var NODE_JS = !root.JS_SHA3_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;\n    if (NODE_JS) {\n      root = commonjsGlobal;\n    } else if (WEB_WORKER) {\n      root = self;\n    }\n    var COMMON_JS = !root.JS_SHA3_NO_COMMON_JS && 'object' === 'object' && module.exports;\n    var ARRAY_BUFFER = !root.JS_SHA3_NO_ARRAY_BUFFER && typeof ArrayBuffer !== 'undefined';\n    var HEX_CHARS = '0123456789abcdef'.split('');\n    var SHAKE_PADDING = [31, 7936, 2031616, 520093696];\n    var CSHAKE_PADDING = [4, 1024, 262144, 67108864];\n    var KECCAK_PADDING = [1, 256, 65536, 16777216];\n    var PADDING = [6, 1536, 393216, 100663296];\n    var SHIFT = [0, 8, 16, 24];\n    var RC = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649, 0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0, 2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771, 2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648, 2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648];\n    var BITS = [224, 256, 384, 512];\n    var SHAKE_BITS = [128, 256];\n    var OUTPUT_TYPES = ['hex', 'buffer', 'arrayBuffer', 'array', 'digest'];\n    var CSHAKE_BYTEPAD = {\n      '128': 168,\n      '256': 136\n    };\n    if (root.JS_SHA3_NO_NODE_JS || !Array.isArray) {\n      Array.isArray = function (obj) {\n        return Object.prototype.toString.call(obj) === '[object Array]';\n      };\n    }\n    if (ARRAY_BUFFER && (root.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView)) {\n      ArrayBuffer.isView = function (obj) {\n        return typeof obj === 'object' && obj.buffer && obj.buffer.constructor === ArrayBuffer;\n      };\n    }\n    var createOutputMethod = function (bits, padding, outputType) {\n      return function (message) {\n        return new Keccak(bits, padding, bits).update(message)[outputType]();\n      };\n    };\n    var createShakeOutputMethod = function (bits, padding, outputType) {\n      return function (message, outputBits) {\n        return new Keccak(bits, padding, outputBits).update(message)[outputType]();\n      };\n    };\n    var createCshakeOutputMethod = function (bits, padding, outputType) {\n      return function (message, outputBits, n, s) {\n        return methods['cshake' + bits].update(message, outputBits, n, s)[outputType]();\n      };\n    };\n    var createKmacOutputMethod = function (bits, padding, outputType) {\n      return function (key, message, outputBits, s) {\n        return methods['kmac' + bits].update(key, message, outputBits, s)[outputType]();\n      };\n    };\n    var createOutputMethods = function (method, createMethod, bits, padding) {\n      for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n        var type = OUTPUT_TYPES[i];\n        method[type] = createMethod(bits, padding, type);\n      }\n      return method;\n    };\n    var createMethod = function (bits, padding) {\n      var method = createOutputMethod(bits, padding, 'hex');\n      method.create = function () {\n        return new Keccak(bits, padding, bits);\n      };\n      method.update = function (message) {\n        return method.create().update(message);\n      };\n      return createOutputMethods(method, createOutputMethod, bits, padding);\n    };\n    var createShakeMethod = function (bits, padding) {\n      var method = createShakeOutputMethod(bits, padding, 'hex');\n      method.create = function (outputBits) {\n        return new Keccak(bits, padding, outputBits);\n      };\n      method.update = function (message, outputBits) {\n        return method.create(outputBits).update(message);\n      };\n      return createOutputMethods(method, createShakeOutputMethod, bits, padding);\n    };\n    var createCshakeMethod = function (bits, padding) {\n      var w = CSHAKE_BYTEPAD[bits];\n      var method = createCshakeOutputMethod(bits, padding, 'hex');\n      method.create = function (outputBits, n, s) {\n        if (!n && !s) {\n          return methods['shake' + bits].create(outputBits);\n        } else {\n          return new Keccak(bits, padding, outputBits).bytepad([n, s], w);\n        }\n      };\n      method.update = function (message, outputBits, n, s) {\n        return method.create(outputBits, n, s).update(message);\n      };\n      return createOutputMethods(method, createCshakeOutputMethod, bits, padding);\n    };\n    var createKmacMethod = function (bits, padding) {\n      var w = CSHAKE_BYTEPAD[bits];\n      var method = createKmacOutputMethod(bits, padding, 'hex');\n      method.create = function (key, outputBits, s) {\n        return new Kmac(bits, padding, outputBits).bytepad(['KMAC', s], w).bytepad([key], w);\n      };\n      method.update = function (key, message, outputBits, s) {\n        return method.create(key, outputBits, s).update(message);\n      };\n      return createOutputMethods(method, createKmacOutputMethod, bits, padding);\n    };\n    var algorithms = [{\n      name: 'keccak',\n      padding: KECCAK_PADDING,\n      bits: BITS,\n      createMethod: createMethod\n    }, {\n      name: 'sha3',\n      padding: PADDING,\n      bits: BITS,\n      createMethod: createMethod\n    }, {\n      name: 'shake',\n      padding: SHAKE_PADDING,\n      bits: SHAKE_BITS,\n      createMethod: createShakeMethod\n    }, {\n      name: 'cshake',\n      padding: CSHAKE_PADDING,\n      bits: SHAKE_BITS,\n      createMethod: createCshakeMethod\n    }, {\n      name: 'kmac',\n      padding: CSHAKE_PADDING,\n      bits: SHAKE_BITS,\n      createMethod: createKmacMethod\n    }];\n    var methods = {},\n      methodNames = [];\n    for (var i = 0; i < algorithms.length; ++i) {\n      var algorithm = algorithms[i];\n      var bits = algorithm.bits;\n      for (var j = 0; j < bits.length; ++j) {\n        var methodName = algorithm.name + '_' + bits[j];\n        methodNames.push(methodName);\n        methods[methodName] = algorithm.createMethod(bits[j], algorithm.padding);\n        if (algorithm.name !== 'sha3') {\n          var newMethodName = algorithm.name + bits[j];\n          methodNames.push(newMethodName);\n          methods[newMethodName] = methods[methodName];\n        }\n      }\n    }\n    function Keccak(bits, padding, outputBits) {\n      this.blocks = [];\n      this.s = [];\n      this.padding = padding;\n      this.outputBits = outputBits;\n      this.reset = true;\n      this.finalized = false;\n      this.block = 0;\n      this.start = 0;\n      this.blockCount = 1600 - (bits << 1) >> 5;\n      this.byteCount = this.blockCount << 2;\n      this.outputBlocks = outputBits >> 5;\n      this.extraBytes = (outputBits & 31) >> 3;\n      for (var i = 0; i < 50; ++i) {\n        this.s[i] = 0;\n      }\n    }\n    Keccak.prototype.update = function (message) {\n      if (this.finalized) {\n        throw new Error(FINALIZE_ERROR);\n      }\n      var notString,\n        type = typeof message;\n      if (type !== 'string') {\n        if (type === 'object') {\n          if (message === null) {\n            throw new Error(INPUT_ERROR);\n          } else if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {\n            message = new Uint8Array(message);\n          } else if (!Array.isArray(message)) {\n            if (!ARRAY_BUFFER || !ArrayBuffer.isView(message)) {\n              throw new Error(INPUT_ERROR);\n            }\n          }\n        } else {\n          throw new Error(INPUT_ERROR);\n        }\n        notString = true;\n      }\n      var blocks = this.blocks,\n        byteCount = this.byteCount,\n        length = message.length,\n        blockCount = this.blockCount,\n        index = 0,\n        s = this.s,\n        i,\n        code;\n      while (index < length) {\n        if (this.reset) {\n          this.reset = false;\n          blocks[0] = this.block;\n          for (i = 1; i < blockCount + 1; ++i) {\n            blocks[i] = 0;\n          }\n        }\n        if (notString) {\n          for (i = this.start; index < length && i < byteCount; ++index) {\n            blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\n          }\n        } else {\n          for (i = this.start; index < length && i < byteCount; ++index) {\n            code = message.charCodeAt(index);\n            if (code < 0x80) {\n              blocks[i >> 2] |= code << SHIFT[i++ & 3];\n            } else if (code < 0x800) {\n              blocks[i >> 2] |= (0xc0 | code >> 6) << SHIFT[i++ & 3];\n              blocks[i >> 2] |= (0x80 | code & 0x3f) << SHIFT[i++ & 3];\n            } else if (code < 0xd800 || code >= 0xe000) {\n              blocks[i >> 2] |= (0xe0 | code >> 12) << SHIFT[i++ & 3];\n              blocks[i >> 2] |= (0x80 | code >> 6 & 0x3f) << SHIFT[i++ & 3];\n              blocks[i >> 2] |= (0x80 | code & 0x3f) << SHIFT[i++ & 3];\n            } else {\n              code = 0x10000 + ((code & 0x3ff) << 10 | message.charCodeAt(++index) & 0x3ff);\n              blocks[i >> 2] |= (0xf0 | code >> 18) << SHIFT[i++ & 3];\n              blocks[i >> 2] |= (0x80 | code >> 12 & 0x3f) << SHIFT[i++ & 3];\n              blocks[i >> 2] |= (0x80 | code >> 6 & 0x3f) << SHIFT[i++ & 3];\n              blocks[i >> 2] |= (0x80 | code & 0x3f) << SHIFT[i++ & 3];\n            }\n          }\n        }\n        this.lastByteIndex = i;\n        if (i >= byteCount) {\n          this.start = i - byteCount;\n          this.block = blocks[blockCount];\n          for (i = 0; i < blockCount; ++i) {\n            s[i] ^= blocks[i];\n          }\n          f(s);\n          this.reset = true;\n        } else {\n          this.start = i;\n        }\n      }\n      return this;\n    };\n    Keccak.prototype.encode = function (x, right) {\n      var o = x & 255,\n        n = 1;\n      var bytes = [o];\n      x = x >> 8;\n      o = x & 255;\n      while (o > 0) {\n        bytes.unshift(o);\n        x = x >> 8;\n        o = x & 255;\n        ++n;\n      }\n      if (right) {\n        bytes.push(n);\n      } else {\n        bytes.unshift(n);\n      }\n      this.update(bytes);\n      return bytes.length;\n    };\n    Keccak.prototype.encodeString = function (str) {\n      var notString,\n        type = typeof str;\n      if (type !== 'string') {\n        if (type === 'object') {\n          if (str === null) {\n            throw new Error(INPUT_ERROR);\n          } else if (ARRAY_BUFFER && str.constructor === ArrayBuffer) {\n            str = new Uint8Array(str);\n          } else if (!Array.isArray(str)) {\n            if (!ARRAY_BUFFER || !ArrayBuffer.isView(str)) {\n              throw new Error(INPUT_ERROR);\n            }\n          }\n        } else {\n          throw new Error(INPUT_ERROR);\n        }\n        notString = true;\n      }\n      var bytes = 0,\n        length = str.length;\n      if (notString) {\n        bytes = length;\n      } else {\n        for (var i = 0; i < str.length; ++i) {\n          var code = str.charCodeAt(i);\n          if (code < 0x80) {\n            bytes += 1;\n          } else if (code < 0x800) {\n            bytes += 2;\n          } else if (code < 0xd800 || code >= 0xe000) {\n            bytes += 3;\n          } else {\n            code = 0x10000 + ((code & 0x3ff) << 10 | str.charCodeAt(++i) & 0x3ff);\n            bytes += 4;\n          }\n        }\n      }\n      bytes += this.encode(bytes * 8);\n      this.update(str);\n      return bytes;\n    };\n    Keccak.prototype.bytepad = function (strs, w) {\n      var bytes = this.encode(w);\n      for (var i = 0; i < strs.length; ++i) {\n        bytes += this.encodeString(strs[i]);\n      }\n      var paddingBytes = w - bytes % w;\n      var zeros = [];\n      zeros.length = paddingBytes;\n      this.update(zeros);\n      return this;\n    };\n    Keccak.prototype.finalize = function () {\n      if (this.finalized) {\n        return;\n      }\n      this.finalized = true;\n      var blocks = this.blocks,\n        i = this.lastByteIndex,\n        blockCount = this.blockCount,\n        s = this.s;\n      blocks[i >> 2] |= this.padding[i & 3];\n      if (this.lastByteIndex === this.byteCount) {\n        blocks[0] = blocks[blockCount];\n        for (i = 1; i < blockCount + 1; ++i) {\n          blocks[i] = 0;\n        }\n      }\n      blocks[blockCount - 1] |= 0x80000000;\n      for (i = 0; i < blockCount; ++i) {\n        s[i] ^= blocks[i];\n      }\n      f(s);\n    };\n    Keccak.prototype.toString = Keccak.prototype.hex = function () {\n      this.finalize();\n      var blockCount = this.blockCount,\n        s = this.s,\n        outputBlocks = this.outputBlocks,\n        extraBytes = this.extraBytes,\n        i = 0,\n        j = 0;\n      var hex = '',\n        block;\n      while (j < outputBlocks) {\n        for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n          block = s[i];\n          hex += HEX_CHARS[block >> 4 & 0x0F] + HEX_CHARS[block & 0x0F] + HEX_CHARS[block >> 12 & 0x0F] + HEX_CHARS[block >> 8 & 0x0F] + HEX_CHARS[block >> 20 & 0x0F] + HEX_CHARS[block >> 16 & 0x0F] + HEX_CHARS[block >> 28 & 0x0F] + HEX_CHARS[block >> 24 & 0x0F];\n        }\n        if (j % blockCount === 0) {\n          f(s);\n          i = 0;\n        }\n      }\n      if (extraBytes) {\n        block = s[i];\n        hex += HEX_CHARS[block >> 4 & 0x0F] + HEX_CHARS[block & 0x0F];\n        if (extraBytes > 1) {\n          hex += HEX_CHARS[block >> 12 & 0x0F] + HEX_CHARS[block >> 8 & 0x0F];\n        }\n        if (extraBytes > 2) {\n          hex += HEX_CHARS[block >> 20 & 0x0F] + HEX_CHARS[block >> 16 & 0x0F];\n        }\n      }\n      return hex;\n    };\n    Keccak.prototype.arrayBuffer = function () {\n      this.finalize();\n      var blockCount = this.blockCount,\n        s = this.s,\n        outputBlocks = this.outputBlocks,\n        extraBytes = this.extraBytes,\n        i = 0,\n        j = 0;\n      var bytes = this.outputBits >> 3;\n      var buffer;\n      if (extraBytes) {\n        buffer = new ArrayBuffer(outputBlocks + 1 << 2);\n      } else {\n        buffer = new ArrayBuffer(bytes);\n      }\n      var array = new Uint32Array(buffer);\n      while (j < outputBlocks) {\n        for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n          array[j] = s[i];\n        }\n        if (j % blockCount === 0) {\n          f(s);\n        }\n      }\n      if (extraBytes) {\n        array[i] = s[i];\n        buffer = buffer.slice(0, bytes);\n      }\n      return buffer;\n    };\n    Keccak.prototype.buffer = Keccak.prototype.arrayBuffer;\n    Keccak.prototype.digest = Keccak.prototype.array = function () {\n      this.finalize();\n      var blockCount = this.blockCount,\n        s = this.s,\n        outputBlocks = this.outputBlocks,\n        extraBytes = this.extraBytes,\n        i = 0,\n        j = 0;\n      var array = [],\n        offset,\n        block;\n      while (j < outputBlocks) {\n        for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n          offset = j << 2;\n          block = s[i];\n          array[offset] = block & 0xFF;\n          array[offset + 1] = block >> 8 & 0xFF;\n          array[offset + 2] = block >> 16 & 0xFF;\n          array[offset + 3] = block >> 24 & 0xFF;\n        }\n        if (j % blockCount === 0) {\n          f(s);\n        }\n      }\n      if (extraBytes) {\n        offset = j << 2;\n        block = s[i];\n        array[offset] = block & 0xFF;\n        if (extraBytes > 1) {\n          array[offset + 1] = block >> 8 & 0xFF;\n        }\n        if (extraBytes > 2) {\n          array[offset + 2] = block >> 16 & 0xFF;\n        }\n      }\n      return array;\n    };\n    function Kmac(bits, padding, outputBits) {\n      Keccak.call(this, bits, padding, outputBits);\n    }\n    Kmac.prototype = new Keccak();\n    Kmac.prototype.finalize = function () {\n      this.encode(this.outputBits, true);\n      return Keccak.prototype.finalize.call(this);\n    };\n    var f = function (s) {\n      var h, l, n, c0, c1, c2, c3, c4, c5, c6, c7, c8, c9, b0, b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b11, b12, b13, b14, b15, b16, b17, b18, b19, b20, b21, b22, b23, b24, b25, b26, b27, b28, b29, b30, b31, b32, b33, b34, b35, b36, b37, b38, b39, b40, b41, b42, b43, b44, b45, b46, b47, b48, b49;\n      for (n = 0; n < 48; n += 2) {\n        c0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40];\n        c1 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41];\n        c2 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42];\n        c3 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43];\n        c4 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44];\n        c5 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45];\n        c6 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46];\n        c7 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47];\n        c8 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48];\n        c9 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49];\n        h = c8 ^ (c2 << 1 | c3 >>> 31);\n        l = c9 ^ (c3 << 1 | c2 >>> 31);\n        s[0] ^= h;\n        s[1] ^= l;\n        s[10] ^= h;\n        s[11] ^= l;\n        s[20] ^= h;\n        s[21] ^= l;\n        s[30] ^= h;\n        s[31] ^= l;\n        s[40] ^= h;\n        s[41] ^= l;\n        h = c0 ^ (c4 << 1 | c5 >>> 31);\n        l = c1 ^ (c5 << 1 | c4 >>> 31);\n        s[2] ^= h;\n        s[3] ^= l;\n        s[12] ^= h;\n        s[13] ^= l;\n        s[22] ^= h;\n        s[23] ^= l;\n        s[32] ^= h;\n        s[33] ^= l;\n        s[42] ^= h;\n        s[43] ^= l;\n        h = c2 ^ (c6 << 1 | c7 >>> 31);\n        l = c3 ^ (c7 << 1 | c6 >>> 31);\n        s[4] ^= h;\n        s[5] ^= l;\n        s[14] ^= h;\n        s[15] ^= l;\n        s[24] ^= h;\n        s[25] ^= l;\n        s[34] ^= h;\n        s[35] ^= l;\n        s[44] ^= h;\n        s[45] ^= l;\n        h = c4 ^ (c8 << 1 | c9 >>> 31);\n        l = c5 ^ (c9 << 1 | c8 >>> 31);\n        s[6] ^= h;\n        s[7] ^= l;\n        s[16] ^= h;\n        s[17] ^= l;\n        s[26] ^= h;\n        s[27] ^= l;\n        s[36] ^= h;\n        s[37] ^= l;\n        s[46] ^= h;\n        s[47] ^= l;\n        h = c6 ^ (c0 << 1 | c1 >>> 31);\n        l = c7 ^ (c1 << 1 | c0 >>> 31);\n        s[8] ^= h;\n        s[9] ^= l;\n        s[18] ^= h;\n        s[19] ^= l;\n        s[28] ^= h;\n        s[29] ^= l;\n        s[38] ^= h;\n        s[39] ^= l;\n        s[48] ^= h;\n        s[49] ^= l;\n        b0 = s[0];\n        b1 = s[1];\n        b32 = s[11] << 4 | s[10] >>> 28;\n        b33 = s[10] << 4 | s[11] >>> 28;\n        b14 = s[20] << 3 | s[21] >>> 29;\n        b15 = s[21] << 3 | s[20] >>> 29;\n        b46 = s[31] << 9 | s[30] >>> 23;\n        b47 = s[30] << 9 | s[31] >>> 23;\n        b28 = s[40] << 18 | s[41] >>> 14;\n        b29 = s[41] << 18 | s[40] >>> 14;\n        b20 = s[2] << 1 | s[3] >>> 31;\n        b21 = s[3] << 1 | s[2] >>> 31;\n        b2 = s[13] << 12 | s[12] >>> 20;\n        b3 = s[12] << 12 | s[13] >>> 20;\n        b34 = s[22] << 10 | s[23] >>> 22;\n        b35 = s[23] << 10 | s[22] >>> 22;\n        b16 = s[33] << 13 | s[32] >>> 19;\n        b17 = s[32] << 13 | s[33] >>> 19;\n        b48 = s[42] << 2 | s[43] >>> 30;\n        b49 = s[43] << 2 | s[42] >>> 30;\n        b40 = s[5] << 30 | s[4] >>> 2;\n        b41 = s[4] << 30 | s[5] >>> 2;\n        b22 = s[14] << 6 | s[15] >>> 26;\n        b23 = s[15] << 6 | s[14] >>> 26;\n        b4 = s[25] << 11 | s[24] >>> 21;\n        b5 = s[24] << 11 | s[25] >>> 21;\n        b36 = s[34] << 15 | s[35] >>> 17;\n        b37 = s[35] << 15 | s[34] >>> 17;\n        b18 = s[45] << 29 | s[44] >>> 3;\n        b19 = s[44] << 29 | s[45] >>> 3;\n        b10 = s[6] << 28 | s[7] >>> 4;\n        b11 = s[7] << 28 | s[6] >>> 4;\n        b42 = s[17] << 23 | s[16] >>> 9;\n        b43 = s[16] << 23 | s[17] >>> 9;\n        b24 = s[26] << 25 | s[27] >>> 7;\n        b25 = s[27] << 25 | s[26] >>> 7;\n        b6 = s[36] << 21 | s[37] >>> 11;\n        b7 = s[37] << 21 | s[36] >>> 11;\n        b38 = s[47] << 24 | s[46] >>> 8;\n        b39 = s[46] << 24 | s[47] >>> 8;\n        b30 = s[8] << 27 | s[9] >>> 5;\n        b31 = s[9] << 27 | s[8] >>> 5;\n        b12 = s[18] << 20 | s[19] >>> 12;\n        b13 = s[19] << 20 | s[18] >>> 12;\n        b44 = s[29] << 7 | s[28] >>> 25;\n        b45 = s[28] << 7 | s[29] >>> 25;\n        b26 = s[38] << 8 | s[39] >>> 24;\n        b27 = s[39] << 8 | s[38] >>> 24;\n        b8 = s[48] << 14 | s[49] >>> 18;\n        b9 = s[49] << 14 | s[48] >>> 18;\n        s[0] = b0 ^ ~b2 & b4;\n        s[1] = b1 ^ ~b3 & b5;\n        s[10] = b10 ^ ~b12 & b14;\n        s[11] = b11 ^ ~b13 & b15;\n        s[20] = b20 ^ ~b22 & b24;\n        s[21] = b21 ^ ~b23 & b25;\n        s[30] = b30 ^ ~b32 & b34;\n        s[31] = b31 ^ ~b33 & b35;\n        s[40] = b40 ^ ~b42 & b44;\n        s[41] = b41 ^ ~b43 & b45;\n        s[2] = b2 ^ ~b4 & b6;\n        s[3] = b3 ^ ~b5 & b7;\n        s[12] = b12 ^ ~b14 & b16;\n        s[13] = b13 ^ ~b15 & b17;\n        s[22] = b22 ^ ~b24 & b26;\n        s[23] = b23 ^ ~b25 & b27;\n        s[32] = b32 ^ ~b34 & b36;\n        s[33] = b33 ^ ~b35 & b37;\n        s[42] = b42 ^ ~b44 & b46;\n        s[43] = b43 ^ ~b45 & b47;\n        s[4] = b4 ^ ~b6 & b8;\n        s[5] = b5 ^ ~b7 & b9;\n        s[14] = b14 ^ ~b16 & b18;\n        s[15] = b15 ^ ~b17 & b19;\n        s[24] = b24 ^ ~b26 & b28;\n        s[25] = b25 ^ ~b27 & b29;\n        s[34] = b34 ^ ~b36 & b38;\n        s[35] = b35 ^ ~b37 & b39;\n        s[44] = b44 ^ ~b46 & b48;\n        s[45] = b45 ^ ~b47 & b49;\n        s[6] = b6 ^ ~b8 & b0;\n        s[7] = b7 ^ ~b9 & b1;\n        s[16] = b16 ^ ~b18 & b10;\n        s[17] = b17 ^ ~b19 & b11;\n        s[26] = b26 ^ ~b28 & b20;\n        s[27] = b27 ^ ~b29 & b21;\n        s[36] = b36 ^ ~b38 & b30;\n        s[37] = b37 ^ ~b39 & b31;\n        s[46] = b46 ^ ~b48 & b40;\n        s[47] = b47 ^ ~b49 & b41;\n        s[8] = b8 ^ ~b0 & b2;\n        s[9] = b9 ^ ~b1 & b3;\n        s[18] = b18 ^ ~b10 & b12;\n        s[19] = b19 ^ ~b11 & b13;\n        s[28] = b28 ^ ~b20 & b22;\n        s[29] = b29 ^ ~b21 & b23;\n        s[38] = b38 ^ ~b30 & b32;\n        s[39] = b39 ^ ~b31 & b33;\n        s[48] = b48 ^ ~b40 & b42;\n        s[49] = b49 ^ ~b41 & b43;\n        s[0] ^= RC[n];\n        s[1] ^= RC[n + 1];\n      }\n    };\n    if (COMMON_JS) {\n      module.exports = methods;\n    } else {\n      for (i = 0; i < methodNames.length; ++i) {\n        root[methodNames[i]] = methods[methodNames[i]];\n      }\n    }\n  })();\n});\nvar DataStr = /** @class */function () {\n  function DataStr(val) {\n    if (isNaN(val)) throw Error('NaN. Not a valid input.');\n    this.val = val.toString();\n  }\n  DataStr.prototype.toString = function () {\n    return this.val;\n  };\n  DataStr.prototype.toJSON = function () {\n    return this.toString();\n  };\n  DataStr.prototype.eq = function (n) {\n    return this.toBN().eq(n.toBN());\n  };\n  return DataStr;\n}();\nvar HexString = /** @class */function (_super) {\n  __extends(HexString, _super);\n  function HexString(val) {\n    var _this = _super.call(this, val) || this;\n    _this.isHex = true;\n    if (!_this.val.startsWith('0x')) throw Error(\"Invalid value. \" + val + \" does not start with 0x\");\n    if (_this.val.length % 2 !== 0) {\n      _this.val = \"0x0\" + _this.val.substr(2);\n    }\n    return _this;\n  }\n  HexString.prototype.toBN = function () {\n    return new bn(this.val.slice(2), 'hex');\n  };\n  HexString.prototype.byteLength = function () {\n    return Math.ceil((this.val.length - 2) / 2);\n  };\n  HexString.prototype.assertLength = function (len) {\n    var leftPadding = len * 2 - (this.val.length - 2);\n    if (leftPadding < 0) throw \"It has \" + this.byteLength() + \" bytes\";else if (leftPadding > 0) {\n      var newVal = \"0x\" + Array(leftPadding).fill('0').join('') + this.val.slice(2);\n      this.val = newVal;\n    }\n  };\n  HexString.from = function (val) {\n    return new HexString(val);\n  };\n  HexString.prototype.toUintString = function () {\n    return new UintString(this.toBN().toString(10));\n  };\n  HexString.prototype.toBuffer = function () {\n    return Buffer.from(this.val.slice(2), 'hex');\n  };\n  return HexString;\n}(DataStr);\nvar NumString = /** @class */function (_super) {\n  __extends(NumString, _super);\n  function NumString(val) {\n    var _this = _super.call(this, val) || this;\n    _this.isNum = true;\n    if (val.startsWith('0x')) throw Error(\"It is not a number. \" + val + \" starts with 0x.\");\n    // always remove prefixed zeroes\n    var prefix = _this.val.startsWith('-') ? '-' : '';\n    while (_this.val.startsWith('0') && _this.val.length > 1) {\n      _this.val = _this.val.slice(1);\n    }\n    _this.val = prefix + _this.val;\n    return _this;\n  }\n  NumString.from = function (val) {\n    return new NumString(val);\n  };\n  NumString.prototype.toBN = function () {\n    return new bn(this.val, 10);\n  };\n  NumString.prototype.toBytes = function () {\n    return new HexString(\"0x\" + this.toBN().toString(16));\n  };\n  NumString.prototype.toBuffer = function () {\n    return this.toBytes().toBuffer();\n  };\n  return NumString;\n}(DataStr);\nvar UintString = /** @class */function (_super) {\n  __extends(UintString, _super);\n  function UintString(val) {\n    var _this = _super.call(this, val) || this;\n    _this.isUint = true;\n    if (_this.val.startsWith('-')) throw Error('It can not have a negative number.');\n    return _this;\n  }\n  UintString.prototype.assertThreshold = function (threshold) {\n    if (this.val.padStart(threshold.length, '0') >= threshold) {\n      throw Error('Overflow.');\n    }\n  };\n  UintString.from = function (val) {\n    return new UintString(val);\n  };\n  UintString.prototype.toHexString = function () {\n    return new HexString(\"0x\" + this.toBN().toString(16));\n  };\n  return UintString;\n}(NumString);\nvar IntString = /** @class */function (_super) {\n  __extends(IntString, _super);\n  function IntString(val) {\n    var _this = _super.call(this, val) || this;\n    _this.isInt = true;\n    return _this;\n  }\n  IntString.prototype.assertThreshold = function (threshold) {\n    if (this.val.startsWith('-')) {\n      if (this.val.slice(1) > threshold) throw Error('Underflow.');\n    } else {\n      if (this.val >= threshold) throw Error('Overflow.');\n    }\n  };\n  IntString.from = function (val) {\n    return new IntString(val);\n  };\n  return IntString;\n}(NumString);\nvar Bytes = /** @class */function (_super) {\n  __extends(Bytes, _super);\n  function Bytes(val) {\n    var _this = _super.call(this, val) || this;\n    _this.isBytes = true;\n    return _this;\n  }\n  Bytes.from = function (val) {\n    return new Bytes(val);\n  };\n  return Bytes;\n}(HexString);\nvar Byte = /** @class */function (_super) {\n  __extends(Byte, _super);\n  function Byte(val) {\n    var _this = _super.call(this, val) || this;\n    _this.isByte = true;\n    _this.assertLength(1);\n    return _this;\n  }\n  Byte.from = function (val) {\n    return new Byte(val);\n  };\n  Byte.prototype.toUint = function () {\n    return new Uint8(this.toBN().toString(10));\n  };\n  return Byte;\n}(HexString);\nvar Bytes2 = /** @class */function (_super) {\n  __extends(Bytes2, _super);\n  function Bytes2(val) {\n    var _this = _super.call(this, val) || this;\n    _this.isBytes2 = true;\n    _this.assertLength(2);\n    return _this;\n  }\n  Bytes2.from = function (val) {\n    return new Bytes2(val);\n  };\n  Bytes2.prototype.toUint = function () {\n    return new Uint16(this.toBN().toString(10));\n  };\n  return Bytes2;\n}(HexString);\nvar Bytes3 = /** @class */function (_super) {\n  __extends(Bytes3, _super);\n  function Bytes3(val) {\n    var _this = _super.call(this, val) || this;\n    _this.isBytes3 = true;\n    _this.assertLength(3);\n    return _this;\n  }\n  Bytes3.from = function (val) {\n    return new Bytes3(val);\n  };\n  Bytes3.prototype.toUint = function () {\n    return new Uint24(this.toBN().toString(10));\n  };\n  return Bytes3;\n}(HexString);\nvar Bytes4 = /** @class */function (_super) {\n  __extends(Bytes4, _super);\n  function Bytes4(val) {\n    var _this = _super.call(this, val) || this;\n    _this.isBytes4 = true;\n    _this.assertLength(4);\n    return _this;\n  }\n  Bytes4.from = function (val) {\n    return new Bytes4(val);\n  };\n  Bytes4.prototype.toUint = function () {\n    return new Uint32(this.toBN().toString(10));\n  };\n  return Bytes4;\n}(HexString);\nvar Bytes5 = /** @class */function (_super) {\n  __extends(Bytes5, _super);\n  function Bytes5(val) {\n    var _this = _super.call(this, val) || this;\n    _this.isBytes5 = true;\n    _this.assertLength(5);\n    return _this;\n  }\n  Bytes5.from = function (val) {\n    return new Bytes5(val);\n  };\n  Bytes5.prototype.toUint = function () {\n    return new Uint40(this.toBN().toString(10));\n  };\n  return Bytes5;\n}(HexString);\nvar Bytes6 = /** @class */function (_super) {\n  __extends(Bytes6, _super);\n  function Bytes6(val) {\n    var _this = _super.call(this, val) || this;\n    _this.isBytes6 = true;\n    _this.assertLength(6);\n    return _this;\n  }\n  Bytes6.from = function (val) {\n    return new Bytes6(val);\n  };\n  Bytes6.prototype.toUint = function () {\n    return new Uint48(this.toBN().toString(10));\n  };\n  return Bytes6;\n}(HexString);\nvar Bytes7 = /** @class */function (_super) {\n  __extends(Bytes7, _super);\n  function Bytes7(val) {\n    var _this = _super.call(this, val) || this;\n    _this.isBytes7 = true;\n    _this.assertLength(7);\n    return _this;\n  }\n  Bytes7.from = function (val) {\n    return new Bytes7(val);\n  };\n  Bytes7.prototype.toUint = function () {\n    return new Uint56(this.toBN().toString(10));\n  };\n  return Bytes7;\n}(HexString);\nvar Bytes8 = /** @class */function (_super) {\n  __extends(Bytes8, _super);\n  function Bytes8(val) {\n    var _this = _super.call(this, val) || this;\n    _this.isBytes8 = true;\n    _this.assertLength(8);\n    return _this;\n  }\n  Bytes8.from = function (val) {\n    return new Bytes8(val);\n  };\n  Bytes8.prototype.toUint = function () {\n    return new Uint64(this.toBN().toString(10));\n  };\n  return Bytes8;\n}(HexString);\nvar Bytes9 = /** @class */function (_super) {\n  __extends(Bytes9, _super);\n  function Bytes9(val) {\n    var _this = _super.call(this, val) || this;\n    _this.isBytes9 = true;\n    _this.assertLength(9);\n    return _this;\n  }\n  Bytes9.from = function (val) {\n    return new Bytes9(val);\n  };\n  Bytes9.prototype.toUint = function () {\n    return new Uint72(this.toBN().toString(10));\n  };\n  return Bytes9;\n}(HexString);\nvar Bytes10 = /** @class */function (_super) {\n  __extends(Bytes10, _super);\n  function Bytes10(val) {\n    var _this = _super.call(this, val) || this;\n    _this.isBytes10 = true;\n    _this.assertLength(10);\n    return _this;\n  }\n  Bytes10.from = function (val) {\n    return new Bytes10(val);\n  };\n  Bytes10.prototype.toUint = function () {\n    return new Uint80(this.toBN().toString(10));\n  };\n  return Bytes10;\n}(HexString);\nvar Bytes11 = /** @class */function (_super) {\n  __extends(Bytes11, _super);\n  function Bytes11(val) {\n    var _this = _super.call(this, val) || this;\n    _this.isBytes11 = true;\n    _this.assertLength(11);\n    return _this;\n  }\n  Bytes11.from = function (val) {\n    return new Bytes11(val);\n  };\n  Bytes11.prototype.toUint = function () {\n    return new Uint88(this.toBN().toString(10));\n  };\n  return Bytes11;\n}(HexString);\nvar Bytes12 = /** @class */function (_super) {\n  __extends(Bytes12, _super);\n  function Bytes12(val) {\n    var _this = _super.call(this, val) || this;\n    _this.isBytes12 = true;\n    _this.assertLength(12);\n    return _this;\n  }\n  Bytes12.from = function (val) {\n    return new Bytes12(val);\n  };\n  Bytes12.prototype.toUint = function () {\n    return new Uint96(this.toBN().toString(10));\n  };\n  return Bytes12;\n}(HexString);\nvar Bytes13 = /** @class */function (_super) {\n  __extends(Bytes13, _super);\n  function Bytes13(val) {\n    var _this = _super.call(this, val) || this;\n    _this.isBytes13 = true;\n    _this.assertLength(13);\n    return _this;\n  }\n  Bytes13.from = function (val) {\n    return new Bytes13(val);\n  };\n  Bytes13.prototype.toUint = function () {\n    return new Uint104(this.toBN().toString(10));\n  };\n  return Bytes13;\n}(HexString);\nvar Bytes14 = /** @class */function (_super) {\n  __extends(Bytes14, _super);\n  function Bytes14(val) {\n    var _this = _super.call(this, val) || this;\n    _this.isBytes14 = true;\n    _this.assertLength(14);\n    return _this;\n  }\n  Bytes14.from = function (val) {\n    return new Bytes14(val);\n  };\n  Bytes14.prototype.toUint = function () {\n    return new Uint112(this.toBN().toString(10));\n  };\n  return Bytes14;\n}(HexString);\nvar Bytes15 = /** @class */function (_super) {\n  __extends(Bytes15, _super);\n  function Bytes15(val) {\n    var _this = _super.call(this, val) || this;\n    _this.isBytes15 = true;\n    _this.assertLength(15);\n    return _this;\n  }\n  Bytes15.from = function (val) {\n    return new Bytes15(val);\n  };\n  Bytes15.prototype.toUint = function () {\n    return new Uint120(this.toBN().toString(10));\n  };\n  return Bytes15;\n}(HexString);\nvar Bytes16 = /** @class */function (_super) {\n  __extends(Bytes16, _super);\n  function Bytes16(val) {\n    var _this = _super.call(this, val) || this;\n    _this.isBytes16 = true;\n    _this.assertLength(16);\n    return _this;\n  }\n  Bytes16.from = function (val) {\n    return new Bytes16(val);\n  };\n  Bytes16.prototype.toUint = function () {\n    return new Uint128(this.toBN().toString(10));\n  };\n  return Bytes16;\n}(HexString);\nvar Bytes17 = /** @class */function (_super) {\n  __extends(Bytes17, _super);\n  function Bytes17(val) {\n    var _this = _super.call(this, val) || this;\n    _this.isBytes17 = true;\n    _this.assertLength(17);\n    return _this;\n  }\n  Bytes17.from = function (val) {\n    return new Bytes17(val);\n  };\n  Bytes17.prototype.toUint = function () {\n    return new Uint136(this.toBN().toString(10));\n  };\n  return Bytes17;\n}(HexString);\nvar Bytes18 = /** @class */function (_super) {\n  __extends(Bytes18, _super);\n  function Bytes18(val) {\n    var _this = _super.call(this, val) || this;\n    _this.isBytes18 = true;\n    _this.assertLength(18);\n    return _this;\n  }\n  Bytes18.from = function (val) {\n    return new Bytes18(val);\n  };\n  Bytes18.prototype.toUint = function () {\n    return new Uint144(this.toBN().toString(10));\n  };\n  return Bytes18;\n}(HexString);\nvar Bytes19 = /** @class */function (_super) {\n  __extends(Bytes19, _super);\n  function Bytes19(val) {\n    var _this = _super.call(this, val) || this;\n    _this.isBytes19 = true;\n    _this.assertLength(19);\n    return _this;\n  }\n  Bytes19.from = function (val) {\n    return new Bytes19(val);\n  };\n  Bytes19.prototype.toUint = function () {\n    return new Uint152(this.toBN().toString(10));\n  };\n  return Bytes19;\n}(HexString);\nvar Bytes20 = /** @class */function (_super) {\n  __extends(Bytes20, _super);\n  function Bytes20(val) {\n    var _this = _super.call(this, val) || this;\n    _this.isBytes20 = true;\n    _this.assertLength(20);\n    return _this;\n  }\n  Bytes20.from = function (val) {\n    return new Bytes20(val);\n  };\n  Bytes20.prototype.toUint = function () {\n    return new Uint160(this.toBN().toString(10));\n  };\n  Bytes20.prototype.toAddress = function () {\n    return new Address(this.val);\n  };\n  return Bytes20;\n}(HexString);\nvar Bytes21 = /** @class */function (_super) {\n  __extends(Bytes21, _super);\n  function Bytes21(val) {\n    var _this = _super.call(this, val) || this;\n    _this.isBytes21 = true;\n    _this.assertLength(21);\n    return _this;\n  }\n  Bytes21.from = function (val) {\n    return new Bytes21(val);\n  };\n  Bytes21.prototype.toUint = function () {\n    return new Uint168(this.toBN().toString(10));\n  };\n  return Bytes21;\n}(HexString);\nvar Bytes22 = /** @class */function (_super) {\n  __extends(Bytes22, _super);\n  function Bytes22(val) {\n    var _this = _super.call(this, val) || this;\n    _this.isBytes22 = true;\n    _this.assertLength(22);\n    return _this;\n  }\n  Bytes22.from = function (val) {\n    return new Bytes22(val);\n  };\n  Bytes22.prototype.toUint = function () {\n    return new Uint176(this.toBN().toString(10));\n  };\n  return Bytes22;\n}(HexString);\nvar Bytes23 = /** @class */function (_super) {\n  __extends(Bytes23, _super);\n  function Bytes23(val) {\n    var _this = _super.call(this, val) || this;\n    _this.isBytes23 = true;\n    _this.assertLength(23);\n    return _this;\n  }\n  Bytes23.from = function (val) {\n    return new Bytes23(val);\n  };\n  Bytes23.prototype.toUint = function () {\n    return new Uint184(this.toBN().toString(10));\n  };\n  return Bytes23;\n}(HexString);\nvar Bytes24 = /** @class */function (_super) {\n  __extends(Bytes24, _super);\n  function Bytes24(val) {\n    var _this = _super.call(this, val) || this;\n    _this.isBytes24 = true;\n    _this.assertLength(24);\n    return _this;\n  }\n  Bytes24.from = function (val) {\n    return new Bytes24(val);\n  };\n  Bytes24.prototype.toUint = function () {\n    return new Uint192(this.toBN().toString(10));\n  };\n  return Bytes24;\n}(HexString);\nvar Bytes25 = /** @class */function (_super) {\n  __extends(Bytes25, _super);\n  function Bytes25(val) {\n    var _this = _super.call(this, val) || this;\n    _this.isBytes25 = true;\n    _this.assertLength(25);\n    return _this;\n  }\n  Bytes25.from = function (val) {\n    return new Bytes25(val);\n  };\n  Bytes25.prototype.toUint = function () {\n    return new Uint200(this.toBN().toString(10));\n  };\n  return Bytes25;\n}(HexString);\nvar Bytes26 = /** @class */function (_super) {\n  __extends(Bytes26, _super);\n  function Bytes26(val) {\n    var _this = _super.call(this, val) || this;\n    _this.isBytes26 = true;\n    _this.assertLength(26);\n    return _this;\n  }\n  Bytes26.from = function (val) {\n    return new Bytes26(val);\n  };\n  Bytes26.prototype.toUint = function () {\n    return new Uint208(this.toBN().toString(10));\n  };\n  return Bytes26;\n}(HexString);\nvar Bytes27 = /** @class */function (_super) {\n  __extends(Bytes27, _super);\n  function Bytes27(val) {\n    var _this = _super.call(this, val) || this;\n    _this.isBytes27 = true;\n    _this.assertLength(27);\n    return _this;\n  }\n  Bytes27.from = function (val) {\n    return new Bytes27(val);\n  };\n  Bytes27.prototype.toUint = function () {\n    return new Uint216(this.toBN().toString(10));\n  };\n  return Bytes27;\n}(HexString);\nvar Bytes28 = /** @class */function (_super) {\n  __extends(Bytes28, _super);\n  function Bytes28(val) {\n    var _this = _super.call(this, val) || this;\n    _this.isBytes28 = true;\n    _this.assertLength(28);\n    return _this;\n  }\n  Bytes28.from = function (val) {\n    return new Bytes28(val);\n  };\n  Bytes28.prototype.toUint = function () {\n    return new Uint224(this.toBN().toString(10));\n  };\n  return Bytes28;\n}(HexString);\nvar Bytes29 = /** @class */function (_super) {\n  __extends(Bytes29, _super);\n  function Bytes29(val) {\n    var _this = _super.call(this, val) || this;\n    _this.isBytes29 = true;\n    _this.assertLength(29);\n    return _this;\n  }\n  Bytes29.from = function (val) {\n    return new Bytes29(val);\n  };\n  Bytes29.prototype.toUint = function () {\n    return new Uint232(this.toBN().toString(10));\n  };\n  return Bytes29;\n}(HexString);\nvar Bytes30 = /** @class */function (_super) {\n  __extends(Bytes30, _super);\n  function Bytes30(val) {\n    var _this = _super.call(this, val) || this;\n    _this.isBytes30 = true;\n    _this.assertLength(30);\n    return _this;\n  }\n  Bytes30.from = function (val) {\n    return new Bytes30(val);\n  };\n  Bytes30.prototype.toUint = function () {\n    return new Uint240(this.toBN().toString(10));\n  };\n  return Bytes30;\n}(HexString);\nvar Bytes31 = /** @class */function (_super) {\n  __extends(Bytes31, _super);\n  function Bytes31(val) {\n    var _this = _super.call(this, val) || this;\n    _this.isBytes31 = true;\n    _this.assertLength(31);\n    return _this;\n  }\n  Bytes31.from = function (val) {\n    return new Bytes31(val);\n  };\n  Bytes31.prototype.toUint = function () {\n    return new Uint248(this.toBN().toString(10));\n  };\n  return Bytes31;\n}(HexString);\nvar Bytes32 = /** @class */function (_super) {\n  __extends(Bytes32, _super);\n  function Bytes32(val) {\n    var _this = _super.call(this, val) || this;\n    _this.isBytes32 = true;\n    _this.assertLength(32);\n    return _this;\n  }\n  Bytes32.from = function (val) {\n    return new Bytes32(val);\n  };\n  Bytes32.prototype.toUint = function () {\n    return new Uint256(this.toBN().toString(10));\n  };\n  return Bytes32;\n}(HexString);\nvar Uint8 = /** @class */function (_super) {\n  __extends(Uint8, _super);\n  function Uint8(val) {\n    var _this = _super.call(this, val) || this;\n    _this.isUint8 = true;\n    _this.assertThreshold('256');\n    return _this;\n  }\n  Uint8.from = function (val) {\n    return new Uint8(val);\n  };\n  Uint8.prototype.toByte = function () {\n    return new Byte(\"0x\" + this.toBN().toString(16, 2));\n  };\n  return Uint8;\n}(UintString);\nvar Uint16 = /** @class */function (_super) {\n  __extends(Uint16, _super);\n  function Uint16(val) {\n    var _this = _super.call(this, val) || this;\n    _this.isUint16 = true;\n    _this.assertThreshold('65536');\n    return _this;\n  }\n  Uint16.from = function (val) {\n    return new Uint16(val);\n  };\n  Uint16.prototype.toBytes = function () {\n    return new Bytes2(\"0x\" + this.toBN().toString(16, 4));\n  };\n  return Uint16;\n}(UintString);\nvar Uint24 = /** @class */function (_super) {\n  __extends(Uint24, _super);\n  function Uint24(val) {\n    var _this = _super.call(this, val) || this;\n    _this.isUint24 = true;\n    _this.assertThreshold('16777216');\n    return _this;\n  }\n  Uint24.from = function (val) {\n    return new Uint24(val);\n  };\n  Uint24.prototype.toBytes = function () {\n    return new Bytes3(\"0x\" + this.toBN().toString(16, 6));\n  };\n  return Uint24;\n}(UintString);\nvar Uint32 = /** @class */function (_super) {\n  __extends(Uint32, _super);\n  function Uint32(val) {\n    var _this = _super.call(this, val) || this;\n    _this.isUint32 = true;\n    _this.assertThreshold('4294967296');\n    return _this;\n  }\n  Uint32.from = function (val) {\n    return new Uint32(val);\n  };\n  Uint32.prototype.toBytes = function () {\n    return new Bytes4(\"0x\" + this.toBN().toString(16, 8));\n  };\n  return Uint32;\n}(UintString);\nvar Uint40 = /** @class */function (_super) {\n  __extends(Uint40, _super);\n  function Uint40(val) {\n    var _this = _super.call(this, val) || this;\n    _this.isUint40 = true;\n    _this.assertThreshold('1099511627776');\n    return _this;\n  }\n  Uint40.from = function (val) {\n    return new Uint40(val);\n  };\n  Uint40.prototype.toBytes = function () {\n    return new Bytes5(\"0x\" + this.toBN().toString(16, 10));\n  };\n  return Uint40;\n}(UintString);\nvar Uint48 = /** @class */function (_super) {\n  __extends(Uint48, _super);\n  function Uint48(val) {\n    var _this = _super.call(this, val) || this;\n    _this.isUint48 = true;\n    _this.assertThreshold('281474976710656');\n    return _this;\n  }\n  Uint48.from = function (val) {\n    return new Uint48(val);\n  };\n  Uint48.prototype.toBytes = function () {\n    return new Bytes6(\"0x\" + this.toBN().toString(16, 12));\n  };\n  return Uint48;\n}(UintString);\nvar Uint56 = /** @class */function (_super) {\n  __extends(Uint56, _super);\n  function Uint56(val) {\n    var _this = _super.call(this, val) || this;\n    _this.isUint56 = true;\n    _this.assertThreshold('72057594037927936');\n    return _this;\n  }\n  Uint56.from = function (val) {\n    return new Uint56(val);\n  };\n  Uint56.prototype.toBytes = function () {\n    return new Bytes7(\"0x\" + this.toBN().toString(16, 14));\n  };\n  return Uint56;\n}(UintString);\nvar Uint64 = /** @class */function (_super) {\n  __extends(Uint64, _super);\n  function Uint64(val) {\n    var _this = _super.call(this, val) || this;\n    _this.isUint64 = true;\n    _this.assertThreshold('18446744073709551616');\n    return _this;\n  }\n  Uint64.from = function (val) {\n    return new Uint64(val);\n  };\n  Uint64.prototype.toBytes = function () {\n    return new Bytes8(\"0x\" + this.toBN().toString(16, 16));\n  };\n  return Uint64;\n}(UintString);\nvar Uint72 = /** @class */function (_super) {\n  __extends(Uint72, _super);\n  function Uint72(val) {\n    var _this = _super.call(this, val) || this;\n    _this.isUint72 = true;\n    _this.assertThreshold('4722366482869645213696');\n    return _this;\n  }\n  Uint72.from = function (val) {\n    return new Uint72(val);\n  };\n  Uint72.prototype.toBytes = function () {\n    return new Bytes9(\"0x\" + this.toBN().toString(16, 18));\n  };\n  return Uint72;\n}(UintString);\nvar Uint80 = /** @class */function (_super) {\n  __extends(Uint80, _super);\n  function Uint80(val) {\n    var _this = _super.call(this, val) || this;\n    _this.isUint80 = true;\n    _this.assertThreshold('1208925819614629174706176');\n    return _this;\n  }\n  Uint80.from = function (val) {\n    return new Uint80(val);\n  };\n  Uint80.prototype.toBytes = function () {\n    return new Bytes10(\"0x\" + this.toBN().toString(16, 20));\n  };\n  return Uint80;\n}(UintString);\nvar Uint88 = /** @class */function (_super) {\n  __extends(Uint88, _super);\n  function Uint88(val) {\n    var _this = _super.call(this, val) || this;\n    _this.isUint88 = true;\n    _this.assertThreshold('309485009821345068724781056');\n    return _this;\n  }\n  Uint88.from = function (val) {\n    return new Uint88(val);\n  };\n  Uint88.prototype.toBytes = function () {\n    return new Bytes11(\"0x\" + this.toBN().toString(16, 22));\n  };\n  return Uint88;\n}(UintString);\nvar Uint96 = /** @class */function (_super) {\n  __extends(Uint96, _super);\n  function Uint96(val) {\n    var _this = _super.call(this, val) || this;\n    _this.isUint96 = true;\n    _this.assertThreshold('79228162514264337593543950336');\n    return _this;\n  }\n  Uint96.from = function (val) {\n    return new Uint96(val);\n  };\n  Uint96.prototype.toBytes = function () {\n    return new Bytes12(\"0x\" + this.toBN().toString(16, 24));\n  };\n  return Uint96;\n}(UintString);\nvar Uint104 = /** @class */function (_super) {\n  __extends(Uint104, _super);\n  function Uint104(val) {\n    var _this = _super.call(this, val) || this;\n    _this.isUint104 = true;\n    _this.assertThreshold('20282409603651670423947251286016');\n    return _this;\n  }\n  Uint104.from = function (val) {\n    return new Uint104(val);\n  };\n  Uint104.prototype.toBytes = function () {\n    return new Bytes13(\"0x\" + this.toBN().toString(16, 26));\n  };\n  return Uint104;\n}(UintString);\nvar Uint112 = /** @class */function (_super) {\n  __extends(Uint112, _super);\n  function Uint112(val) {\n    var _this = _super.call(this, val) || this;\n    _this.isUint112 = true;\n    _this.assertThreshold('5192296858534827628530496329220096');\n    return _this;\n  }\n  Uint112.from = function (val) {\n    return new Uint112(val);\n  };\n  Uint112.prototype.toBytes = function () {\n    return new Bytes14(\"0x\" + this.toBN().toString(16, 28));\n  };\n  return Uint112;\n}(UintString);\nvar Uint120 = /** @class */function (_super) {\n  __extends(Uint120, _super);\n  function Uint120(val) {\n    var _this = _super.call(this, val) || this;\n    _this.isUint120 = true;\n    _this.assertThreshold('1329227995784915872903807060280344576');\n    return _this;\n  }\n  Uint120.from = function (val) {\n    return new Uint120(val);\n  };\n  Uint120.prototype.toBytes = function () {\n    return new Bytes15(\"0x\" + this.toBN().toString(16, 30));\n  };\n  return Uint120;\n}(UintString);\nvar Uint128 = /** @class */function (_super) {\n  __extends(Uint128, _super);\n  function Uint128(val) {\n    var _this = _super.call(this, val) || this;\n    _this.isUint128 = true;\n    _this.assertThreshold('340282366920938463463374607431768211456');\n    return _this;\n  }\n  Uint128.from = function (val) {\n    return new Uint128(val);\n  };\n  Uint128.prototype.toBytes = function () {\n    return new Bytes16(\"0x\" + this.toBN().toString(16, 32));\n  };\n  return Uint128;\n}(UintString);\nvar Uint136 = /** @class */function (_super) {\n  __extends(Uint136, _super);\n  function Uint136(val) {\n    var _this = _super.call(this, val) || this;\n    _this.isUint136 = true;\n    _this.assertThreshold('87112285931760246646623899502532662132736');\n    return _this;\n  }\n  Uint136.from = function (val) {\n    return new Uint136(val);\n  };\n  Uint136.prototype.toBytes = function () {\n    return new Bytes17(\"0x\" + this.toBN().toString(16, 34));\n  };\n  return Uint136;\n}(UintString);\nvar Uint144 = /** @class */function (_super) {\n  __extends(Uint144, _super);\n  function Uint144(val) {\n    var _this = _super.call(this, val) || this;\n    _this.isUint144 = true;\n    _this.assertThreshold('22300745198530623141535718272648361505980416');\n    return _this;\n  }\n  Uint144.from = function (val) {\n    return new Uint144(val);\n  };\n  Uint144.prototype.toBytes = function () {\n    return new Bytes18(\"0x\" + this.toBN().toString(16, 36));\n  };\n  return Uint144;\n}(UintString);\nvar Uint152 = /** @class */function (_super) {\n  __extends(Uint152, _super);\n  function Uint152(val) {\n    var _this = _super.call(this, val) || this;\n    _this.isUint152 = true;\n    _this.assertThreshold('5708990770823839524233143877797980545530986496');\n    return _this;\n  }\n  Uint152.from = function (val) {\n    return new Uint152(val);\n  };\n  Uint152.prototype.toBytes = function () {\n    return new Bytes19(\"0x\" + this.toBN().toString(16, 38));\n  };\n  return Uint152;\n}(UintString);\nvar Uint160 = /** @class */function (_super) {\n  __extends(Uint160, _super);\n  function Uint160(val) {\n    var _this = _super.call(this, val) || this;\n    _this.isUint160 = true;\n    _this.assertThreshold('1461501637330902918203684832716283019655932542976');\n    return _this;\n  }\n  Uint160.from = function (val) {\n    return new Uint160(val);\n  };\n  Uint160.prototype.toBytes = function () {\n    return new Bytes20(\"0x\" + this.toBN().toString(16, 40));\n  };\n  return Uint160;\n}(UintString);\nvar Uint168 = /** @class */function (_super) {\n  __extends(Uint168, _super);\n  function Uint168(val) {\n    var _this = _super.call(this, val) || this;\n    _this.isUint168 = true;\n    _this.assertThreshold('374144419156711147060143317175368453031918731001856');\n    return _this;\n  }\n  Uint168.from = function (val) {\n    return new Uint168(val);\n  };\n  Uint168.prototype.toBytes = function () {\n    return new Bytes21(\"0x\" + this.toBN().toString(16, 42));\n  };\n  return Uint168;\n}(UintString);\nvar Uint176 = /** @class */function (_super) {\n  __extends(Uint176, _super);\n  function Uint176(val) {\n    var _this = _super.call(this, val) || this;\n    _this.isUint176 = true;\n    _this.assertThreshold('95780971304118053647396689196894323976171195136475136');\n    return _this;\n  }\n  Uint176.from = function (val) {\n    return new Uint176(val);\n  };\n  Uint176.prototype.toBytes = function () {\n    return new Bytes22(\"0x\" + this.toBN().toString(16, 44));\n  };\n  return Uint176;\n}(UintString);\nvar Uint184 = /** @class */function (_super) {\n  __extends(Uint184, _super);\n  function Uint184(val) {\n    var _this = _super.call(this, val) || this;\n    _this.isUint184 = true;\n    _this.assertThreshold('24519928653854221733733552434404946937899825954937634816');\n    return _this;\n  }\n  Uint184.from = function (val) {\n    return new Uint184(val);\n  };\n  Uint184.prototype.toBytes = function () {\n    return new Bytes23(\"0x\" + this.toBN().toString(16, 46));\n  };\n  return Uint184;\n}(UintString);\nvar Uint192 = /** @class */function (_super) {\n  __extends(Uint192, _super);\n  function Uint192(val) {\n    var _this = _super.call(this, val) || this;\n    _this.isUint192 = true;\n    _this.assertThreshold('6277101735386680763835789423207666416102355444464034512896');\n    return _this;\n  }\n  Uint192.from = function (val) {\n    return new Uint192(val);\n  };\n  Uint192.prototype.toBytes = function () {\n    return new Bytes24(\"0x\" + this.toBN().toString(16, 48));\n  };\n  return Uint192;\n}(UintString);\nvar Uint200 = /** @class */function (_super) {\n  __extends(Uint200, _super);\n  function Uint200(val) {\n    var _this = _super.call(this, val) || this;\n    _this.isUint200 = true;\n    _this.assertThreshold('1606938044258990275541962092341162602522202993782792835301376');\n    return _this;\n  }\n  Uint200.from = function (val) {\n    return new Uint200(val);\n  };\n  Uint200.prototype.toBytes = function () {\n    return new Bytes25(\"0x\" + this.toBN().toString(16, 50));\n  };\n  return Uint200;\n}(UintString);\nvar Uint208 = /** @class */function (_super) {\n  __extends(Uint208, _super);\n  function Uint208(val) {\n    var _this = _super.call(this, val) || this;\n    _this.isUint208 = true;\n    _this.assertThreshold('411376139330301510538742295639337626245683966408394965837152256');\n    return _this;\n  }\n  Uint208.from = function (val) {\n    return new Uint208(val);\n  };\n  Uint208.prototype.toBytes = function () {\n    return new Bytes26(\"0x\" + this.toBN().toString(16, 52));\n  };\n  return Uint208;\n}(UintString);\nvar Uint216 = /** @class */function (_super) {\n  __extends(Uint216, _super);\n  function Uint216(val) {\n    var _this = _super.call(this, val) || this;\n    _this.isUint216 = true;\n    _this.assertThreshold('105312291668557186697918027683670432318895095400549111254310977536');\n    return _this;\n  }\n  Uint216.from = function (val) {\n    return new Uint216(val);\n  };\n  Uint216.prototype.toBytes = function () {\n    return new Bytes27(\"0x\" + this.toBN().toString(16, 54));\n  };\n  return Uint216;\n}(UintString);\nvar Uint224 = /** @class */function (_super) {\n  __extends(Uint224, _super);\n  function Uint224(val) {\n    var _this = _super.call(this, val) || this;\n    _this.isUint224 = true;\n    _this.assertThreshold('26959946667150639794667015087019630673637144422540572481103610249216');\n    return _this;\n  }\n  Uint224.from = function (val) {\n    return new Uint224(val);\n  };\n  Uint224.prototype.toBytes = function () {\n    return new Bytes28(\"0x\" + this.toBN().toString(16, 56));\n  };\n  return Uint224;\n}(UintString);\nvar Uint232 = /** @class */function (_super) {\n  __extends(Uint232, _super);\n  function Uint232(val) {\n    var _this = _super.call(this, val) || this;\n    _this.isUint232 = true;\n    _this.assertThreshold('6901746346790563787434755862277025452451108972170386555162524223799296');\n    return _this;\n  }\n  Uint232.from = function (val) {\n    return new Uint232(val);\n  };\n  Uint232.prototype.toBytes = function () {\n    return new Bytes29(\"0x\" + this.toBN().toString(16, 58));\n  };\n  return Uint232;\n}(UintString);\nvar Uint240 = /** @class */function (_super) {\n  __extends(Uint240, _super);\n  function Uint240(val) {\n    var _this = _super.call(this, val) || this;\n    _this.isUint240 = true;\n    _this.assertThreshold('1766847064778384329583297500742918515827483896875618958121606201292619776');\n    return _this;\n  }\n  Uint240.from = function (val) {\n    return new Uint240(val);\n  };\n  Uint240.prototype.toBytes = function () {\n    return new Bytes30(\"0x\" + this.toBN().toString(16, 60));\n  };\n  return Uint240;\n}(UintString);\nvar Uint248 = /** @class */function (_super) {\n  __extends(Uint248, _super);\n  function Uint248(val) {\n    var _this = _super.call(this, val) || this;\n    _this.isUint248 = true;\n    _this.assertThreshold('452312848583266388373324160190187140051835877600158453279131187530910662656');\n    return _this;\n  }\n  Uint248.from = function (val) {\n    return new Uint248(val);\n  };\n  Uint248.prototype.toBytes = function () {\n    return new Bytes31(\"0x\" + this.toBN().toString(16, 62));\n  };\n  return Uint248;\n}(UintString);\nvar Uint256 = /** @class */function (_super) {\n  __extends(Uint256, _super);\n  function Uint256(val) {\n    var _this = _super.call(this, val) || this;\n    _this.isUint256 = true;\n    _this.assertThreshold('115792089237316195423570985008687907853269984665640564039457584007913129639936');\n    return _this;\n  }\n  Uint256.from = function (val) {\n    return new Uint256(val);\n  };\n  Uint256.prototype.toBytes = function () {\n    return new Bytes32(\"0x\" + this.toBN().toString(16, 64));\n  };\n  return Uint256;\n}(UintString);\nvar Int8 = /** @class */function (_super) {\n  __extends(Int8, _super);\n  function Int8(val) {\n    var _this = _super.call(this, val) || this;\n    _this.isInt8 = true;\n    _this.assertThreshold('128');\n    return _this;\n  }\n  Int8.from = function (val) {\n    return new Int8(val);\n  };\n  return Int8;\n}(IntString);\nvar Int16 = /** @class */function (_super) {\n  __extends(Int16, _super);\n  function Int16(val) {\n    var _this = _super.call(this, val) || this;\n    _this.isInt16 = true;\n    _this.assertThreshold('32768');\n    return _this;\n  }\n  Int16.from = function (val) {\n    return new Int16(val);\n  };\n  return Int16;\n}(IntString);\nvar Int24 = /** @class */function (_super) {\n  __extends(Int24, _super);\n  function Int24(val) {\n    var _this = _super.call(this, val) || this;\n    _this.isInt24 = true;\n    _this.assertThreshold('8388608');\n    return _this;\n  }\n  Int24.from = function (val) {\n    return new Int24(val);\n  };\n  return Int24;\n}(IntString);\nvar Int32 = /** @class */function (_super) {\n  __extends(Int32, _super);\n  function Int32(val) {\n    var _this = _super.call(this, val) || this;\n    _this.isInt32 = true;\n    _this.assertThreshold('2147483648');\n    return _this;\n  }\n  Int32.from = function (val) {\n    return new Int32(val);\n  };\n  return Int32;\n}(IntString);\nvar Int40 = /** @class */function (_super) {\n  __extends(Int40, _super);\n  function Int40(val) {\n    var _this = _super.call(this, val) || this;\n    _this.isInt40 = true;\n    _this.assertThreshold('549755813888');\n    return _this;\n  }\n  Int40.from = function (val) {\n    return new Int40(val);\n  };\n  return Int40;\n}(IntString);\nvar Int48 = /** @class */function (_super) {\n  __extends(Int48, _super);\n  function Int48(val) {\n    var _this = _super.call(this, val) || this;\n    _this.isInt48 = true;\n    _this.assertThreshold('140737488355328');\n    return _this;\n  }\n  Int48.from = function (val) {\n    return new Int48(val);\n  };\n  return Int48;\n}(IntString);\nvar Int56 = /** @class */function (_super) {\n  __extends(Int56, _super);\n  function Int56(val) {\n    var _this = _super.call(this, val) || this;\n    _this.isInt56 = true;\n    _this.assertThreshold('36028797018963968');\n    return _this;\n  }\n  Int56.from = function (val) {\n    return new Int56(val);\n  };\n  return Int56;\n}(IntString);\nvar Int64 = /** @class */function (_super) {\n  __extends(Int64, _super);\n  function Int64(val) {\n    var _this = _super.call(this, val) || this;\n    _this.isInt64 = true;\n    _this.assertThreshold('9223372036854775808');\n    return _this;\n  }\n  Int64.from = function (val) {\n    return new Int64(val);\n  };\n  return Int64;\n}(IntString);\nvar Int72 = /** @class */function (_super) {\n  __extends(Int72, _super);\n  function Int72(val) {\n    var _this = _super.call(this, val) || this;\n    _this.isInt72 = true;\n    _this.assertThreshold('2361183241434822606848');\n    return _this;\n  }\n  Int72.from = function (val) {\n    return new Int72(val);\n  };\n  return Int72;\n}(IntString);\nvar Int80 = /** @class */function (_super) {\n  __extends(Int80, _super);\n  function Int80(val) {\n    var _this = _super.call(this, val) || this;\n    _this.isInt80 = true;\n    _this.assertThreshold('604462909807314587353088');\n    return _this;\n  }\n  Int80.from = function (val) {\n    return new Int80(val);\n  };\n  return Int80;\n}(IntString);\nvar Int88 = /** @class */function (_super) {\n  __extends(Int88, _super);\n  function Int88(val) {\n    var _this = _super.call(this, val) || this;\n    _this.isInt88 = true;\n    _this.assertThreshold('154742504910672534362390528');\n    return _this;\n  }\n  Int88.from = function (val) {\n    return new Int88(val);\n  };\n  return Int88;\n}(IntString);\nvar Int96 = /** @class */function (_super) {\n  __extends(Int96, _super);\n  function Int96(val) {\n    var _this = _super.call(this, val) || this;\n    _this.isInt96 = true;\n    _this.assertThreshold('39614081257132168796771975168');\n    return _this;\n  }\n  Int96.from = function (val) {\n    return new Int96(val);\n  };\n  return Int96;\n}(IntString);\nvar Int104 = /** @class */function (_super) {\n  __extends(Int104, _super);\n  function Int104(val) {\n    var _this = _super.call(this, val) || this;\n    _this.isInt104 = true;\n    _this.assertThreshold('10141204801825835211973625643008');\n    return _this;\n  }\n  Int104.from = function (val) {\n    return new Int104(val);\n  };\n  return Int104;\n}(IntString);\nvar Int112 = /** @class */function (_super) {\n  __extends(Int112, _super);\n  function Int112(val) {\n    var _this = _super.call(this, val) || this;\n    _this.isInt112 = true;\n    _this.assertThreshold('2596148429267413814265248164610048');\n    return _this;\n  }\n  Int112.from = function (val) {\n    return new Int112(val);\n  };\n  return Int112;\n}(IntString);\nvar Int120 = /** @class */function (_super) {\n  __extends(Int120, _super);\n  function Int120(val) {\n    var _this = _super.call(this, val) || this;\n    _this.isInt120 = true;\n    _this.assertThreshold('664613997892457936451903530140172288');\n    return _this;\n  }\n  Int120.from = function (val) {\n    return new Int120(val);\n  };\n  return Int120;\n}(IntString);\nvar Int128 = /** @class */function (_super) {\n  __extends(Int128, _super);\n  function Int128(val) {\n    var _this = _super.call(this, val) || this;\n    _this.isInt128 = true;\n    _this.assertThreshold('170141183460469231731687303715884105728');\n    return _this;\n  }\n  Int128.from = function (val) {\n    return new Int128(val);\n  };\n  return Int128;\n}(IntString);\nvar Int136 = /** @class */function (_super) {\n  __extends(Int136, _super);\n  function Int136(val) {\n    var _this = _super.call(this, val) || this;\n    _this.isInt136 = true;\n    _this.assertThreshold('43556142965880123323311949751266331066368');\n    return _this;\n  }\n  Int136.from = function (val) {\n    return new Int136(val);\n  };\n  return Int136;\n}(IntString);\nvar Int144 = /** @class */function (_super) {\n  __extends(Int144, _super);\n  function Int144(val) {\n    var _this = _super.call(this, val) || this;\n    _this.isInt144 = true;\n    _this.assertThreshold('11150372599265311570767859136324180752990208');\n    return _this;\n  }\n  Int144.from = function (val) {\n    return new Int144(val);\n  };\n  return Int144;\n}(IntString);\nvar Int152 = /** @class */function (_super) {\n  __extends(Int152, _super);\n  function Int152(val) {\n    var _this = _super.call(this, val) || this;\n    _this.isInt152 = true;\n    _this.assertThreshold('2854495385411919762116571938898990272765493248');\n    return _this;\n  }\n  Int152.from = function (val) {\n    return new Int152(val);\n  };\n  return Int152;\n}(IntString);\nvar Int160 = /** @class */function (_super) {\n  __extends(Int160, _super);\n  function Int160(val) {\n    var _this = _super.call(this, val) || this;\n    _this.isInt160 = true;\n    _this.assertThreshold('730750818665451459101842416358141509827966271488');\n    return _this;\n  }\n  Int160.from = function (val) {\n    return new Int160(val);\n  };\n  return Int160;\n}(IntString);\nvar Int168 = /** @class */function (_super) {\n  __extends(Int168, _super);\n  function Int168(val) {\n    var _this = _super.call(this, val) || this;\n    _this.isInt168 = true;\n    _this.assertThreshold('187072209578355573530071658587684226515959365500928');\n    return _this;\n  }\n  Int168.from = function (val) {\n    return new Int168(val);\n  };\n  return Int168;\n}(IntString);\nvar Int176 = /** @class */function (_super) {\n  __extends(Int176, _super);\n  function Int176(val) {\n    var _this = _super.call(this, val) || this;\n    _this.isInt176 = true;\n    _this.assertThreshold('47890485652059026823698344598447161988085597568237568');\n    return _this;\n  }\n  Int176.from = function (val) {\n    return new Int176(val);\n  };\n  return Int176;\n}(IntString);\nvar Int184 = /** @class */function (_super) {\n  __extends(Int184, _super);\n  function Int184(val) {\n    var _this = _super.call(this, val) || this;\n    _this.isInt184 = true;\n    _this.assertThreshold('12259964326927110866866776217202473468949912977468817408');\n    return _this;\n  }\n  Int184.from = function (val) {\n    return new Int184(val);\n  };\n  return Int184;\n}(IntString);\nvar Int192 = /** @class */function (_super) {\n  __extends(Int192, _super);\n  function Int192(val) {\n    var _this = _super.call(this, val) || this;\n    _this.isInt192 = true;\n    _this.assertThreshold('3138550867693340381917894711603833208051177722232017256448');\n    return _this;\n  }\n  Int192.from = function (val) {\n    return new Int192(val);\n  };\n  return Int192;\n}(IntString);\nvar Int200 = /** @class */function (_super) {\n  __extends(Int200, _super);\n  function Int200(val) {\n    var _this = _super.call(this, val) || this;\n    _this.isInt200 = true;\n    _this.assertThreshold('803469022129495137770981046170581301261101496891396417650688');\n    return _this;\n  }\n  Int200.from = function (val) {\n    return new Int200(val);\n  };\n  return Int200;\n}(IntString);\nvar Int208 = /** @class */function (_super) {\n  __extends(Int208, _super);\n  function Int208(val) {\n    var _this = _super.call(this, val) || this;\n    _this.isInt208 = true;\n    _this.assertThreshold('205688069665150755269371147819668813122841983204197482918576128');\n    return _this;\n  }\n  Int208.from = function (val) {\n    return new Int208(val);\n  };\n  return Int208;\n}(IntString);\nvar Int216 = /** @class */function (_super) {\n  __extends(Int216, _super);\n  function Int216(val) {\n    var _this = _super.call(this, val) || this;\n    _this.isInt216 = true;\n    _this.assertThreshold('52656145834278593348959013841835216159447547700274555627155488768');\n    return _this;\n  }\n  Int216.from = function (val) {\n    return new Int216(val);\n  };\n  return Int216;\n}(IntString);\nvar Int224 = /** @class */function (_super) {\n  __extends(Int224, _super);\n  function Int224(val) {\n    var _this = _super.call(this, val) || this;\n    _this.isInt224 = true;\n    _this.assertThreshold('13479973333575319897333507543509815336818572211270286240551805124608');\n    return _this;\n  }\n  Int224.from = function (val) {\n    return new Int224(val);\n  };\n  return Int224;\n}(IntString);\nvar Int232 = /** @class */function (_super) {\n  __extends(Int232, _super);\n  function Int232(val) {\n    var _this = _super.call(this, val) || this;\n    _this.isInt232 = true;\n    _this.assertThreshold('3450873173395281893717377931138512726225554486085193277581262111899648');\n    return _this;\n  }\n  Int232.from = function (val) {\n    return new Int232(val);\n  };\n  return Int232;\n}(IntString);\nvar Int240 = /** @class */function (_super) {\n  __extends(Int240, _super);\n  function Int240(val) {\n    var _this = _super.call(this, val) || this;\n    _this.isInt240 = true;\n    _this.assertThreshold('883423532389192164791648750371459257913741948437809479060803100646309888');\n    return _this;\n  }\n  Int240.from = function (val) {\n    return new Int240(val);\n  };\n  return Int240;\n}(IntString);\nvar Int248 = /** @class */function (_super) {\n  __extends(Int248, _super);\n  function Int248(val) {\n    var _this = _super.call(this, val) || this;\n    _this.isInt248 = true;\n    _this.assertThreshold('226156424291633194186662080095093570025917938800079226639565593765455331328');\n    return _this;\n  }\n  Int248.from = function (val) {\n    return new Int248(val);\n  };\n  return Int248;\n}(IntString);\nvar Int256 = /** @class */function (_super) {\n  __extends(Int256, _super);\n  function Int256(val) {\n    var _this = _super.call(this, val) || this;\n    _this.isInt256 = true;\n    _this.assertThreshold('57896044618658097711785492504343953926634992332820282019728792003956564819968');\n    return _this;\n  }\n  Int256.from = function (val) {\n    return new Int256(val);\n  };\n  return Int256;\n}(IntString);\nvar Address = /** @class */function (_super) {\n  __extends(Address, _super);\n  function Address(val) {\n    var _this = _super.call(this, val) || this;\n    _this.val = Address.toChecksumAddress(val);\n    return _this;\n  }\n  Address.from = function (val) {\n    return new Address(val);\n  };\n  /**\r\n   * @dev Check EIP-55 for the details\r\n   * https://github.com/ethereum/EIPs/blob/master/EIPS/eip-55.md#implementation\r\n   * @param address Ethereum 20 bytes address value\r\n   */\n  Address.toChecksumAddress = function (address) {\n    address = address.toLowerCase().replace('0x', '');\n    var hash = sha3.keccak256.update(address).hex();\n    var ret = '0x';\n    for (var i = 0; i < address.length; i += 1) {\n      if (parseInt(hash[i], 16) >= 8) {\n        ret += address[i].toUpperCase();\n      } else {\n        ret += address[i];\n      }\n    }\n    return ret;\n  };\n  return Address;\n}(Bytes20);\nexport { Address, Byte, Bytes, Bytes10, Bytes11, Bytes12, Bytes13, Bytes14, Bytes15, Bytes16, Bytes17, Bytes18, Bytes19, Bytes2, Bytes20, Bytes21, Bytes22, Bytes23, Bytes24, Bytes25, Bytes26, Bytes27, Bytes28, Bytes29, Bytes3, Bytes30, Bytes31, Bytes32, Bytes4, Bytes5, Bytes6, Bytes7, Bytes8, Bytes9, HexString, Int104, Int112, Int120, Int128, Int136, Int144, Int152, Int16, Int160, Int168, Int176, Int184, Int192, Int200, Int208, Int216, Int224, Int232, Int24, Int240, Int248, Int256, Int32, Int40, Int48, Int56, Int64, Int72, Int8, Int80, Int88, Int96, IntString, NumString, Uint104, Uint112, Uint120, Uint128, Uint136, Uint144, Uint152, Uint16, Uint160, Uint168, Uint176, Uint184, Uint192, Uint200, Uint208, Uint216, Uint224, Uint232, Uint24, Uint240, Uint248, Uint256, Uint32, Uint40, Uint48, Uint56, Uint64, Uint72, Uint8, Uint80, Uint88, Uint96, UintString };","map":{"version":3,"mappings":"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","names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","module","exports","assert","val","msg","Error","inherits","ctor","superCtor","super_","TempCtor","BN","number","base","endian","isBN","negative","words","length","red","_init","wordSize","Buffer","require$$0","e","num","isArray","max","left","right","cmp","min","init","_initNumber","_initArray","toString","replace","start","_parseHex","_parseBase","_strip","toArray","Math","ceil","i","j","w","off","parseHex","str","end","r","len","z","c","charCodeAt","parseBase","mul","limbLen","limbPow","total","mod","word","imuln","_iaddn","pow","copy","dest","move","src","_move","clone","_expand","size","strip","_normSign","Symbol","for","inspect","zeros","groupSizes","groupBases","padding","out","carry","groupSize","groupBase","isZero","modrn","idivn","toNumber","ret","toJSON","toBuffer","toArrayLike","allocate","ArrayType","allocUnsafe","byteLength","reqLength","res","postfix","_toArrayLikeLE","position","shift","_toArrayLikeBE","clz32","_countBits","t","_zeroBits","bitLength","hi","toBitArray","bit","wbit","zeroBits","toTwos","width","abs","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","a","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","iadd","isub","add","sub","smallMulTo","self","lo","k","ncarry","rword","maxJ","comb10MulTo","o","mid","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","imul","w0","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","bigMulTo","hncarry","jumboMulTo","mulTo","mulf","isNegNum","muln","sqr","isqr","q","iushln","bits","s","carryMask","newCarry","ishln","iushrn","hint","extended","h","mask","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","_wordDiv","mode","bhi","bhiBits","m","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","r2","andln","acc","modn","egcd","x","y","A","B","C","D","g","isEven","yp","xp","im","isOdd","jm","gcd","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","eq","Red","toRed","ctx","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","name","n","tmp","_tmp","ireduce","rlen","split","imulK","undefined","input","K256","call","output","outLen","prev","next","P224","P192","P25519","_prime","prime","imod","mod3","one","nOne","lpow","inv","windowSize","wnd","current","currentLen","mont","Mont","rinv","minv","u","this","INPUT_ERROR","FINALIZE_ERROR","WINDOW","window","root","JS_SHA3_NO_WINDOW","WEB_WORKER","NODE_JS","JS_SHA3_NO_NODE_JS","process","versions","node","global","COMMON_JS","JS_SHA3_NO_COMMON_JS","ARRAY_BUFFER","JS_SHA3_NO_ARRAY_BUFFER","ArrayBuffer","HEX_CHARS","SHAKE_PADDING","CSHAKE_PADDING","KECCAK_PADDING","PADDING","SHIFT","RC","BITS","SHAKE_BITS","OUTPUT_TYPES","CSHAKE_BYTEPAD","obj","JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW","isView","buffer","createOutputMethod","outputType","message","Keccak","update","createShakeOutputMethod","outputBits","createCshakeOutputMethod","methods","createKmacOutputMethod","key","createOutputMethods","method","createMethod","type","createShakeMethod","createCshakeMethod","bytepad","createKmacMethod","Kmac","algorithms","methodNames","algorithm","methodName","push","newMethodName","blocks","reset","finalized","block","blockCount","byteCount","outputBlocks","extraBytes","notString","Uint8Array","index","code","lastByteIndex","f","encode","bytes","unshift","encodeString","strs","paddingBytes","finalize","hex","arrayBuffer","array","Uint32Array","slice","digest","offset","l","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","b10","b11","b12","b13","b14","b15","b16","b17","b18","b19","b20","b21","b22","b23","b24","b25","b26","b27","b28","b29","b30","b31","b32","b33","b34","b35","b36","b37","b38","b39","b40","b41","b42","b43","b44","b45","b46","b47","b48","b49","isNaN","DataStr","toBN","_super","_this","startsWith","substr","HexString","leftPadding","newVal","fill","join","UintString","from","prefix","NumString","toBytes","threshold","padStart","IntString","Bytes","assertLength","Byte","Uint8","Bytes2","Uint16","Bytes3","Uint24","Bytes4","Uint32","Bytes5","Uint40","Bytes6","Uint48","Bytes7","Uint56","Bytes8","Uint64","Bytes9","Uint72","Bytes10","Uint80","Bytes11","Uint88","Bytes12","Uint96","Bytes13","Uint104","Bytes14","Uint112","Bytes15","Uint120","Bytes16","Uint128","Bytes17","Uint136","Bytes18","Uint144","Bytes19","Uint152","Bytes20","Uint160","Address","Bytes21","Uint168","Bytes22","Uint176","Bytes23","Uint184","Bytes24","Uint192","Bytes25","Uint200","Bytes26","Uint208","Bytes27","Uint216","Bytes28","Uint224","Bytes29","Uint232","Bytes30","Uint240","Bytes31","Uint248","Bytes32","Uint256","assertThreshold","Int8","Int16","Int24","Int32","Int40","Int48","Int56","Int64","Int72","Int80","Int88","Int96","Int104","Int112","Int120","Int128","Int136","Int144","Int152","Int160","Int168","Int176","Int184","Int192","Int200","Int208","Int216","Int224","Int232","Int240","Int248","Int256","toChecksumAddress","address","toLowerCase","hash","sha3","keccak256","parseInt","toUpperCase"],"sources":["../node_modules/tslib/tslib.es6.js","../node_modules/bn.js/lib/bn.js","../node_modules/js-sha3/src/sha3.js","../src/index.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    Buffer = require('buffer').Buffer;\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n    }\n\n    if (base === 16) {\n      this._parseHex(number, start);\n    } else {\n      this._parseBase(number, base, start);\n    }\n\n    if (number[0] === '-') {\n      this.negative = 1;\n    }\n\n    this._strip();\n\n    if (endian !== 'le') return;\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex (str, start, end) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    var z = 0;\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r <<= 4;\n\n      var b;\n\n      // 'a' - 'f'\n      if (c >= 49 && c <= 54) {\n        b = c - 49 + 0xa;\n\n      // 'A' - 'F'\n      } else if (c >= 17 && c <= 22) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n\n      r |= b;\n      z |= b;\n    }\n\n    assert(!(z & 0xf0), 'Invalid character in ' + str);\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    // Scan 24-bit chunks and add them to the number\n    var off = 0;\n    for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n      w = parseHex(number, i, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n      off += 24;\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n    if (i + 6 !== start) {\n      w = parseHex(number, start, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n    }\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","/**\n * [js-sha3]{@link https://github.com/emn178/js-sha3}\n *\n * @version 0.8.0\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\n * @copyright Chen, Yi-Cyuan 2015-2018\n * @license MIT\n */\n/*jslint bitwise: true */\n(function () {\n  'use strict';\n\n  var INPUT_ERROR = 'input is invalid type';\n  var FINALIZE_ERROR = 'finalize already called';\n  var WINDOW = typeof window === 'object';\n  var root = WINDOW ? window : {};\n  if (root.JS_SHA3_NO_WINDOW) {\n    WINDOW = false;\n  }\n  var WEB_WORKER = !WINDOW && typeof self === 'object';\n  var NODE_JS = !root.JS_SHA3_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;\n  if (NODE_JS) {\n    root = global;\n  } else if (WEB_WORKER) {\n    root = self;\n  }\n  var COMMON_JS = !root.JS_SHA3_NO_COMMON_JS && typeof module === 'object' && module.exports;\n  var AMD = typeof define === 'function' && define.amd;\n  var ARRAY_BUFFER = !root.JS_SHA3_NO_ARRAY_BUFFER && typeof ArrayBuffer !== 'undefined';\n  var HEX_CHARS = '0123456789abcdef'.split('');\n  var SHAKE_PADDING = [31, 7936, 2031616, 520093696];\n  var CSHAKE_PADDING = [4, 1024, 262144, 67108864];\n  var KECCAK_PADDING = [1, 256, 65536, 16777216];\n  var PADDING = [6, 1536, 393216, 100663296];\n  var SHIFT = [0, 8, 16, 24];\n  var RC = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649,\n    0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0,\n    2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771,\n    2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648,\n    2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648];\n  var BITS = [224, 256, 384, 512];\n  var SHAKE_BITS = [128, 256];\n  var OUTPUT_TYPES = ['hex', 'buffer', 'arrayBuffer', 'array', 'digest'];\n  var CSHAKE_BYTEPAD = {\n    '128': 168,\n    '256': 136\n  };\n\n  if (root.JS_SHA3_NO_NODE_JS || !Array.isArray) {\n    Array.isArray = function (obj) {\n      return Object.prototype.toString.call(obj) === '[object Array]';\n    };\n  }\n\n  if (ARRAY_BUFFER && (root.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView)) {\n    ArrayBuffer.isView = function (obj) {\n      return typeof obj === 'object' && obj.buffer && obj.buffer.constructor === ArrayBuffer;\n    };\n  }\n\n  var createOutputMethod = function (bits, padding, outputType) {\n    return function (message) {\n      return new Keccak(bits, padding, bits).update(message)[outputType]();\n    };\n  };\n\n  var createShakeOutputMethod = function (bits, padding, outputType) {\n    return function (message, outputBits) {\n      return new Keccak(bits, padding, outputBits).update(message)[outputType]();\n    };\n  };\n\n  var createCshakeOutputMethod = function (bits, padding, outputType) {\n    return function (message, outputBits, n, s) {\n      return methods['cshake' + bits].update(message, outputBits, n, s)[outputType]();\n    };\n  };\n\n  var createKmacOutputMethod = function (bits, padding, outputType) {\n    return function (key, message, outputBits, s) {\n      return methods['kmac' + bits].update(key, message, outputBits, s)[outputType]();\n    };\n  };\n\n  var createOutputMethods = function (method, createMethod, bits, padding) {\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createMethod(bits, padding, type);\n    }\n    return method;\n  };\n\n  var createMethod = function (bits, padding) {\n    var method = createOutputMethod(bits, padding, 'hex');\n    method.create = function () {\n      return new Keccak(bits, padding, bits);\n    };\n    method.update = function (message) {\n      return method.create().update(message);\n    };\n    return createOutputMethods(method, createOutputMethod, bits, padding);\n  };\n\n  var createShakeMethod = function (bits, padding) {\n    var method = createShakeOutputMethod(bits, padding, 'hex');\n    method.create = function (outputBits) {\n      return new Keccak(bits, padding, outputBits);\n    };\n    method.update = function (message, outputBits) {\n      return method.create(outputBits).update(message);\n    };\n    return createOutputMethods(method, createShakeOutputMethod, bits, padding);\n  };\n\n  var createCshakeMethod = function (bits, padding) {\n    var w = CSHAKE_BYTEPAD[bits];\n    var method = createCshakeOutputMethod(bits, padding, 'hex');\n    method.create = function (outputBits, n, s) {\n      if (!n && !s) {\n        return methods['shake' + bits].create(outputBits);\n      } else {\n        return new Keccak(bits, padding, outputBits).bytepad([n, s], w);\n      }\n    };\n    method.update = function (message, outputBits, n, s) {\n      return method.create(outputBits, n, s).update(message);\n    };\n    return createOutputMethods(method, createCshakeOutputMethod, bits, padding);\n  };\n\n  var createKmacMethod = function (bits, padding) {\n    var w = CSHAKE_BYTEPAD[bits];\n    var method = createKmacOutputMethod(bits, padding, 'hex');\n    method.create = function (key, outputBits, s) {\n      return new Kmac(bits, padding, outputBits).bytepad(['KMAC', s], w).bytepad([key], w);\n    };\n    method.update = function (key, message, outputBits, s) {\n      return method.create(key, outputBits, s).update(message);\n    };\n    return createOutputMethods(method, createKmacOutputMethod, bits, padding);\n  };\n\n  var algorithms = [\n    { name: 'keccak', padding: KECCAK_PADDING, bits: BITS, createMethod: createMethod },\n    { name: 'sha3', padding: PADDING, bits: BITS, createMethod: createMethod },\n    { name: 'shake', padding: SHAKE_PADDING, bits: SHAKE_BITS, createMethod: createShakeMethod },\n    { name: 'cshake', padding: CSHAKE_PADDING, bits: SHAKE_BITS, createMethod: createCshakeMethod },\n    { name: 'kmac', padding: CSHAKE_PADDING, bits: SHAKE_BITS, createMethod: createKmacMethod }\n  ];\n\n  var methods = {}, methodNames = [];\n\n  for (var i = 0; i < algorithms.length; ++i) {\n    var algorithm = algorithms[i];\n    var bits = algorithm.bits;\n    for (var j = 0; j < bits.length; ++j) {\n      var methodName = algorithm.name + '_' + bits[j];\n      methodNames.push(methodName);\n      methods[methodName] = algorithm.createMethod(bits[j], algorithm.padding);\n      if (algorithm.name !== 'sha3') {\n        var newMethodName = algorithm.name + bits[j];\n        methodNames.push(newMethodName);\n        methods[newMethodName] = methods[methodName];\n      }\n    }\n  }\n\n  function Keccak(bits, padding, outputBits) {\n    this.blocks = [];\n    this.s = [];\n    this.padding = padding;\n    this.outputBits = outputBits;\n    this.reset = true;\n    this.finalized = false;\n    this.block = 0;\n    this.start = 0;\n    this.blockCount = (1600 - (bits << 1)) >> 5;\n    this.byteCount = this.blockCount << 2;\n    this.outputBlocks = outputBits >> 5;\n    this.extraBytes = (outputBits & 31) >> 3;\n\n    for (var i = 0; i < 50; ++i) {\n      this.s[i] = 0;\n    }\n  }\n\n  Keccak.prototype.update = function (message) {\n    if (this.finalized) {\n      throw new Error(FINALIZE_ERROR);\n    }\n    var notString, type = typeof message;\n    if (type !== 'string') {\n      if (type === 'object') {\n        if (message === null) {\n          throw new Error(INPUT_ERROR);\n        } else if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {\n          message = new Uint8Array(message);\n        } else if (!Array.isArray(message)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(message)) {\n            throw new Error(INPUT_ERROR);\n          }\n        }\n      } else {\n        throw new Error(INPUT_ERROR);\n      }\n      notString = true;\n    }\n    var blocks = this.blocks, byteCount = this.byteCount, length = message.length,\n      blockCount = this.blockCount, index = 0, s = this.s, i, code;\n\n    while (index < length) {\n      if (this.reset) {\n        this.reset = false;\n        blocks[0] = this.block;\n        for (i = 1; i < blockCount + 1; ++i) {\n          blocks[i] = 0;\n        }\n      }\n      if (notString) {\n        for (i = this.start; index < length && i < byteCount; ++index) {\n          blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\n        }\n      } else {\n        for (i = this.start; index < length && i < byteCount; ++index) {\n          code = message.charCodeAt(index);\n          if (code < 0x80) {\n            blocks[i >> 2] |= code << SHIFT[i++ & 3];\n          } else if (code < 0x800) {\n            blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else if (code < 0xd800 || code >= 0xe000) {\n            blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else {\n            code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\n            blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          }\n        }\n      }\n      this.lastByteIndex = i;\n      if (i >= byteCount) {\n        this.start = i - byteCount;\n        this.block = blocks[blockCount];\n        for (i = 0; i < blockCount; ++i) {\n          s[i] ^= blocks[i];\n        }\n        f(s);\n        this.reset = true;\n      } else {\n        this.start = i;\n      }\n    }\n    return this;\n  };\n\n  Keccak.prototype.encode = function (x, right) {\n    var o = x & 255, n = 1;\n    var bytes = [o];\n    x = x >> 8;\n    o = x & 255;\n    while (o > 0) {\n      bytes.unshift(o);\n      x = x >> 8;\n      o = x & 255;\n      ++n;\n    }\n    if (right) {\n      bytes.push(n);\n    } else {\n      bytes.unshift(n);\n    }\n    this.update(bytes);\n    return bytes.length;\n  };\n\n  Keccak.prototype.encodeString = function (str) {\n    var notString, type = typeof str;\n    if (type !== 'string') {\n      if (type === 'object') {\n        if (str === null) {\n          throw new Error(INPUT_ERROR);\n        } else if (ARRAY_BUFFER && str.constructor === ArrayBuffer) {\n          str = new Uint8Array(str);\n        } else if (!Array.isArray(str)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(str)) {\n            throw new Error(INPUT_ERROR);\n          }\n        }\n      } else {\n        throw new Error(INPUT_ERROR);\n      }\n      notString = true;\n    }\n    var bytes = 0, length = str.length;\n    if (notString) {\n      bytes = length;\n    } else {\n      for (var i = 0; i < str.length; ++i) {\n        var code = str.charCodeAt(i);\n        if (code < 0x80) {\n          bytes += 1;\n        } else if (code < 0x800) {\n          bytes += 2;\n        } else if (code < 0xd800 || code >= 0xe000) {\n          bytes += 3;\n        } else {\n          code = 0x10000 + (((code & 0x3ff) << 10) | (str.charCodeAt(++i) & 0x3ff));\n          bytes += 4;\n        }\n      }\n    }\n    bytes += this.encode(bytes * 8);\n    this.update(str);\n    return bytes;\n  };\n\n  Keccak.prototype.bytepad = function (strs, w) {\n    var bytes = this.encode(w);\n    for (var i = 0; i < strs.length; ++i) {\n      bytes += this.encodeString(strs[i]);\n    }\n    var paddingBytes = w - bytes % w;\n    var zeros = [];\n    zeros.length = paddingBytes;\n    this.update(zeros);\n    return this;\n  };\n\n  Keccak.prototype.finalize = function () {\n    if (this.finalized) {\n      return;\n    }\n    this.finalized = true;\n    var blocks = this.blocks, i = this.lastByteIndex, blockCount = this.blockCount, s = this.s;\n    blocks[i >> 2] |= this.padding[i & 3];\n    if (this.lastByteIndex === this.byteCount) {\n      blocks[0] = blocks[blockCount];\n      for (i = 1; i < blockCount + 1; ++i) {\n        blocks[i] = 0;\n      }\n    }\n    blocks[blockCount - 1] |= 0x80000000;\n    for (i = 0; i < blockCount; ++i) {\n      s[i] ^= blocks[i];\n    }\n    f(s);\n  };\n\n  Keccak.prototype.toString = Keccak.prototype.hex = function () {\n    this.finalize();\n\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n      extraBytes = this.extraBytes, i = 0, j = 0;\n    var hex = '', block;\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        block = s[i];\n        hex += HEX_CHARS[(block >> 4) & 0x0F] + HEX_CHARS[block & 0x0F] +\n          HEX_CHARS[(block >> 12) & 0x0F] + HEX_CHARS[(block >> 8) & 0x0F] +\n          HEX_CHARS[(block >> 20) & 0x0F] + HEX_CHARS[(block >> 16) & 0x0F] +\n          HEX_CHARS[(block >> 28) & 0x0F] + HEX_CHARS[(block >> 24) & 0x0F];\n      }\n      if (j % blockCount === 0) {\n        f(s);\n        i = 0;\n      }\n    }\n    if (extraBytes) {\n      block = s[i];\n      hex += HEX_CHARS[(block >> 4) & 0x0F] + HEX_CHARS[block & 0x0F];\n      if (extraBytes > 1) {\n        hex += HEX_CHARS[(block >> 12) & 0x0F] + HEX_CHARS[(block >> 8) & 0x0F];\n      }\n      if (extraBytes > 2) {\n        hex += HEX_CHARS[(block >> 20) & 0x0F] + HEX_CHARS[(block >> 16) & 0x0F];\n      }\n    }\n    return hex;\n  };\n\n  Keccak.prototype.arrayBuffer = function () {\n    this.finalize();\n\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n      extraBytes = this.extraBytes, i = 0, j = 0;\n    var bytes = this.outputBits >> 3;\n    var buffer;\n    if (extraBytes) {\n      buffer = new ArrayBuffer((outputBlocks + 1) << 2);\n    } else {\n      buffer = new ArrayBuffer(bytes);\n    }\n    var array = new Uint32Array(buffer);\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        array[j] = s[i];\n      }\n      if (j % blockCount === 0) {\n        f(s);\n      }\n    }\n    if (extraBytes) {\n      array[i] = s[i];\n      buffer = buffer.slice(0, bytes);\n    }\n    return buffer;\n  };\n\n  Keccak.prototype.buffer = Keccak.prototype.arrayBuffer;\n\n  Keccak.prototype.digest = Keccak.prototype.array = function () {\n    this.finalize();\n\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n      extraBytes = this.extraBytes, i = 0, j = 0;\n    var array = [], offset, block;\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        offset = j << 2;\n        block = s[i];\n        array[offset] = block & 0xFF;\n        array[offset + 1] = (block >> 8) & 0xFF;\n        array[offset + 2] = (block >> 16) & 0xFF;\n        array[offset + 3] = (block >> 24) & 0xFF;\n      }\n      if (j % blockCount === 0) {\n        f(s);\n      }\n    }\n    if (extraBytes) {\n      offset = j << 2;\n      block = s[i];\n      array[offset] = block & 0xFF;\n      if (extraBytes > 1) {\n        array[offset + 1] = (block >> 8) & 0xFF;\n      }\n      if (extraBytes > 2) {\n        array[offset + 2] = (block >> 16) & 0xFF;\n      }\n    }\n    return array;\n  };\n\n  function Kmac(bits, padding, outputBits) {\n    Keccak.call(this, bits, padding, outputBits);\n  }\n\n  Kmac.prototype = new Keccak();\n\n  Kmac.prototype.finalize = function () {\n    this.encode(this.outputBits, true);\n    return Keccak.prototype.finalize.call(this);\n  };\n\n  var f = function (s) {\n    var h, l, n, c0, c1, c2, c3, c4, c5, c6, c7, c8, c9,\n      b0, b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b11, b12, b13, b14, b15, b16, b17,\n      b18, b19, b20, b21, b22, b23, b24, b25, b26, b27, b28, b29, b30, b31, b32, b33,\n      b34, b35, b36, b37, b38, b39, b40, b41, b42, b43, b44, b45, b46, b47, b48, b49;\n    for (n = 0; n < 48; n += 2) {\n      c0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40];\n      c1 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41];\n      c2 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42];\n      c3 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43];\n      c4 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44];\n      c5 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45];\n      c6 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46];\n      c7 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47];\n      c8 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48];\n      c9 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49];\n\n      h = c8 ^ ((c2 << 1) | (c3 >>> 31));\n      l = c9 ^ ((c3 << 1) | (c2 >>> 31));\n      s[0] ^= h;\n      s[1] ^= l;\n      s[10] ^= h;\n      s[11] ^= l;\n      s[20] ^= h;\n      s[21] ^= l;\n      s[30] ^= h;\n      s[31] ^= l;\n      s[40] ^= h;\n      s[41] ^= l;\n      h = c0 ^ ((c4 << 1) | (c5 >>> 31));\n      l = c1 ^ ((c5 << 1) | (c4 >>> 31));\n      s[2] ^= h;\n      s[3] ^= l;\n      s[12] ^= h;\n      s[13] ^= l;\n      s[22] ^= h;\n      s[23] ^= l;\n      s[32] ^= h;\n      s[33] ^= l;\n      s[42] ^= h;\n      s[43] ^= l;\n      h = c2 ^ ((c6 << 1) | (c7 >>> 31));\n      l = c3 ^ ((c7 << 1) | (c6 >>> 31));\n      s[4] ^= h;\n      s[5] ^= l;\n      s[14] ^= h;\n      s[15] ^= l;\n      s[24] ^= h;\n      s[25] ^= l;\n      s[34] ^= h;\n      s[35] ^= l;\n      s[44] ^= h;\n      s[45] ^= l;\n      h = c4 ^ ((c8 << 1) | (c9 >>> 31));\n      l = c5 ^ ((c9 << 1) | (c8 >>> 31));\n      s[6] ^= h;\n      s[7] ^= l;\n      s[16] ^= h;\n      s[17] ^= l;\n      s[26] ^= h;\n      s[27] ^= l;\n      s[36] ^= h;\n      s[37] ^= l;\n      s[46] ^= h;\n      s[47] ^= l;\n      h = c6 ^ ((c0 << 1) | (c1 >>> 31));\n      l = c7 ^ ((c1 << 1) | (c0 >>> 31));\n      s[8] ^= h;\n      s[9] ^= l;\n      s[18] ^= h;\n      s[19] ^= l;\n      s[28] ^= h;\n      s[29] ^= l;\n      s[38] ^= h;\n      s[39] ^= l;\n      s[48] ^= h;\n      s[49] ^= l;\n\n      b0 = s[0];\n      b1 = s[1];\n      b32 = (s[11] << 4) | (s[10] >>> 28);\n      b33 = (s[10] << 4) | (s[11] >>> 28);\n      b14 = (s[20] << 3) | (s[21] >>> 29);\n      b15 = (s[21] << 3) | (s[20] >>> 29);\n      b46 = (s[31] << 9) | (s[30] >>> 23);\n      b47 = (s[30] << 9) | (s[31] >>> 23);\n      b28 = (s[40] << 18) | (s[41] >>> 14);\n      b29 = (s[41] << 18) | (s[40] >>> 14);\n      b20 = (s[2] << 1) | (s[3] >>> 31);\n      b21 = (s[3] << 1) | (s[2] >>> 31);\n      b2 = (s[13] << 12) | (s[12] >>> 20);\n      b3 = (s[12] << 12) | (s[13] >>> 20);\n      b34 = (s[22] << 10) | (s[23] >>> 22);\n      b35 = (s[23] << 10) | (s[22] >>> 22);\n      b16 = (s[33] << 13) | (s[32] >>> 19);\n      b17 = (s[32] << 13) | (s[33] >>> 19);\n      b48 = (s[42] << 2) | (s[43] >>> 30);\n      b49 = (s[43] << 2) | (s[42] >>> 30);\n      b40 = (s[5] << 30) | (s[4] >>> 2);\n      b41 = (s[4] << 30) | (s[5] >>> 2);\n      b22 = (s[14] << 6) | (s[15] >>> 26);\n      b23 = (s[15] << 6) | (s[14] >>> 26);\n      b4 = (s[25] << 11) | (s[24] >>> 21);\n      b5 = (s[24] << 11) | (s[25] >>> 21);\n      b36 = (s[34] << 15) | (s[35] >>> 17);\n      b37 = (s[35] << 15) | (s[34] >>> 17);\n      b18 = (s[45] << 29) | (s[44] >>> 3);\n      b19 = (s[44] << 29) | (s[45] >>> 3);\n      b10 = (s[6] << 28) | (s[7] >>> 4);\n      b11 = (s[7] << 28) | (s[6] >>> 4);\n      b42 = (s[17] << 23) | (s[16] >>> 9);\n      b43 = (s[16] << 23) | (s[17] >>> 9);\n      b24 = (s[26] << 25) | (s[27] >>> 7);\n      b25 = (s[27] << 25) | (s[26] >>> 7);\n      b6 = (s[36] << 21) | (s[37] >>> 11);\n      b7 = (s[37] << 21) | (s[36] >>> 11);\n      b38 = (s[47] << 24) | (s[46] >>> 8);\n      b39 = (s[46] << 24) | (s[47] >>> 8);\n      b30 = (s[8] << 27) | (s[9] >>> 5);\n      b31 = (s[9] << 27) | (s[8] >>> 5);\n      b12 = (s[18] << 20) | (s[19] >>> 12);\n      b13 = (s[19] << 20) | (s[18] >>> 12);\n      b44 = (s[29] << 7) | (s[28] >>> 25);\n      b45 = (s[28] << 7) | (s[29] >>> 25);\n      b26 = (s[38] << 8) | (s[39] >>> 24);\n      b27 = (s[39] << 8) | (s[38] >>> 24);\n      b8 = (s[48] << 14) | (s[49] >>> 18);\n      b9 = (s[49] << 14) | (s[48] >>> 18);\n\n      s[0] = b0 ^ (~b2 & b4);\n      s[1] = b1 ^ (~b3 & b5);\n      s[10] = b10 ^ (~b12 & b14);\n      s[11] = b11 ^ (~b13 & b15);\n      s[20] = b20 ^ (~b22 & b24);\n      s[21] = b21 ^ (~b23 & b25);\n      s[30] = b30 ^ (~b32 & b34);\n      s[31] = b31 ^ (~b33 & b35);\n      s[40] = b40 ^ (~b42 & b44);\n      s[41] = b41 ^ (~b43 & b45);\n      s[2] = b2 ^ (~b4 & b6);\n      s[3] = b3 ^ (~b5 & b7);\n      s[12] = b12 ^ (~b14 & b16);\n      s[13] = b13 ^ (~b15 & b17);\n      s[22] = b22 ^ (~b24 & b26);\n      s[23] = b23 ^ (~b25 & b27);\n      s[32] = b32 ^ (~b34 & b36);\n      s[33] = b33 ^ (~b35 & b37);\n      s[42] = b42 ^ (~b44 & b46);\n      s[43] = b43 ^ (~b45 & b47);\n      s[4] = b4 ^ (~b6 & b8);\n      s[5] = b5 ^ (~b7 & b9);\n      s[14] = b14 ^ (~b16 & b18);\n      s[15] = b15 ^ (~b17 & b19);\n      s[24] = b24 ^ (~b26 & b28);\n      s[25] = b25 ^ (~b27 & b29);\n      s[34] = b34 ^ (~b36 & b38);\n      s[35] = b35 ^ (~b37 & b39);\n      s[44] = b44 ^ (~b46 & b48);\n      s[45] = b45 ^ (~b47 & b49);\n      s[6] = b6 ^ (~b8 & b0);\n      s[7] = b7 ^ (~b9 & b1);\n      s[16] = b16 ^ (~b18 & b10);\n      s[17] = b17 ^ (~b19 & b11);\n      s[26] = b26 ^ (~b28 & b20);\n      s[27] = b27 ^ (~b29 & b21);\n      s[36] = b36 ^ (~b38 & b30);\n      s[37] = b37 ^ (~b39 & b31);\n      s[46] = b46 ^ (~b48 & b40);\n      s[47] = b47 ^ (~b49 & b41);\n      s[8] = b8 ^ (~b0 & b2);\n      s[9] = b9 ^ (~b1 & b3);\n      s[18] = b18 ^ (~b10 & b12);\n      s[19] = b19 ^ (~b11 & b13);\n      s[28] = b28 ^ (~b20 & b22);\n      s[29] = b29 ^ (~b21 & b23);\n      s[38] = b38 ^ (~b30 & b32);\n      s[39] = b39 ^ (~b31 & b33);\n      s[48] = b48 ^ (~b40 & b42);\n      s[49] = b49 ^ (~b41 & b43);\n\n      s[0] ^= RC[n];\n      s[1] ^= RC[n + 1];\n    }\n  };\n\n  if (COMMON_JS) {\n    module.exports = methods;\n  } else {\n    for (i = 0; i < methodNames.length; ++i) {\n      root[methodNames[i]] = methods[methodNames[i]];\n    }\n    if (AMD) {\n      define(function () {\n        return methods;\n      });\n    }\n  }\n})();\n","import BN from 'bn.js'\nimport sha3 from 'js-sha3'\n\nabstract class DataStr {\n  val: string\n  constructor (val: string) {\n    if (isNaN(val as any)) throw Error('NaN. Not a valid input.')\n    this.val = val.toString()\n  }\n\n  toString () {\n    return this.val\n  }\n\n  toJSON () {\n    return this.toString()\n  }\n\n  eq (n: DataStr): boolean {\n    return this.toBN().eq(n.toBN())\n  }\n\n  abstract toBN (): BN\n}\n\nexport class HexString extends DataStr {\n  isHex = true\n  constructor (val: string) {\n    super(val)\n    if (!this.val.startsWith('0x'))\n      throw Error(`Invalid value. ${val} does not start with 0x`)\n    if (this.val.length % 2 !== 0) {\n      this.val = `0x0${this.val.substr(2)}`\n    }\n  }\n\n  toBN (): BN {\n    return new BN(this.val.slice(2), 'hex')\n  }\n\n  byteLength () {\n    return Math.ceil((this.val.length - 2) / 2)\n  }\n\n  protected assertLength (len: number) {\n    const leftPadding = len * 2 - (this.val.length - 2)\n    if (leftPadding < 0) throw `It has ${this.byteLength()} bytes`\n    else if (leftPadding > 0) {\n      const newVal = `0x${Array(leftPadding)\n        .fill('0')\n        .join('')}${this.val.slice(2)}`\n      this.val = newVal\n    }\n  }\n\n  static from (val: string): HexString {\n    return new HexString(val)\n  }\n\n  toUintString (): UintString {\n    return new UintString(this.toBN().toString(10))\n  }\n\n  toBuffer (): Buffer {\n    return Buffer.from(this.val.slice(2), 'hex')\n  }\n}\n\nexport class NumString extends DataStr {\n  isNum = true\n  constructor (val: string) {\n    super(val)\n    if (val.startsWith('0x'))\n      throw Error(`It is not a number. ${val} starts with 0x.`)\n    // always remove prefixed zeroes\n    const prefix = this.val.startsWith('-') ? '-' : ''\n    while (this.val.startsWith('0') && this.val.length > 1) {\n      this.val = this.val.slice(1)\n    }\n    this.val = prefix + this.val\n  }\n\n  static from (val: string): NumString {\n    return new NumString(val)\n  }\n\n  toBN (): BN {\n    return new BN(this.val, 10)\n  }\n\n  toBytes (): HexString {\n    return new HexString(`0x${this.toBN().toString(16)}`)\n  }\n\n  toBuffer (): Buffer {\n    return this.toBytes().toBuffer()\n  }\n}\n\nexport type bytes = 'byte' | 'bytes2' | 'bytes3'\n\nexport class UintString extends NumString {\n  isUint = true\n\n  constructor (val: string) {\n    super(val)\n    if (this.val.startsWith('-'))\n      throw Error('It can not have a negative number.')\n  }\n\n  assertThreshold (threshold: string) {\n    if (this.val.padStart(threshold.length, '0') >= threshold) {\n      throw Error('Overflow.')\n    }\n  }\n\n  static from (val: string): UintString {\n    return new UintString(val)\n  }\n\n  toHexString (): HexString {\n    return new HexString(`0x${this.toBN().toString(16)}`)\n  }\n}\n\nexport class IntString extends NumString {\n  isInt = true\n  constructor (val: string) {\n    super(val)\n  }\n  assertThreshold (threshold: string) {\n    if (this.val.startsWith('-')) {\n      if (this.val.slice(1) > threshold) throw Error('Underflow.')\n    } else {\n      if (this.val >= threshold) throw Error('Overflow.')\n    }\n  }\n  static from (val: string): IntString {\n    return new IntString(val)\n  }\n}\n\nexport class Bytes extends HexString {\n  isBytes = true\n\n  constructor (val: string) {\n    super(val)\n  }\n\n  static from (val: string): Bytes {\n    return new Bytes(val)\n  }\n}\n\nexport class Byte extends HexString {\n  isByte = true\n\n  constructor (val: string) {\n    super(val)\n    this.assertLength(1)\n  }\n\n  static from (val: string): Byte {\n    return new Byte(val)\n  }\n\n  toUint (): Uint8 {\n    return new Uint8(this.toBN().toString(10))\n  }\n}\n\nexport class Bytes2 extends HexString {\n  isBytes2 = true\n\n  constructor (val: string) {\n    super(val)\n    this.assertLength(2)\n  }\n\n  static from (val: string): Bytes2 {\n    return new Bytes2(val)\n  }\n\n  toUint (): Uint16 {\n    return new Uint16(this.toBN().toString(10))\n  }\n}\n\nexport class Bytes3 extends HexString {\n  isBytes3 = true\n\n  constructor (val: string) {\n    super(val)\n    this.assertLength(3)\n  }\n\n  static from (val: string): Bytes3 {\n    return new Bytes3(val)\n  }\n\n  toUint (): Uint24 {\n    return new Uint24(this.toBN().toString(10))\n  }\n}\n\nexport class Bytes4 extends HexString {\n  isBytes4 = true\n\n  constructor (val: string) {\n    super(val)\n    this.assertLength(4)\n  }\n\n  static from (val: string): Bytes4 {\n    return new Bytes4(val)\n  }\n\n  toUint (): Uint32 {\n    return new Uint32(this.toBN().toString(10))\n  }\n}\n\nexport class Bytes5 extends HexString {\n  isBytes5 = true\n\n  constructor (val: string) {\n    super(val)\n    this.assertLength(5)\n  }\n\n  static from (val: string): Bytes5 {\n    return new Bytes5(val)\n  }\n\n  toUint (): Uint40 {\n    return new Uint40(this.toBN().toString(10))\n  }\n}\n\nexport class Bytes6 extends HexString {\n  isBytes6 = true\n\n  constructor (val: string) {\n    super(val)\n    this.assertLength(6)\n  }\n\n  static from (val: string): Bytes6 {\n    return new Bytes6(val)\n  }\n\n  toUint (): Uint48 {\n    return new Uint48(this.toBN().toString(10))\n  }\n}\n\nexport class Bytes7 extends HexString {\n  isBytes7 = true\n\n  constructor (val: string) {\n    super(val)\n    this.assertLength(7)\n  }\n\n  static from (val: string): Bytes7 {\n    return new Bytes7(val)\n  }\n\n  toUint (): Uint56 {\n    return new Uint56(this.toBN().toString(10))\n  }\n}\n\nexport class Bytes8 extends HexString {\n  isBytes8 = true\n\n  constructor (val: string) {\n    super(val)\n    this.assertLength(8)\n  }\n\n  static from (val: string): Bytes8 {\n    return new Bytes8(val)\n  }\n\n  toUint (): Uint64 {\n    return new Uint64(this.toBN().toString(10))\n  }\n}\n\nexport class Bytes9 extends HexString {\n  isBytes9 = true\n\n  constructor (val: string) {\n    super(val)\n    this.assertLength(9)\n  }\n\n  static from (val: string): Bytes9 {\n    return new Bytes9(val)\n  }\n\n  toUint (): Uint72 {\n    return new Uint72(this.toBN().toString(10))\n  }\n}\n\nexport class Bytes10 extends HexString {\n  isBytes10 = true\n\n  constructor (val: string) {\n    super(val)\n    this.assertLength(10)\n  }\n\n  static from (val: string): Bytes10 {\n    return new Bytes10(val)\n  }\n\n  toUint (): Uint80 {\n    return new Uint80(this.toBN().toString(10))\n  }\n}\n\nexport class Bytes11 extends HexString {\n  isBytes11 = true\n\n  constructor (val: string) {\n    super(val)\n    this.assertLength(11)\n  }\n\n  static from (val: string): Bytes11 {\n    return new Bytes11(val)\n  }\n\n  toUint (): Uint88 {\n    return new Uint88(this.toBN().toString(10))\n  }\n}\n\nexport class Bytes12 extends HexString {\n  isBytes12 = true\n\n  constructor (val: string) {\n    super(val)\n    this.assertLength(12)\n  }\n\n  static from (val: string): Bytes12 {\n    return new Bytes12(val)\n  }\n\n  toUint (): Uint96 {\n    return new Uint96(this.toBN().toString(10))\n  }\n}\n\nexport class Bytes13 extends HexString {\n  isBytes13 = true\n\n  constructor (val: string) {\n    super(val)\n    this.assertLength(13)\n  }\n\n  static from (val: string): Bytes13 {\n    return new Bytes13(val)\n  }\n\n  toUint (): Uint104 {\n    return new Uint104(this.toBN().toString(10))\n  }\n}\n\nexport class Bytes14 extends HexString {\n  isBytes14 = true\n\n  constructor (val: string) {\n    super(val)\n    this.assertLength(14)\n  }\n\n  static from (val: string): Bytes14 {\n    return new Bytes14(val)\n  }\n\n  toUint (): Uint112 {\n    return new Uint112(this.toBN().toString(10))\n  }\n}\n\nexport class Bytes15 extends HexString {\n  isBytes15 = true\n\n  constructor (val: string) {\n    super(val)\n    this.assertLength(15)\n  }\n\n  static from (val: string): Bytes15 {\n    return new Bytes15(val)\n  }\n\n  toUint (): Uint120 {\n    return new Uint120(this.toBN().toString(10))\n  }\n}\n\nexport class Bytes16 extends HexString {\n  isBytes16 = true\n\n  constructor (val: string) {\n    super(val)\n    this.assertLength(16)\n  }\n\n  static from (val: string): Bytes16 {\n    return new Bytes16(val)\n  }\n\n  toUint (): Uint128 {\n    return new Uint128(this.toBN().toString(10))\n  }\n}\n\nexport class Bytes17 extends HexString {\n  isBytes17 = true\n\n  constructor (val: string) {\n    super(val)\n    this.assertLength(17)\n  }\n\n  static from (val: string): Bytes17 {\n    return new Bytes17(val)\n  }\n\n  toUint (): Uint136 {\n    return new Uint136(this.toBN().toString(10))\n  }\n}\n\nexport class Bytes18 extends HexString {\n  isBytes18 = true\n\n  constructor (val: string) {\n    super(val)\n    this.assertLength(18)\n  }\n\n  static from (val: string): Bytes18 {\n    return new Bytes18(val)\n  }\n\n  toUint (): Uint144 {\n    return new Uint144(this.toBN().toString(10))\n  }\n}\n\nexport class Bytes19 extends HexString {\n  isBytes19 = true\n\n  constructor (val: string) {\n    super(val)\n    this.assertLength(19)\n  }\n\n  static from (val: string): Bytes19 {\n    return new Bytes19(val)\n  }\n\n  toUint (): Uint152 {\n    return new Uint152(this.toBN().toString(10))\n  }\n}\n\nexport class Bytes20 extends HexString {\n  isBytes20 = true\n\n  constructor (val: string) {\n    super(val)\n    this.assertLength(20)\n  }\n\n  static from (val: string): Bytes20 {\n    return new Bytes20(val)\n  }\n\n  toUint (): Uint160 {\n    return new Uint160(this.toBN().toString(10))\n  }\n\n  toAddress (): Address {\n    return new Address(this.val)\n  }\n}\n\nexport class Bytes21 extends HexString {\n  isBytes21 = true\n\n  constructor (val: string) {\n    super(val)\n    this.assertLength(21)\n  }\n\n  static from (val: string): Bytes21 {\n    return new Bytes21(val)\n  }\n\n  toUint (): Uint168 {\n    return new Uint168(this.toBN().toString(10))\n  }\n}\n\nexport class Bytes22 extends HexString {\n  isBytes22 = true\n\n  constructor (val: string) {\n    super(val)\n    this.assertLength(22)\n  }\n\n  static from (val: string): Bytes22 {\n    return new Bytes22(val)\n  }\n\n  toUint (): Uint176 {\n    return new Uint176(this.toBN().toString(10))\n  }\n}\n\nexport class Bytes23 extends HexString {\n  isBytes23 = true\n\n  constructor (val: string) {\n    super(val)\n    this.assertLength(23)\n  }\n\n  static from (val: string): Bytes23 {\n    return new Bytes23(val)\n  }\n\n  toUint (): Uint184 {\n    return new Uint184(this.toBN().toString(10))\n  }\n}\n\nexport class Bytes24 extends HexString {\n  isBytes24 = true\n\n  constructor (val: string) {\n    super(val)\n    this.assertLength(24)\n  }\n\n  static from (val: string): Bytes24 {\n    return new Bytes24(val)\n  }\n\n  toUint (): Uint192 {\n    return new Uint192(this.toBN().toString(10))\n  }\n}\n\nexport class Bytes25 extends HexString {\n  isBytes25 = true\n\n  constructor (val: string) {\n    super(val)\n    this.assertLength(25)\n  }\n\n  static from (val: string): Bytes25 {\n    return new Bytes25(val)\n  }\n\n  toUint (): Uint200 {\n    return new Uint200(this.toBN().toString(10))\n  }\n}\n\nexport class Bytes26 extends HexString {\n  isBytes26 = true\n\n  constructor (val: string) {\n    super(val)\n    this.assertLength(26)\n  }\n\n  static from (val: string): Bytes26 {\n    return new Bytes26(val)\n  }\n\n  toUint (): Uint208 {\n    return new Uint208(this.toBN().toString(10))\n  }\n}\n\nexport class Bytes27 extends HexString {\n  isBytes27 = true\n\n  constructor (val: string) {\n    super(val)\n    this.assertLength(27)\n  }\n\n  static from (val: string): Bytes27 {\n    return new Bytes27(val)\n  }\n\n  toUint (): Uint216 {\n    return new Uint216(this.toBN().toString(10))\n  }\n}\n\nexport class Bytes28 extends HexString {\n  isBytes28 = true\n\n  constructor (val: string) {\n    super(val)\n    this.assertLength(28)\n  }\n\n  static from (val: string): Bytes28 {\n    return new Bytes28(val)\n  }\n\n  toUint (): Uint224 {\n    return new Uint224(this.toBN().toString(10))\n  }\n}\n\nexport class Bytes29 extends HexString {\n  isBytes29 = true\n\n  constructor (val: string) {\n    super(val)\n    this.assertLength(29)\n  }\n\n  static from (val: string): Bytes29 {\n    return new Bytes29(val)\n  }\n\n  toUint (): Uint232 {\n    return new Uint232(this.toBN().toString(10))\n  }\n}\n\nexport class Bytes30 extends HexString {\n  isBytes30 = true\n\n  constructor (val: string) {\n    super(val)\n    this.assertLength(30)\n  }\n\n  static from (val: string): Bytes30 {\n    return new Bytes30(val)\n  }\n\n  toUint (): Uint240 {\n    return new Uint240(this.toBN().toString(10))\n  }\n}\n\nexport class Bytes31 extends HexString {\n  isBytes31 = true\n\n  constructor (val: string) {\n    super(val)\n    this.assertLength(31)\n  }\n\n  static from (val: string): Bytes31 {\n    return new Bytes31(val)\n  }\n\n  toUint (): Uint248 {\n    return new Uint248(this.toBN().toString(10))\n  }\n}\n\nexport class Bytes32 extends HexString {\n  isBytes32 = true\n\n  constructor (val: string) {\n    super(val)\n    this.assertLength(32)\n  }\n\n  static from (val: string): Bytes32 {\n    return new Bytes32(val)\n  }\n\n  toUint (): Uint256 {\n    return new Uint256(this.toBN().toString(10))\n  }\n}\n\nexport class Uint8 extends UintString {\n  isUint8 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold('256')\n  }\n  static from (val: string): Uint8 {\n    return new Uint8(val)\n  }\n  toByte (): Byte {\n    return new Byte(`0x${this.toBN().toString(16, 2)}`)\n  }\n}\n\nexport class Uint16 extends UintString {\n  isUint16 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold('65536')\n  }\n  static from (val: string): Uint16 {\n    return new Uint16(val)\n  }\n\n  toBytes (): Bytes2 {\n    return new Bytes2(`0x${this.toBN().toString(16, 4)}`)\n  }\n}\n\nexport class Uint24 extends UintString {\n  isUint24 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold('16777216')\n  }\n  static from (val: string): Uint24 {\n    return new Uint24(val)\n  }\n  toBytes (): Bytes3 {\n    return new Bytes3(`0x${this.toBN().toString(16, 6)}`)\n  }\n}\n\nexport class Uint32 extends UintString {\n  isUint32 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold('4294967296')\n  }\n  static from (val: string): Uint32 {\n    return new Uint32(val)\n  }\n  toBytes (): Bytes4 {\n    return new Bytes4(`0x${this.toBN().toString(16, 8)}`)\n  }\n}\n\nexport class Uint40 extends UintString {\n  isUint40 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold('1099511627776')\n  }\n  static from (val: string): Uint40 {\n    return new Uint40(val)\n  }\n  toBytes (): Bytes5 {\n    return new Bytes5(`0x${this.toBN().toString(16, 10)}`)\n  }\n}\n\nexport class Uint48 extends UintString {\n  isUint48 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold('281474976710656')\n  }\n  static from (val: string): Uint48 {\n    return new Uint48(val)\n  }\n  toBytes (): Bytes6 {\n    return new Bytes6(`0x${this.toBN().toString(16, 12)}`)\n  }\n}\n\nexport class Uint56 extends UintString {\n  isUint56 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold('72057594037927936')\n  }\n  static from (val: string): Uint56 {\n    return new Uint56(val)\n  }\n  toBytes (): Bytes7 {\n    return new Bytes7(`0x${this.toBN().toString(16, 14)}`)\n  }\n}\n\nexport class Uint64 extends UintString {\n  isUint64 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold('18446744073709551616')\n  }\n  static from (val: string): Uint64 {\n    return new Uint64(val)\n  }\n  toBytes (): Bytes8 {\n    return new Bytes8(`0x${this.toBN().toString(16, 16)}`)\n  }\n}\n\nexport class Uint72 extends UintString {\n  isUint72 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold('4722366482869645213696')\n  }\n  static from (val: string): Uint72 {\n    return new Uint72(val)\n  }\n  toBytes (): Bytes9 {\n    return new Bytes9(`0x${this.toBN().toString(16, 18)}`)\n  }\n}\n\nexport class Uint80 extends UintString {\n  isUint80 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold('1208925819614629174706176')\n  }\n  static from (val: string): Uint80 {\n    return new Uint80(val)\n  }\n  toBytes (): Bytes10 {\n    return new Bytes10(`0x${this.toBN().toString(16, 20)}`)\n  }\n}\n\nexport class Uint88 extends UintString {\n  isUint88 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold('309485009821345068724781056')\n  }\n  static from (val: string): Uint88 {\n    return new Uint88(val)\n  }\n  toBytes (): Bytes11 {\n    return new Bytes11(`0x${this.toBN().toString(16, 22)}`)\n  }\n}\n\nexport class Uint96 extends UintString {\n  isUint96 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold('79228162514264337593543950336')\n  }\n  static from (val: string): Uint96 {\n    return new Uint96(val)\n  }\n  toBytes (): Bytes12 {\n    return new Bytes12(`0x${this.toBN().toString(16, 24)}`)\n  }\n}\n\nexport class Uint104 extends UintString {\n  isUint104 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold('20282409603651670423947251286016')\n  }\n  static from (val: string): Uint104 {\n    return new Uint104(val)\n  }\n  toBytes (): Bytes13 {\n    return new Bytes13(`0x${this.toBN().toString(16, 26)}`)\n  }\n}\n\nexport class Uint112 extends UintString {\n  isUint112 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold('5192296858534827628530496329220096')\n  }\n  static from (val: string): Uint112 {\n    return new Uint112(val)\n  }\n  toBytes (): Bytes14 {\n    return new Bytes14(`0x${this.toBN().toString(16, 28)}`)\n  }\n}\n\nexport class Uint120 extends UintString {\n  isUint120 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold('1329227995784915872903807060280344576')\n  }\n  static from (val: string): Uint120 {\n    return new Uint120(val)\n  }\n  toBytes (): Bytes15 {\n    return new Bytes15(`0x${this.toBN().toString(16, 30)}`)\n  }\n}\n\nexport class Uint128 extends UintString {\n  isUint128 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold('340282366920938463463374607431768211456')\n  }\n  static from (val: string): Uint128 {\n    return new Uint128(val)\n  }\n  toBytes (): Bytes16 {\n    return new Bytes16(`0x${this.toBN().toString(16, 32)}`)\n  }\n}\n\nexport class Uint136 extends UintString {\n  isUint136 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold('87112285931760246646623899502532662132736')\n  }\n  static from (val: string): Uint136 {\n    return new Uint136(val)\n  }\n  toBytes (): Bytes17 {\n    return new Bytes17(`0x${this.toBN().toString(16, 34)}`)\n  }\n}\n\nexport class Uint144 extends UintString {\n  isUint144 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold('22300745198530623141535718272648361505980416')\n  }\n  static from (val: string): Uint144 {\n    return new Uint144(val)\n  }\n  toBytes (): Bytes18 {\n    return new Bytes18(`0x${this.toBN().toString(16, 36)}`)\n  }\n}\n\nexport class Uint152 extends UintString {\n  isUint152 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold('5708990770823839524233143877797980545530986496')\n  }\n  static from (val: string): Uint152 {\n    return new Uint152(val)\n  }\n  toBytes (): Bytes19 {\n    return new Bytes19(`0x${this.toBN().toString(16, 38)}`)\n  }\n}\n\nexport class Uint160 extends UintString {\n  isUint160 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold('1461501637330902918203684832716283019655932542976')\n  }\n  static from (val: string): Uint160 {\n    return new Uint160(val)\n  }\n  toBytes (): Bytes20 {\n    return new Bytes20(`0x${this.toBN().toString(16, 40)}`)\n  }\n}\n\nexport class Uint168 extends UintString {\n  isUint168 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold('374144419156711147060143317175368453031918731001856')\n  }\n  static from (val: string): Uint168 {\n    return new Uint168(val)\n  }\n  toBytes (): Bytes21 {\n    return new Bytes21(`0x${this.toBN().toString(16, 42)}`)\n  }\n}\n\nexport class Uint176 extends UintString {\n  isUint176 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold(\n      '95780971304118053647396689196894323976171195136475136'\n    )\n  }\n  static from (val: string): Uint176 {\n    return new Uint176(val)\n  }\n  toBytes (): Bytes22 {\n    return new Bytes22(`0x${this.toBN().toString(16, 44)}`)\n  }\n}\n\nexport class Uint184 extends UintString {\n  isUint184 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold(\n      '24519928653854221733733552434404946937899825954937634816'\n    )\n  }\n  static from (val: string): Uint184 {\n    return new Uint184(val)\n  }\n  toBytes (): Bytes23 {\n    return new Bytes23(`0x${this.toBN().toString(16, 46)}`)\n  }\n}\n\nexport class Uint192 extends UintString {\n  isUint192 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold(\n      '6277101735386680763835789423207666416102355444464034512896'\n    )\n  }\n  static from (val: string): Uint192 {\n    return new Uint192(val)\n  }\n  toBytes (): Bytes24 {\n    return new Bytes24(`0x${this.toBN().toString(16, 48)}`)\n  }\n}\n\nexport class Uint200 extends UintString {\n  isUint200 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold(\n      '1606938044258990275541962092341162602522202993782792835301376'\n    )\n  }\n  static from (val: string): Uint200 {\n    return new Uint200(val)\n  }\n  toBytes (): Bytes25 {\n    return new Bytes25(`0x${this.toBN().toString(16, 50)}`)\n  }\n}\n\nexport class Uint208 extends UintString {\n  isUint208 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold(\n      '411376139330301510538742295639337626245683966408394965837152256'\n    )\n  }\n  static from (val: string): Uint208 {\n    return new Uint208(val)\n  }\n  toBytes (): Bytes26 {\n    return new Bytes26(`0x${this.toBN().toString(16, 52)}`)\n  }\n}\n\nexport class Uint216 extends UintString {\n  isUint216 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold(\n      '105312291668557186697918027683670432318895095400549111254310977536'\n    )\n  }\n  static from (val: string): Uint216 {\n    return new Uint216(val)\n  }\n  toBytes (): Bytes27 {\n    return new Bytes27(`0x${this.toBN().toString(16, 54)}`)\n  }\n}\n\nexport class Uint224 extends UintString {\n  isUint224 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold(\n      '26959946667150639794667015087019630673637144422540572481103610249216'\n    )\n  }\n  static from (val: string): Uint224 {\n    return new Uint224(val)\n  }\n  toBytes (): Bytes28 {\n    return new Bytes28(`0x${this.toBN().toString(16, 56)}`)\n  }\n}\n\nexport class Uint232 extends UintString {\n  isUint232 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold(\n      '6901746346790563787434755862277025452451108972170386555162524223799296'\n    )\n  }\n  static from (val: string): Uint232 {\n    return new Uint232(val)\n  }\n  toBytes (): Bytes29 {\n    return new Bytes29(`0x${this.toBN().toString(16, 58)}`)\n  }\n}\n\nexport class Uint240 extends UintString {\n  isUint240 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold(\n      '1766847064778384329583297500742918515827483896875618958121606201292619776'\n    )\n  }\n  static from (val: string): Uint240 {\n    return new Uint240(val)\n  }\n  toBytes (): Bytes30 {\n    return new Bytes30(`0x${this.toBN().toString(16, 60)}`)\n  }\n}\n\nexport class Uint248 extends UintString {\n  isUint248 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold(\n      '452312848583266388373324160190187140051835877600158453279131187530910662656'\n    )\n  }\n  static from (val: string): Uint248 {\n    return new Uint248(val)\n  }\n  toBytes (): Bytes31 {\n    return new Bytes31(`0x${this.toBN().toString(16, 62)}`)\n  }\n}\n\nexport class Uint256 extends UintString {\n  isUint256 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold(\n      '115792089237316195423570985008687907853269984665640564039457584007913129639936'\n    )\n  }\n  static from (val: string): Uint256 {\n    return new Uint256(val)\n  }\n  toBytes (): Bytes32 {\n    return new Bytes32(`0x${this.toBN().toString(16, 64)}`)\n  }\n}\n\nexport class Int8 extends IntString {\n  isInt8 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold('128')\n  }\n  static from (val: string): Int8 {\n    return new Int8(val)\n  }\n}\n\nexport class Int16 extends IntString {\n  isInt16 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold('32768')\n  }\n  static from (val: string): Int16 {\n    return new Int16(val)\n  }\n}\n\nexport class Int24 extends IntString {\n  isInt24 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold('8388608')\n  }\n  static from (val: string): Int24 {\n    return new Int24(val)\n  }\n}\n\nexport class Int32 extends IntString {\n  isInt32 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold('2147483648')\n  }\n  static from (val: string): Int32 {\n    return new Int32(val)\n  }\n}\n\nexport class Int40 extends IntString {\n  isInt40 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold('549755813888')\n  }\n  static from (val: string): Int40 {\n    return new Int40(val)\n  }\n}\n\nexport class Int48 extends IntString {\n  isInt48 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold('140737488355328')\n  }\n  static from (val: string): Int48 {\n    return new Int48(val)\n  }\n}\n\nexport class Int56 extends IntString {\n  isInt56 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold('36028797018963968')\n  }\n  static from (val: string): Int56 {\n    return new Int56(val)\n  }\n}\n\nexport class Int64 extends IntString {\n  isInt64 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold('9223372036854775808')\n  }\n  static from (val: string): Int64 {\n    return new Int64(val)\n  }\n}\n\nexport class Int72 extends IntString {\n  isInt72 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold('2361183241434822606848')\n  }\n  static from (val: string): Int72 {\n    return new Int72(val)\n  }\n}\n\nexport class Int80 extends IntString {\n  isInt80 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold('604462909807314587353088')\n  }\n  static from (val: string): Int80 {\n    return new Int80(val)\n  }\n}\n\nexport class Int88 extends IntString {\n  isInt88 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold('154742504910672534362390528')\n  }\n  static from (val: string): Int88 {\n    return new Int88(val)\n  }\n}\n\nexport class Int96 extends IntString {\n  isInt96 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold('39614081257132168796771975168')\n  }\n  static from (val: string): Int96 {\n    return new Int96(val)\n  }\n}\n\nexport class Int104 extends IntString {\n  isInt104 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold('10141204801825835211973625643008')\n  }\n  static from (val: string): Int104 {\n    return new Int104(val)\n  }\n}\n\nexport class Int112 extends IntString {\n  isInt112 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold('2596148429267413814265248164610048')\n  }\n  static from (val: string): Int112 {\n    return new Int112(val)\n  }\n}\n\nexport class Int120 extends IntString {\n  isInt120 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold('664613997892457936451903530140172288')\n  }\n  static from (val: string): Int120 {\n    return new Int120(val)\n  }\n}\n\nexport class Int128 extends IntString {\n  isInt128 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold('170141183460469231731687303715884105728')\n  }\n  static from (val: string): Int128 {\n    return new Int128(val)\n  }\n}\n\nexport class Int136 extends IntString {\n  isInt136 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold('43556142965880123323311949751266331066368')\n  }\n  static from (val: string): Int136 {\n    return new Int136(val)\n  }\n}\n\nexport class Int144 extends IntString {\n  isInt144 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold('11150372599265311570767859136324180752990208')\n  }\n  static from (val: string): Int144 {\n    return new Int144(val)\n  }\n}\n\nexport class Int152 extends IntString {\n  isInt152 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold('2854495385411919762116571938898990272765493248')\n  }\n  static from (val: string): Int152 {\n    return new Int152(val)\n  }\n}\n\nexport class Int160 extends IntString {\n  isInt160 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold('730750818665451459101842416358141509827966271488')\n  }\n  static from (val: string): Int160 {\n    return new Int160(val)\n  }\n}\n\nexport class Int168 extends IntString {\n  isInt168 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold('187072209578355573530071658587684226515959365500928')\n  }\n  static from (val: string): Int168 {\n    return new Int168(val)\n  }\n}\n\nexport class Int176 extends IntString {\n  isInt176 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold(\n      '47890485652059026823698344598447161988085597568237568'\n    )\n  }\n  static from (val: string): Int176 {\n    return new Int176(val)\n  }\n}\n\nexport class Int184 extends IntString {\n  isInt184 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold(\n      '12259964326927110866866776217202473468949912977468817408'\n    )\n  }\n  static from (val: string): Int184 {\n    return new Int184(val)\n  }\n}\n\nexport class Int192 extends IntString {\n  isInt192 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold(\n      '3138550867693340381917894711603833208051177722232017256448'\n    )\n  }\n  static from (val: string): Int192 {\n    return new Int192(val)\n  }\n}\n\nexport class Int200 extends IntString {\n  isInt200 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold(\n      '803469022129495137770981046170581301261101496891396417650688'\n    )\n  }\n  static from (val: string): Int200 {\n    return new Int200(val)\n  }\n}\n\nexport class Int208 extends IntString {\n  isInt208 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold(\n      '205688069665150755269371147819668813122841983204197482918576128'\n    )\n  }\n  static from (val: string): Int208 {\n    return new Int208(val)\n  }\n}\n\nexport class Int216 extends IntString {\n  isInt216 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold(\n      '52656145834278593348959013841835216159447547700274555627155488768'\n    )\n  }\n  static from (val: string): Int216 {\n    return new Int216(val)\n  }\n}\n\nexport class Int224 extends IntString {\n  isInt224 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold(\n      '13479973333575319897333507543509815336818572211270286240551805124608'\n    )\n  }\n  static from (val: string): Int224 {\n    return new Int224(val)\n  }\n}\n\nexport class Int232 extends IntString {\n  isInt232 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold(\n      '3450873173395281893717377931138512726225554486085193277581262111899648'\n    )\n  }\n  static from (val: string): Int232 {\n    return new Int232(val)\n  }\n}\n\nexport class Int240 extends IntString {\n  isInt240 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold(\n      '883423532389192164791648750371459257913741948437809479060803100646309888'\n    )\n  }\n  static from (val: string): Int240 {\n    return new Int240(val)\n  }\n}\n\nexport class Int248 extends IntString {\n  isInt248 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold(\n      '226156424291633194186662080095093570025917938800079226639565593765455331328'\n    )\n  }\n  static from (val: string): Int248 {\n    return new Int248(val)\n  }\n}\n\nexport class Int256 extends IntString {\n  isInt256 = true\n  constructor (val: string) {\n    super(val)\n    this.assertThreshold(\n      '57896044618658097711785492504343953926634992332820282019728792003956564819968'\n    )\n  }\n  static from (val: string): Int256 {\n    return new Int256(val)\n  }\n}\n\nexport class Address extends Bytes20 {\n  constructor (val: string) {\n    super(val)\n    this.val = Address.toChecksumAddress(val)\n  }\n\n  static from (val: string): Address {\n    return new Address(val)\n  }\n\n  /**\n   * @dev Check EIP-55 for the details\n   * https://github.com/ethereum/EIPs/blob/master/EIPS/eip-55.md#implementation\n   * @param address Ethereum 20 bytes address value\n   */\n  static toChecksumAddress (address: string) {\n    address = address.toLowerCase().replace('0x', '')\n    const hash = sha3.keccak256\n      .update(address)\n      .hex()\n    let ret = '0x'\n    for (let i = 0; i < address.length; i += 1) {\n      if (parseInt(hash[i], 16) >= 8) {\n        ret += address[i].toUpperCase()\n      } else {\n        ret += address[i]\n      }\n    }\n    return ret\n  }\n}\n"]},"metadata":{},"sourceType":"module"}