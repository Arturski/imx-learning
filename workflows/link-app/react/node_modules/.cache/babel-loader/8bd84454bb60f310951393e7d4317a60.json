{"ast":null,"code":"var _jsxFileName = \"/Users/arthurfrancis/Documents/repo/imx-learning/workflows/link-app/react/src/Marketplace.tsx\",\n  _s = $RefreshSig$();\nimport { ImmutableOrderStatus } from '@imtbl/imx-sdk';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nrequire('dotenv').config();\nconst Marketplace = _ref => {\n  _s();\n  let {\n    client,\n    link\n  } = _ref;\n  const [marketplace, setMarketplace] = useState(Object);\n  const [buyOrderId, setBuyOrderId] = useState('');\n  useEffect(() => {\n    load();\n  }, []);\n  async function load() {\n    setMarketplace(await client.getOrders({\n      status: ImmutableOrderStatus.active,\n      user: '0xc120a52ad90bb926bafcdfc9161740dcf4a2cea1'\n    }));\n  }\n  ;\n\n  // buy an asset\n  async function buyNFT() {\n    await link.buy({\n      orderIds: [buyOrderId]\n    });\n  }\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Buy asset:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Order ID:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: buyOrderId,\n          onChange: e => setBuyOrderId(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: buyNFT,\n        children: \"Buy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Marketplace (active sell orders):\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), JSON.stringify(marketplace.result)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(Marketplace, \"hk+MGT+liXbJI6VbcpE7Aurz9Zo=\");\n_c = Marketplace;\nexport default Marketplace;\nvar _c;\n$RefreshReg$(_c, \"Marketplace\");","map":{"version":3,"names":["ImmutableOrderStatus","useEffect","useState","require","config","Marketplace","client","link","marketplace","setMarketplace","Object","buyOrderId","setBuyOrderId","load","getOrders","status","active","user","buyNFT","buy","orderIds","e","target","value","JSON","stringify","result"],"sources":["/Users/arthurfrancis/Documents/repo/imx-learning/workflows/link-app/react/src/Marketplace.tsx"],"sourcesContent":["import { Link, ImmutableXClient, ImmutableMethodResults, ImmutableOrderStatus} from '@imtbl/imx-sdk';\nimport { useEffect, useState } from 'react';\nrequire('dotenv').config();\n\ninterface MarketplaceProps {\n  client: ImmutableXClient,\n  link: Link\n}\n\nconst Marketplace = ({client, link}: MarketplaceProps) => {\n  const [marketplace, setMarketplace] = useState<ImmutableMethodResults.ImmutableGetOrdersResult>(Object);\n  const [buyOrderId, setBuyOrderId] = useState('');\n\n  useEffect(() => {\n    load()\n  }, [])\n\n  async function load(): Promise<void> {\n    setMarketplace(await client.getOrders({status: ImmutableOrderStatus.active, user: '0xc120a52ad90bb926bafcdfc9161740dcf4a2cea1'}))\n  };\n\n  // buy an asset\n  async function buyNFT() {\n    await link.buy({\n      orderIds:[buyOrderId]\n    })\n  };\n\n  return (\n    <div>\n      <div>\n        Buy asset:\n        <br/>\n        <label>\n          Order ID:\n          <input type=\"text\" value={buyOrderId} onChange={e => setBuyOrderId(e.target.value)} />\n        </label>\n        <button onClick={buyNFT}>Buy</button>\n      </div>\n      <br/><br/><br/>\n      <div>\n        Marketplace (active sell orders):\n        <br/>\n        {JSON.stringify(marketplace.result)}\n      </div>\n    </div>\n  );\n}\n\nexport default Marketplace;\n"],"mappings":";;AAAA,SAAyDA,oBAAoB,QAAO,gBAAgB;AACpG,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC;AAC5CC,OAAO,CAAC,QAAQ,CAAC,CAACC,MAAM,EAAE;AAO1B,MAAMC,WAAW,GAAG,QAAsC;EAAA;EAAA,IAArC;IAACC,MAAM;IAAEC;EAAsB,CAAC;EACnD,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAkDQ,MAAM,CAAC;EACvG,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEhDD,SAAS,CAAC,MAAM;IACdY,IAAI,EAAE;EACR,CAAC,EAAE,EAAE,CAAC;EAEN,eAAeA,IAAI,GAAkB;IACnCJ,cAAc,CAAC,MAAMH,MAAM,CAACQ,SAAS,CAAC;MAACC,MAAM,EAAEf,oBAAoB,CAACgB,MAAM;MAAEC,IAAI,EAAE;IAA4C,CAAC,CAAC,CAAC;EACnI;EAAC;;EAED;EACA,eAAeC,MAAM,GAAG;IACtB,MAAMX,IAAI,CAACY,GAAG,CAAC;MACbC,QAAQ,EAAC,CAACT,UAAU;IACtB,CAAC,CAAC;EACJ;EAAC;EAED,oBACE;IAAA,wBACE;MAAA,sCAEE;QAAA;QAAA;QAAA;MAAA,QAAK,eACL;QAAA,qCAEE;UAAO,IAAI,EAAC,MAAM;UAAC,KAAK,EAAEA,UAAW;UAAC,QAAQ,EAAEU,CAAC,IAAIT,aAAa,CAACS,CAAC,CAACC,MAAM,CAACC,KAAK;QAAE;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QAChF,eACR;QAAQ,OAAO,EAAEL,MAAO;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAa;IAAA;MAAA;MAAA;MAAA;IAAA,QACjC,eACN;MAAA;MAAA;MAAA;IAAA,QAAK;MAAA;MAAA;MAAA;IAAA,QAAK;MAAA;MAAA;MAAA;IAAA,QAAK,eACf;MAAA,6DAEE;QAAA;QAAA;QAAA;MAAA,QAAK,EACJM,IAAI,CAACC,SAAS,CAACjB,WAAW,CAACkB,MAAM,CAAC;IAAA;MAAA;MAAA;MAAA;IAAA,QAC/B;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV,CAAC;AAAA,GAtCKrB,WAAW;AAAA,KAAXA,WAAW;AAwCjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module"}