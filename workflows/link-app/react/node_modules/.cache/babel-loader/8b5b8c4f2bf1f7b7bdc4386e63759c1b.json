{"ast":null,"code":"/**\n * Converts a string into an array of bits. Ignores all characters except 1 and 0.\n *\n * @example\n * toBits('10 10 12$%_.0') => [1,0,1,0,1,0]\n *\n * @param {String} string the string to convert\n * @returns {Array} resulting array of bits\n */\nexport default (function (string) {\n  var result = [];\n  for (var i = 0; i < string.length; i++) {\n    if (string[i] === '1') result.push(1);else if (string[i] === '0') result.push(0);\n  }\n  return result;\n});","map":{"version":3,"names":["string","result","i","length","push"],"sources":["/Users/arthurfrancis/Documents/repo/imx-learning/workflows/link-app/react/node_modules/bitwise/esm/string/to-bits.js"],"sourcesContent":["/**\n * Converts a string into an array of bits. Ignores all characters except 1 and 0.\n *\n * @example\n * toBits('10 10 12$%_.0') => [1,0,1,0,1,0]\n *\n * @param {String} string the string to convert\n * @returns {Array} resulting array of bits\n */\nexport default (function (string) {\n    var result = [];\n    for (var i = 0; i < string.length; i++) {\n        if (string[i] === '1')\n            result.push(1);\n        else if (string[i] === '0')\n            result.push(0);\n    }\n    return result;\n});\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,UAAUA,MAAM,EAAE;EAC9B,IAAIC,MAAM,GAAG,EAAE;EACf,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,MAAM,CAACG,MAAM,EAAED,CAAC,EAAE,EAAE;IACpC,IAAIF,MAAM,CAACE,CAAC,CAAC,KAAK,GAAG,EACjBD,MAAM,CAACG,IAAI,CAAC,CAAC,CAAC,CAAC,KACd,IAAIJ,MAAM,CAACE,CAAC,CAAC,KAAK,GAAG,EACtBD,MAAM,CAACG,IAAI,CAAC,CAAC,CAAC;EACtB;EACA,OAAOH,MAAM;AACjB,CAAC"},"metadata":{},"sourceType":"module"}