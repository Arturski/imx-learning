{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.thirdparty = exports.hdkey = void 0;\nvar crypto = __importStar(require(\"crypto\"));\nvar ethereumjs_util_1 = require(\"ethereumjs-util\");\nvar scrypt_js_1 = require(\"scrypt-js\");\nvar hdkey_1 = require(\"./hdkey\");\nObject.defineProperty(exports, \"hdkey\", {\n  enumerable: true,\n  get: function () {\n    return __importDefault(hdkey_1).default;\n  }\n});\nvar thirdparty_1 = require(\"./thirdparty\");\nObject.defineProperty(exports, \"thirdparty\", {\n  enumerable: true,\n  get: function () {\n    return __importDefault(thirdparty_1).default;\n  }\n});\nvar bs58check = require('bs58check');\nvar randomBytes = require('randombytes');\nvar uuidv4 = require('uuid').v4;\nfunction validateHexString(paramName, str, length) {\n  if (str.toLowerCase().startsWith('0x')) {\n    str = str.slice(2);\n  }\n  if (!str && !length) {\n    return str;\n  }\n  if (length % 2) {\n    throw new Error(\"Invalid length argument, must be an even number\");\n  }\n  if (typeof length === 'number' && str.length !== length) {\n    throw new Error(\"Invalid \" + paramName + \", string must be \" + length + \" hex characters\");\n  }\n  if (!/^([0-9a-f]{2})+$/i.test(str)) {\n    var howMany = typeof length === 'number' ? length : 'empty or a non-zero even number of';\n    throw new Error(\"Invalid \" + paramName + \", string must be \" + howMany + \" hex characters\");\n  }\n  return str;\n}\nfunction validateBuffer(paramName, buff, length) {\n  if (!Buffer.isBuffer(buff)) {\n    var howManyHex = typeof length === 'number' ? \"\" + length * 2 : 'empty or a non-zero even number of';\n    var howManyBytes = typeof length === 'number' ? \" (\" + length + \" bytes)\" : '';\n    throw new Error(\"Invalid \" + paramName + \", must be a string (\" + howManyHex + \" hex characters) or buffer\" + howManyBytes);\n  }\n  if (typeof length === 'number' && buff.length !== length) {\n    throw new Error(\"Invalid \" + paramName + \", buffer must be \" + length + \" bytes\");\n  }\n  return buff;\n}\nfunction mergeToV3ParamsWithDefaults(params) {\n  var v3Defaults = {\n    cipher: 'aes-128-ctr',\n    kdf: 'scrypt',\n    salt: randomBytes(32),\n    iv: randomBytes(16),\n    uuid: randomBytes(16),\n    dklen: 32,\n    c: 262144,\n    n: 262144,\n    r: 8,\n    p: 1\n  };\n  if (!params) {\n    return v3Defaults;\n  }\n  if (typeof params.salt === 'string') {\n    params.salt = Buffer.from(validateHexString('salt', params.salt), 'hex');\n  }\n  if (typeof params.iv === 'string') {\n    params.iv = Buffer.from(validateHexString('iv', params.iv, 32), 'hex');\n  }\n  if (typeof params.uuid === 'string') {\n    params.uuid = Buffer.from(validateHexString('uuid', params.uuid, 32), 'hex');\n  }\n  if (params.salt) {\n    validateBuffer('salt', params.salt);\n  }\n  if (params.iv) {\n    validateBuffer('iv', params.iv, 16);\n  }\n  if (params.uuid) {\n    validateBuffer('uuid', params.uuid, 16);\n  }\n  return __assign(__assign({}, v3Defaults), params);\n}\nfunction kdfParamsForPBKDF(opts) {\n  return {\n    dklen: opts.dklen,\n    salt: opts.salt,\n    c: opts.c,\n    prf: 'hmac-sha256'\n  };\n}\nfunction kdfParamsForScrypt(opts) {\n  return {\n    dklen: opts.dklen,\n    salt: opts.salt,\n    n: opts.n,\n    r: opts.r,\n    p: opts.p\n  };\n}\n// wallet implementation\nvar Wallet = /** @class */function () {\n  function Wallet(privateKey, publicKey) {\n    if (publicKey === void 0) {\n      publicKey = undefined;\n    }\n    this.privateKey = privateKey;\n    this.publicKey = publicKey;\n    if (privateKey && publicKey) {\n      throw new Error('Cannot supply both a private and a public key to the constructor');\n    }\n    if (privateKey && !(0, ethereumjs_util_1.isValidPrivate)(privateKey)) {\n      throw new Error('Private key does not satisfy the curve requirements (ie. it is invalid)');\n    }\n    if (publicKey && !(0, ethereumjs_util_1.isValidPublic)(publicKey)) {\n      throw new Error('Invalid public key');\n    }\n  }\n  // static methods\n  /**\n   * Create an instance based on a new random key.\n   *\n   * @param icapDirect setting this to `true` will generate an address suitable for the `ICAP Direct mode`\n   */\n  Wallet.generate = function (icapDirect) {\n    if (icapDirect === void 0) {\n      icapDirect = false;\n    }\n    if (icapDirect) {\n      var max = new ethereumjs_util_1.BN('088f924eeceeda7fe92e1f5b0fffffffffffffff', 16);\n      while (true) {\n        var privateKey = randomBytes(32);\n        if (new ethereumjs_util_1.BN((0, ethereumjs_util_1.privateToAddress)(privateKey)).lte(max)) {\n          return new Wallet(privateKey);\n        }\n      }\n    } else {\n      return new Wallet(randomBytes(32));\n    }\n  };\n  /**\n   * Create an instance where the address is valid against the supplied pattern (**this will be very slow**)\n   */\n  Wallet.generateVanityAddress = function (pattern) {\n    if (!(pattern instanceof RegExp)) {\n      pattern = new RegExp(pattern);\n    }\n    while (true) {\n      var privateKey = randomBytes(32);\n      var address = (0, ethereumjs_util_1.privateToAddress)(privateKey);\n      if (pattern.test(address.toString('hex'))) {\n        return new Wallet(privateKey);\n      }\n    }\n  };\n  /**\n   * Create an instance based on a public key (certain methods will not be available)\n   *\n   * This method only accepts uncompressed Ethereum-style public keys, unless\n   * the `nonStrict` flag is set to true.\n   */\n  Wallet.fromPublicKey = function (publicKey, nonStrict) {\n    if (nonStrict === void 0) {\n      nonStrict = false;\n    }\n    if (nonStrict) {\n      publicKey = (0, ethereumjs_util_1.importPublic)(publicKey);\n    }\n    return new Wallet(undefined, publicKey);\n  };\n  /**\n   * Create an instance based on a BIP32 extended public key (xpub)\n   */\n  Wallet.fromExtendedPublicKey = function (extendedPublicKey) {\n    if (extendedPublicKey.slice(0, 4) !== 'xpub') {\n      throw new Error('Not an extended public key');\n    }\n    var publicKey = bs58check.decode(extendedPublicKey).slice(45);\n    // Convert to an Ethereum public key\n    return Wallet.fromPublicKey(publicKey, true);\n  };\n  /**\n   * Create an instance based on a raw private key\n   */\n  Wallet.fromPrivateKey = function (privateKey) {\n    return new Wallet(privateKey);\n  };\n  /**\n   * Create an instance based on a BIP32 extended private key (xprv)\n   */\n  Wallet.fromExtendedPrivateKey = function (extendedPrivateKey) {\n    if (extendedPrivateKey.slice(0, 4) !== 'xprv') {\n      throw new Error('Not an extended private key');\n    }\n    var tmp = bs58check.decode(extendedPrivateKey);\n    if (tmp[45] !== 0) {\n      throw new Error('Invalid extended private key');\n    }\n    return Wallet.fromPrivateKey(tmp.slice(46));\n  };\n  /**\n   * Import a wallet (Version 1 of the Ethereum wallet format).\n   *\n   * @param input A JSON serialized string, or an object representing V1 Keystore.\n   * @param password The keystore password.\n   */\n  Wallet.fromV1 = function (input, password) {\n    return __awaiter(this, void 0, void 0, function () {\n      var json, kdfparams, derivedKey, ciphertext, mac, decipher, seed;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            json = typeof input === 'object' ? input : JSON.parse(input);\n            if (json.Version !== '1') {\n              throw new Error('Not a V1 Wallet');\n            }\n            if (json.Crypto.KeyHeader.Kdf !== 'scrypt') {\n              throw new Error('Unsupported key derivation scheme');\n            }\n            kdfparams = json.Crypto.KeyHeader.KdfParams;\n            return [4 /*yield*/, (0, scrypt_js_1.scrypt)(Buffer.from(password), Buffer.from(json.Crypto.Salt, 'hex'), kdfparams.N, kdfparams.R, kdfparams.P, kdfparams.DkLen)];\n          case 1:\n            derivedKey = _a.sent();\n            ciphertext = Buffer.from(json.Crypto.CipherText, 'hex');\n            mac = (0, ethereumjs_util_1.keccak256)(Buffer.concat([derivedKey.slice(16, 32), ciphertext]));\n            if (mac.toString('hex') !== json.Crypto.MAC) {\n              throw new Error('Key derivation failed - possibly wrong passphrase');\n            }\n            decipher = crypto.createDecipheriv('aes-128-cbc', (0, ethereumjs_util_1.keccak256)(derivedKey.slice(0, 16)).slice(0, 16), Buffer.from(json.Crypto.IV, 'hex'));\n            seed = runCipherBuffer(decipher, ciphertext);\n            return [2 /*return*/, new Wallet(seed)];\n        }\n      });\n    });\n  };\n  /**\n   * Import a wallet (Version 3 of the Ethereum wallet format). Set `nonStrict` true to accept files with mixed-caps.\n   *\n   * @param input A JSON serialized string, or an object representing V3 Keystore.\n   * @param password The keystore password.\n   */\n  Wallet.fromV3 = function (input, password, nonStrict) {\n    if (nonStrict === void 0) {\n      nonStrict = false;\n    }\n    return __awaiter(this, void 0, void 0, function () {\n      var json, derivedKey, kdfparams, ciphertext, mac, decipher, seed;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            json = typeof input === 'object' ? input : JSON.parse(nonStrict ? input.toLowerCase() : input);\n            if (json.version !== 3) {\n              throw new Error('Not a V3 wallet');\n            }\n            if (!(json.crypto.kdf === 'scrypt')) return [3 /*break*/, 2];\n            kdfparams = json.crypto.kdfparams;\n            return [4 /*yield*/, (0, scrypt_js_1.scrypt)(Buffer.from(password), Buffer.from(kdfparams.salt, 'hex'), kdfparams.n, kdfparams.r, kdfparams.p, kdfparams.dklen)];\n          case 1:\n            // FIXME: support progress reporting callback\n            derivedKey = _a.sent();\n            return [3 /*break*/, 3];\n          case 2:\n            if (json.crypto.kdf === 'pbkdf2') {\n              kdfparams = json.crypto.kdfparams;\n              if (kdfparams.prf !== 'hmac-sha256') {\n                throw new Error('Unsupported parameters to PBKDF2');\n              }\n              derivedKey = crypto.pbkdf2Sync(Buffer.from(password), Buffer.from(kdfparams.salt, 'hex'), kdfparams.c, kdfparams.dklen, 'sha256');\n            } else {\n              throw new Error('Unsupported key derivation scheme');\n            }\n            _a.label = 3;\n          case 3:\n            ciphertext = Buffer.from(json.crypto.ciphertext, 'hex');\n            mac = (0, ethereumjs_util_1.keccak256)(Buffer.concat([Buffer.from(derivedKey.slice(16, 32)), ciphertext]));\n            if (mac.toString('hex') !== json.crypto.mac) {\n              throw new Error('Key derivation failed - possibly wrong passphrase');\n            }\n            decipher = crypto.createDecipheriv(json.crypto.cipher, derivedKey.slice(0, 16), Buffer.from(json.crypto.cipherparams.iv, 'hex'));\n            seed = runCipherBuffer(decipher, ciphertext);\n            return [2 /*return*/, new Wallet(seed)];\n        }\n      });\n    });\n  };\n  /*\n   * Import an Ethereum Pre Sale wallet.\n   * Based on https://github.com/ethereum/pyethsaletool/blob/master/pyethsaletool.py\n   * JSON fields: encseed, ethaddr, btcaddr, email\n   *\n   * @param input A JSON serialized string, or an object representing EthSale Keystore.\n   * @param password The keystore password.\n   */\n  Wallet.fromEthSale = function (input, password) {\n    var json = typeof input === 'object' ? input : JSON.parse(input);\n    var encseed = Buffer.from(json.encseed, 'hex');\n    // key derivation\n    var derivedKey = crypto.pbkdf2Sync(password, password, 2000, 32, 'sha256').slice(0, 16);\n    // seed decoding (IV is first 16 bytes)\n    // NOTE: crypto (derived from openssl) when used with aes-*-cbc will handle PKCS#7 padding internally\n    //       see also http://stackoverflow.com/a/31614770/4964819\n    var decipher = crypto.createDecipheriv('aes-128-cbc', derivedKey, encseed.slice(0, 16));\n    var seed = runCipherBuffer(decipher, encseed.slice(16));\n    var wallet = new Wallet((0, ethereumjs_util_1.keccak256)(seed));\n    if (wallet.getAddress().toString('hex') !== json.ethaddr) {\n      throw new Error('Decoded key mismatch - possibly wrong passphrase');\n    }\n    return wallet;\n  };\n  Object.defineProperty(Wallet.prototype, \"pubKey\", {\n    // private getters\n    /**\n     * Returns the wallet's public key.\n     */\n    get: function () {\n      if (!keyExists(this.publicKey)) {\n        this.publicKey = (0, ethereumjs_util_1.privateToPublic)(this.privateKey);\n      }\n      return this.publicKey;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Wallet.prototype, \"privKey\", {\n    /**\n     * Returns the wallet's private key.\n     */\n    get: function () {\n      if (!keyExists(this.privateKey)) {\n        throw new Error('This is a public key only wallet');\n      }\n      return this.privateKey;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  // public instance methods\n  /**\n   * Returns the wallet's private key.\n   *\n   */\n  // tslint:disable-next-line\n  Wallet.prototype.getPrivateKey = function () {\n    return this.privKey;\n  };\n  Wallet.prototype.getPrivateKeyString = function () {\n    return (0, ethereumjs_util_1.bufferToHex)(this.privKey);\n  };\n  /**\n   * Returns the wallet's public key.\n   */\n  // tslint:disable-next-line\n  Wallet.prototype.getPublicKey = function () {\n    return this.pubKey;\n  };\n  /**\n   * Returns the wallet's public key as a \"0x\" prefixed hex string\n   */\n  Wallet.prototype.getPublicKeyString = function () {\n    return (0, ethereumjs_util_1.bufferToHex)(this.getPublicKey());\n  };\n  /**\n   * Returns the wallet's address.\n   */\n  Wallet.prototype.getAddress = function () {\n    return (0, ethereumjs_util_1.publicToAddress)(this.pubKey);\n  };\n  /**\n   * Returns the wallet's address as a \"0x\" prefixed hex string\n   */\n  Wallet.prototype.getAddressString = function () {\n    return (0, ethereumjs_util_1.bufferToHex)(this.getAddress());\n  };\n  /**\n   * Returns the wallet's private key as a \"0x\" prefixed hex string checksummed\n   * according to [EIP 55](https://github.com/ethereum/EIPs/issues/55).\n   */\n  Wallet.prototype.getChecksumAddressString = function () {\n    return (0, ethereumjs_util_1.toChecksumAddress)(this.getAddressString());\n  };\n  /**\n   * Returns an Etherem Version 3 Keystore Format object representing the wallet\n   *\n   * @param password The password used to encrypt the Keystore.\n   * @param opts The options for the keystore. See [its spec](https://github.com/ethereum/wiki/wiki/Web3-Secret-Storage-Definition) for more info.\n   */\n  Wallet.prototype.toV3 = function (password, opts) {\n    return __awaiter(this, void 0, void 0, function () {\n      var v3Params, kdfParams, derivedKey, _a, cipher, ciphertext, mac;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            if (!keyExists(this.privateKey)) {\n              throw new Error('This is a public key only wallet');\n            }\n            v3Params = mergeToV3ParamsWithDefaults(opts);\n            _a = v3Params.kdf;\n            switch (_a) {\n              case \"pbkdf2\" /* PBKDF */:\n                return [3 /*break*/, 1];\n              case \"scrypt\" /* Scrypt */:\n                return [3 /*break*/, 2];\n            }\n            return [3 /*break*/, 4];\n          case 1:\n            kdfParams = kdfParamsForPBKDF(v3Params);\n            derivedKey = crypto.pbkdf2Sync(Buffer.from(password), kdfParams.salt, kdfParams.c, kdfParams.dklen, 'sha256');\n            return [3 /*break*/, 5];\n          case 2:\n            kdfParams = kdfParamsForScrypt(v3Params);\n            return [4 /*yield*/, (0, scrypt_js_1.scrypt)(Buffer.from(password), kdfParams.salt, kdfParams.n, kdfParams.r, kdfParams.p, kdfParams.dklen)];\n          case 3:\n            // FIXME: support progress reporting callback\n            derivedKey = _b.sent();\n            return [3 /*break*/, 5];\n          case 4:\n            throw new Error('Unsupported kdf');\n          case 5:\n            cipher = crypto.createCipheriv(v3Params.cipher, derivedKey.slice(0, 16), v3Params.iv);\n            if (!cipher) {\n              throw new Error('Unsupported cipher');\n            }\n            ciphertext = runCipherBuffer(cipher, this.privKey);\n            mac = (0, ethereumjs_util_1.keccak256)(Buffer.concat([Buffer.from(derivedKey.slice(16, 32)), Buffer.from(ciphertext)]));\n            return [2 /*return*/, {\n              version: 3,\n              id: uuidv4({\n                random: v3Params.uuid\n              }),\n              // @ts-ignore - the official V3 keystore spec omits the address key\n              address: this.getAddress().toString('hex'),\n              crypto: {\n                ciphertext: ciphertext.toString('hex'),\n                cipherparams: {\n                  iv: v3Params.iv.toString('hex')\n                },\n                cipher: v3Params.cipher,\n                kdf: v3Params.kdf,\n                kdfparams: __assign(__assign({}, kdfParams), {\n                  salt: kdfParams.salt.toString('hex')\n                }),\n                mac: mac.toString('hex')\n              }\n            }];\n        }\n      });\n    });\n  };\n  /**\n   * Return the suggested filename for V3 keystores.\n   */\n  Wallet.prototype.getV3Filename = function (timestamp) {\n    /*\n     * We want a timestamp like 2016-03-15T17-11-33.007598288Z. Date formatting\n     * is a pain in Javascript, everbody knows that. We could use moment.js,\n     * but decide to do it manually in order to save space.\n     *\n     * toJSON() returns a pretty close version, so let's use it. It is not UTC though,\n     * but does it really matter?\n     *\n     * Alternative manual way with padding and Date fields: http://stackoverflow.com/a/7244288/4964819\n     *\n     */\n    var ts = timestamp ? new Date(timestamp) : new Date();\n    return ['UTC--', ts.toJSON().replace(/:/g, '-'), '--', this.getAddress().toString('hex')].join('');\n  };\n  Wallet.prototype.toV3String = function (password, opts) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, _b;\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            _b = (_a = JSON).stringify;\n            return [4 /*yield*/, this.toV3(password, opts)];\n          case 1:\n            return [2 /*return*/, _b.apply(_a, [_c.sent()])];\n        }\n      });\n    });\n  };\n  return Wallet;\n}();\nexports.default = Wallet;\n// helpers\nfunction runCipherBuffer(cipher, data) {\n  return Buffer.concat([cipher.update(data), cipher.final()]);\n}\nfunction keyExists(k) {\n  return k !== undefined && k !== null;\n}","map":{"version":3,"sources":["../src/index.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.thirdparty = exports.hdkey = void 0;\nvar crypto = __importStar(require(\"crypto\"));\nvar ethereumjs_util_1 = require(\"ethereumjs-util\");\nvar scrypt_js_1 = require(\"scrypt-js\");\nvar hdkey_1 = require(\"./hdkey\");\nObject.defineProperty(exports, \"hdkey\", { enumerable: true, get: function () { return __importDefault(hdkey_1).default; } });\nvar thirdparty_1 = require(\"./thirdparty\");\nObject.defineProperty(exports, \"thirdparty\", { enumerable: true, get: function () { return __importDefault(thirdparty_1).default; } });\nvar bs58check = require('bs58check');\nvar randomBytes = require('randombytes');\nvar uuidv4 = require('uuid').v4;\nfunction validateHexString(paramName, str, length) {\n    if (str.toLowerCase().startsWith('0x')) {\n        str = str.slice(2);\n    }\n    if (!str && !length) {\n        return str;\n    }\n    if (length % 2) {\n        throw new Error(\"Invalid length argument, must be an even number\");\n    }\n    if (typeof length === 'number' && str.length !== length) {\n        throw new Error(\"Invalid \" + paramName + \", string must be \" + length + \" hex characters\");\n    }\n    if (!/^([0-9a-f]{2})+$/i.test(str)) {\n        var howMany = typeof length === 'number' ? length : 'empty or a non-zero even number of';\n        throw new Error(\"Invalid \" + paramName + \", string must be \" + howMany + \" hex characters\");\n    }\n    return str;\n}\nfunction validateBuffer(paramName, buff, length) {\n    if (!Buffer.isBuffer(buff)) {\n        var howManyHex = typeof length === 'number' ? \"\" + length * 2 : 'empty or a non-zero even number of';\n        var howManyBytes = typeof length === 'number' ? \" (\" + length + \" bytes)\" : '';\n        throw new Error(\"Invalid \" + paramName + \", must be a string (\" + howManyHex + \" hex characters) or buffer\" + howManyBytes);\n    }\n    if (typeof length === 'number' && buff.length !== length) {\n        throw new Error(\"Invalid \" + paramName + \", buffer must be \" + length + \" bytes\");\n    }\n    return buff;\n}\nfunction mergeToV3ParamsWithDefaults(params) {\n    var v3Defaults = {\n        cipher: 'aes-128-ctr',\n        kdf: 'scrypt',\n        salt: randomBytes(32),\n        iv: randomBytes(16),\n        uuid: randomBytes(16),\n        dklen: 32,\n        c: 262144,\n        n: 262144,\n        r: 8,\n        p: 1,\n    };\n    if (!params) {\n        return v3Defaults;\n    }\n    if (typeof params.salt === 'string') {\n        params.salt = Buffer.from(validateHexString('salt', params.salt), 'hex');\n    }\n    if (typeof params.iv === 'string') {\n        params.iv = Buffer.from(validateHexString('iv', params.iv, 32), 'hex');\n    }\n    if (typeof params.uuid === 'string') {\n        params.uuid = Buffer.from(validateHexString('uuid', params.uuid, 32), 'hex');\n    }\n    if (params.salt) {\n        validateBuffer('salt', params.salt);\n    }\n    if (params.iv) {\n        validateBuffer('iv', params.iv, 16);\n    }\n    if (params.uuid) {\n        validateBuffer('uuid', params.uuid, 16);\n    }\n    return __assign(__assign({}, v3Defaults), params);\n}\nfunction kdfParamsForPBKDF(opts) {\n    return {\n        dklen: opts.dklen,\n        salt: opts.salt,\n        c: opts.c,\n        prf: 'hmac-sha256',\n    };\n}\nfunction kdfParamsForScrypt(opts) {\n    return {\n        dklen: opts.dklen,\n        salt: opts.salt,\n        n: opts.n,\n        r: opts.r,\n        p: opts.p,\n    };\n}\n// wallet implementation\nvar Wallet = /** @class */ (function () {\n    function Wallet(privateKey, publicKey) {\n        if (publicKey === void 0) { publicKey = undefined; }\n        this.privateKey = privateKey;\n        this.publicKey = publicKey;\n        if (privateKey && publicKey) {\n            throw new Error('Cannot supply both a private and a public key to the constructor');\n        }\n        if (privateKey && !(0, ethereumjs_util_1.isValidPrivate)(privateKey)) {\n            throw new Error('Private key does not satisfy the curve requirements (ie. it is invalid)');\n        }\n        if (publicKey && !(0, ethereumjs_util_1.isValidPublic)(publicKey)) {\n            throw new Error('Invalid public key');\n        }\n    }\n    // static methods\n    /**\n     * Create an instance based on a new random key.\n     *\n     * @param icapDirect setting this to `true` will generate an address suitable for the `ICAP Direct mode`\n     */\n    Wallet.generate = function (icapDirect) {\n        if (icapDirect === void 0) { icapDirect = false; }\n        if (icapDirect) {\n            var max = new ethereumjs_util_1.BN('088f924eeceeda7fe92e1f5b0fffffffffffffff', 16);\n            while (true) {\n                var privateKey = randomBytes(32);\n                if (new ethereumjs_util_1.BN((0, ethereumjs_util_1.privateToAddress)(privateKey)).lte(max)) {\n                    return new Wallet(privateKey);\n                }\n            }\n        }\n        else {\n            return new Wallet(randomBytes(32));\n        }\n    };\n    /**\n     * Create an instance where the address is valid against the supplied pattern (**this will be very slow**)\n     */\n    Wallet.generateVanityAddress = function (pattern) {\n        if (!(pattern instanceof RegExp)) {\n            pattern = new RegExp(pattern);\n        }\n        while (true) {\n            var privateKey = randomBytes(32);\n            var address = (0, ethereumjs_util_1.privateToAddress)(privateKey);\n            if (pattern.test(address.toString('hex'))) {\n                return new Wallet(privateKey);\n            }\n        }\n    };\n    /**\n     * Create an instance based on a public key (certain methods will not be available)\n     *\n     * This method only accepts uncompressed Ethereum-style public keys, unless\n     * the `nonStrict` flag is set to true.\n     */\n    Wallet.fromPublicKey = function (publicKey, nonStrict) {\n        if (nonStrict === void 0) { nonStrict = false; }\n        if (nonStrict) {\n            publicKey = (0, ethereumjs_util_1.importPublic)(publicKey);\n        }\n        return new Wallet(undefined, publicKey);\n    };\n    /**\n     * Create an instance based on a BIP32 extended public key (xpub)\n     */\n    Wallet.fromExtendedPublicKey = function (extendedPublicKey) {\n        if (extendedPublicKey.slice(0, 4) !== 'xpub') {\n            throw new Error('Not an extended public key');\n        }\n        var publicKey = bs58check.decode(extendedPublicKey).slice(45);\n        // Convert to an Ethereum public key\n        return Wallet.fromPublicKey(publicKey, true);\n    };\n    /**\n     * Create an instance based on a raw private key\n     */\n    Wallet.fromPrivateKey = function (privateKey) {\n        return new Wallet(privateKey);\n    };\n    /**\n     * Create an instance based on a BIP32 extended private key (xprv)\n     */\n    Wallet.fromExtendedPrivateKey = function (extendedPrivateKey) {\n        if (extendedPrivateKey.slice(0, 4) !== 'xprv') {\n            throw new Error('Not an extended private key');\n        }\n        var tmp = bs58check.decode(extendedPrivateKey);\n        if (tmp[45] !== 0) {\n            throw new Error('Invalid extended private key');\n        }\n        return Wallet.fromPrivateKey(tmp.slice(46));\n    };\n    /**\n     * Import a wallet (Version 1 of the Ethereum wallet format).\n     *\n     * @param input A JSON serialized string, or an object representing V1 Keystore.\n     * @param password The keystore password.\n     */\n    Wallet.fromV1 = function (input, password) {\n        return __awaiter(this, void 0, void 0, function () {\n            var json, kdfparams, derivedKey, ciphertext, mac, decipher, seed;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        json = typeof input === 'object' ? input : JSON.parse(input);\n                        if (json.Version !== '1') {\n                            throw new Error('Not a V1 Wallet');\n                        }\n                        if (json.Crypto.KeyHeader.Kdf !== 'scrypt') {\n                            throw new Error('Unsupported key derivation scheme');\n                        }\n                        kdfparams = json.Crypto.KeyHeader.KdfParams;\n                        return [4 /*yield*/, (0, scrypt_js_1.scrypt)(Buffer.from(password), Buffer.from(json.Crypto.Salt, 'hex'), kdfparams.N, kdfparams.R, kdfparams.P, kdfparams.DkLen)];\n                    case 1:\n                        derivedKey = _a.sent();\n                        ciphertext = Buffer.from(json.Crypto.CipherText, 'hex');\n                        mac = (0, ethereumjs_util_1.keccak256)(Buffer.concat([derivedKey.slice(16, 32), ciphertext]));\n                        if (mac.toString('hex') !== json.Crypto.MAC) {\n                            throw new Error('Key derivation failed - possibly wrong passphrase');\n                        }\n                        decipher = crypto.createDecipheriv('aes-128-cbc', (0, ethereumjs_util_1.keccak256)(derivedKey.slice(0, 16)).slice(0, 16), Buffer.from(json.Crypto.IV, 'hex'));\n                        seed = runCipherBuffer(decipher, ciphertext);\n                        return [2 /*return*/, new Wallet(seed)];\n                }\n            });\n        });\n    };\n    /**\n     * Import a wallet (Version 3 of the Ethereum wallet format). Set `nonStrict` true to accept files with mixed-caps.\n     *\n     * @param input A JSON serialized string, or an object representing V3 Keystore.\n     * @param password The keystore password.\n     */\n    Wallet.fromV3 = function (input, password, nonStrict) {\n        if (nonStrict === void 0) { nonStrict = false; }\n        return __awaiter(this, void 0, void 0, function () {\n            var json, derivedKey, kdfparams, ciphertext, mac, decipher, seed;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        json = typeof input === 'object' ? input : JSON.parse(nonStrict ? input.toLowerCase() : input);\n                        if (json.version !== 3) {\n                            throw new Error('Not a V3 wallet');\n                        }\n                        if (!(json.crypto.kdf === 'scrypt')) return [3 /*break*/, 2];\n                        kdfparams = json.crypto.kdfparams;\n                        return [4 /*yield*/, (0, scrypt_js_1.scrypt)(Buffer.from(password), Buffer.from(kdfparams.salt, 'hex'), kdfparams.n, kdfparams.r, kdfparams.p, kdfparams.dklen)];\n                    case 1:\n                        // FIXME: support progress reporting callback\n                        derivedKey = _a.sent();\n                        return [3 /*break*/, 3];\n                    case 2:\n                        if (json.crypto.kdf === 'pbkdf2') {\n                            kdfparams = json.crypto.kdfparams;\n                            if (kdfparams.prf !== 'hmac-sha256') {\n                                throw new Error('Unsupported parameters to PBKDF2');\n                            }\n                            derivedKey = crypto.pbkdf2Sync(Buffer.from(password), Buffer.from(kdfparams.salt, 'hex'), kdfparams.c, kdfparams.dklen, 'sha256');\n                        }\n                        else {\n                            throw new Error('Unsupported key derivation scheme');\n                        }\n                        _a.label = 3;\n                    case 3:\n                        ciphertext = Buffer.from(json.crypto.ciphertext, 'hex');\n                        mac = (0, ethereumjs_util_1.keccak256)(Buffer.concat([Buffer.from(derivedKey.slice(16, 32)), ciphertext]));\n                        if (mac.toString('hex') !== json.crypto.mac) {\n                            throw new Error('Key derivation failed - possibly wrong passphrase');\n                        }\n                        decipher = crypto.createDecipheriv(json.crypto.cipher, derivedKey.slice(0, 16), Buffer.from(json.crypto.cipherparams.iv, 'hex'));\n                        seed = runCipherBuffer(decipher, ciphertext);\n                        return [2 /*return*/, new Wallet(seed)];\n                }\n            });\n        });\n    };\n    /*\n     * Import an Ethereum Pre Sale wallet.\n     * Based on https://github.com/ethereum/pyethsaletool/blob/master/pyethsaletool.py\n     * JSON fields: encseed, ethaddr, btcaddr, email\n     *\n     * @param input A JSON serialized string, or an object representing EthSale Keystore.\n     * @param password The keystore password.\n     */\n    Wallet.fromEthSale = function (input, password) {\n        var json = typeof input === 'object' ? input : JSON.parse(input);\n        var encseed = Buffer.from(json.encseed, 'hex');\n        // key derivation\n        var derivedKey = crypto.pbkdf2Sync(password, password, 2000, 32, 'sha256').slice(0, 16);\n        // seed decoding (IV is first 16 bytes)\n        // NOTE: crypto (derived from openssl) when used with aes-*-cbc will handle PKCS#7 padding internally\n        //       see also http://stackoverflow.com/a/31614770/4964819\n        var decipher = crypto.createDecipheriv('aes-128-cbc', derivedKey, encseed.slice(0, 16));\n        var seed = runCipherBuffer(decipher, encseed.slice(16));\n        var wallet = new Wallet((0, ethereumjs_util_1.keccak256)(seed));\n        if (wallet.getAddress().toString('hex') !== json.ethaddr) {\n            throw new Error('Decoded key mismatch - possibly wrong passphrase');\n        }\n        return wallet;\n    };\n    Object.defineProperty(Wallet.prototype, \"pubKey\", {\n        // private getters\n        /**\n         * Returns the wallet's public key.\n         */\n        get: function () {\n            if (!keyExists(this.publicKey)) {\n                this.publicKey = (0, ethereumjs_util_1.privateToPublic)(this.privateKey);\n            }\n            return this.publicKey;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Wallet.prototype, \"privKey\", {\n        /**\n         * Returns the wallet's private key.\n         */\n        get: function () {\n            if (!keyExists(this.privateKey)) {\n                throw new Error('This is a public key only wallet');\n            }\n            return this.privateKey;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    // public instance methods\n    /**\n     * Returns the wallet's private key.\n     *\n     */\n    // tslint:disable-next-line\n    Wallet.prototype.getPrivateKey = function () {\n        return this.privKey;\n    };\n    Wallet.prototype.getPrivateKeyString = function () {\n        return (0, ethereumjs_util_1.bufferToHex)(this.privKey);\n    };\n    /**\n     * Returns the wallet's public key.\n     */\n    // tslint:disable-next-line\n    Wallet.prototype.getPublicKey = function () {\n        return this.pubKey;\n    };\n    /**\n     * Returns the wallet's public key as a \"0x\" prefixed hex string\n     */\n    Wallet.prototype.getPublicKeyString = function () {\n        return (0, ethereumjs_util_1.bufferToHex)(this.getPublicKey());\n    };\n    /**\n     * Returns the wallet's address.\n     */\n    Wallet.prototype.getAddress = function () {\n        return (0, ethereumjs_util_1.publicToAddress)(this.pubKey);\n    };\n    /**\n     * Returns the wallet's address as a \"0x\" prefixed hex string\n     */\n    Wallet.prototype.getAddressString = function () {\n        return (0, ethereumjs_util_1.bufferToHex)(this.getAddress());\n    };\n    /**\n     * Returns the wallet's private key as a \"0x\" prefixed hex string checksummed\n     * according to [EIP 55](https://github.com/ethereum/EIPs/issues/55).\n     */\n    Wallet.prototype.getChecksumAddressString = function () {\n        return (0, ethereumjs_util_1.toChecksumAddress)(this.getAddressString());\n    };\n    /**\n     * Returns an Etherem Version 3 Keystore Format object representing the wallet\n     *\n     * @param password The password used to encrypt the Keystore.\n     * @param opts The options for the keystore. See [its spec](https://github.com/ethereum/wiki/wiki/Web3-Secret-Storage-Definition) for more info.\n     */\n    Wallet.prototype.toV3 = function (password, opts) {\n        return __awaiter(this, void 0, void 0, function () {\n            var v3Params, kdfParams, derivedKey, _a, cipher, ciphertext, mac;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!keyExists(this.privateKey)) {\n                            throw new Error('This is a public key only wallet');\n                        }\n                        v3Params = mergeToV3ParamsWithDefaults(opts);\n                        _a = v3Params.kdf;\n                        switch (_a) {\n                            case \"pbkdf2\" /* PBKDF */: return [3 /*break*/, 1];\n                            case \"scrypt\" /* Scrypt */: return [3 /*break*/, 2];\n                        }\n                        return [3 /*break*/, 4];\n                    case 1:\n                        kdfParams = kdfParamsForPBKDF(v3Params);\n                        derivedKey = crypto.pbkdf2Sync(Buffer.from(password), kdfParams.salt, kdfParams.c, kdfParams.dklen, 'sha256');\n                        return [3 /*break*/, 5];\n                    case 2:\n                        kdfParams = kdfParamsForScrypt(v3Params);\n                        return [4 /*yield*/, (0, scrypt_js_1.scrypt)(Buffer.from(password), kdfParams.salt, kdfParams.n, kdfParams.r, kdfParams.p, kdfParams.dklen)];\n                    case 3:\n                        // FIXME: support progress reporting callback\n                        derivedKey = _b.sent();\n                        return [3 /*break*/, 5];\n                    case 4: throw new Error('Unsupported kdf');\n                    case 5:\n                        cipher = crypto.createCipheriv(v3Params.cipher, derivedKey.slice(0, 16), v3Params.iv);\n                        if (!cipher) {\n                            throw new Error('Unsupported cipher');\n                        }\n                        ciphertext = runCipherBuffer(cipher, this.privKey);\n                        mac = (0, ethereumjs_util_1.keccak256)(Buffer.concat([Buffer.from(derivedKey.slice(16, 32)), Buffer.from(ciphertext)]));\n                        return [2 /*return*/, {\n                                version: 3,\n                                id: uuidv4({ random: v3Params.uuid }),\n                                // @ts-ignore - the official V3 keystore spec omits the address key\n                                address: this.getAddress().toString('hex'),\n                                crypto: {\n                                    ciphertext: ciphertext.toString('hex'),\n                                    cipherparams: { iv: v3Params.iv.toString('hex') },\n                                    cipher: v3Params.cipher,\n                                    kdf: v3Params.kdf,\n                                    kdfparams: __assign(__assign({}, kdfParams), { salt: kdfParams.salt.toString('hex') }),\n                                    mac: mac.toString('hex'),\n                                },\n                            }];\n                }\n            });\n        });\n    };\n    /**\n     * Return the suggested filename for V3 keystores.\n     */\n    Wallet.prototype.getV3Filename = function (timestamp) {\n        /*\n         * We want a timestamp like 2016-03-15T17-11-33.007598288Z. Date formatting\n         * is a pain in Javascript, everbody knows that. We could use moment.js,\n         * but decide to do it manually in order to save space.\n         *\n         * toJSON() returns a pretty close version, so let's use it. It is not UTC though,\n         * but does it really matter?\n         *\n         * Alternative manual way with padding and Date fields: http://stackoverflow.com/a/7244288/4964819\n         *\n         */\n        var ts = timestamp ? new Date(timestamp) : new Date();\n        return ['UTC--', ts.toJSON().replace(/:/g, '-'), '--', this.getAddress().toString('hex')].join('');\n    };\n    Wallet.prototype.toV3String = function (password, opts) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, _b;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        _b = (_a = JSON).stringify;\n                        return [4 /*yield*/, this.toV3(password, opts)];\n                    case 1: return [2 /*return*/, _b.apply(_a, [_c.sent()])];\n                }\n            });\n        });\n    };\n    return Wallet;\n}());\nexports.default = Wallet;\n// helpers\nfunction runCipherBuffer(cipher, data) {\n    return Buffer.concat([cipher.update(data), cipher.final()]);\n}\nfunction keyExists(k) {\n    return k !== undefined && k !== null;\n}\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}