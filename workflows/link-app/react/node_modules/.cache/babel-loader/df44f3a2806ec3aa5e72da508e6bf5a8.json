{"ast":null,"code":"import { withValidate } from './withValidate';\nimport { mapLeft } from 'fp-ts/es6/Either';\n/**\n * Returns a clone of the given codec that sets the given string as error messsage\n *\n * @example\n * import { withMessage } from 'io-ts-types/es6/withMessage'\n * import * as t from 'io-ts'\n * import { PathReporter } from 'io-ts/es6/PathReporter'\n * import { right } from 'fp-ts/es6/Either'\n *\n * const T = withMessage(t.number, () => 'Invalid number')\n *\n * assert.deepStrictEqual(T.decode(1), right(1))\n * assert.deepStrictEqual(PathReporter.report(T.decode(null)), ['Invalid number'])\n *\n * @since 0.4.3\n */\nexport function withMessage(codec, message) {\n  return withValidate(codec, function (i, c) {\n    return mapLeft(function () {\n      return [{\n        value: i,\n        context: c,\n        message: message(i, c),\n        actual: i\n      }];\n    })(codec.validate(i, c));\n  });\n}","map":{"version":3,"names":["withValidate","mapLeft","withMessage","codec","message","i","c","value","context","actual","validate"],"sources":["/Users/arthurfrancis/Documents/repo/imx-learning/workflows/link-app/react/node_modules/io-ts-types/es6/withMessage.js"],"sourcesContent":["import { withValidate } from './withValidate';\nimport { mapLeft } from 'fp-ts/es6/Either';\n/**\n * Returns a clone of the given codec that sets the given string as error messsage\n *\n * @example\n * import { withMessage } from 'io-ts-types/es6/withMessage'\n * import * as t from 'io-ts'\n * import { PathReporter } from 'io-ts/es6/PathReporter'\n * import { right } from 'fp-ts/es6/Either'\n *\n * const T = withMessage(t.number, () => 'Invalid number')\n *\n * assert.deepStrictEqual(T.decode(1), right(1))\n * assert.deepStrictEqual(PathReporter.report(T.decode(null)), ['Invalid number'])\n *\n * @since 0.4.3\n */\nexport function withMessage(codec, message) {\n    return withValidate(codec, function (i, c) {\n        return mapLeft(function () { return [\n            {\n                value: i,\n                context: c,\n                message: message(i, c),\n                actual: i\n            }\n        ]; })(codec.validate(i, c));\n    });\n}\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,gBAAgB;AAC7C,SAASC,OAAO,QAAQ,kBAAkB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,WAAW,CAACC,KAAK,EAAEC,OAAO,EAAE;EACxC,OAAOJ,YAAY,CAACG,KAAK,EAAE,UAAUE,CAAC,EAAEC,CAAC,EAAE;IACvC,OAAOL,OAAO,CAAC,YAAY;MAAE,OAAO,CAChC;QACIM,KAAK,EAAEF,CAAC;QACRG,OAAO,EAAEF,CAAC;QACVF,OAAO,EAAEA,OAAO,CAACC,CAAC,EAAEC,CAAC,CAAC;QACtBG,MAAM,EAAEJ;MACZ,CAAC,CACJ;IAAE,CAAC,CAAC,CAACF,KAAK,CAACO,QAAQ,CAACL,CAAC,EAAEC,CAAC,CAAC,CAAC;EAC/B,CAAC,CAAC;AACN"},"metadata":{},"sourceType":"module"}